{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_parentVault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "ApprovedTokensOut",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Received",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newTrader",
          "type": "address"
        }
      ],
      "name": "SegaTraderChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "SentOutAssets",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_SC",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "_method",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "SmartContractCall",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "smartContract",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "callSC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "smartContract",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "callSC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newTrader",
          "type": "address"
        }
      ],
      "name": "changeTrader",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseTransfers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "returnToVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "returnToVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sendNativeAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sendTokenAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "tokenApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpauseTransfers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/Tushar Sharma/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/Pausable.sol",
    "1": "C:/Users/Tushar Sharma/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
    "2": "C:/Users/Tushar Sharma/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Address.sol",
    "3": "C:/Users/Tushar Sharma/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
    "9": "contracts/4_Sega_v112.sol"
  },
  "ast": {
    "absolutePath": "contracts/4_Sega_v112.sol",
    "exportedSymbols": {
      "Address": [
        3235
      ],
      "Context": [
        3256
      ],
      "IERC20": [
        2046
      ],
      "Pausable": [
        2939
      ],
      "SEGA_v112": [
        2847
      ]
    },
    "id": 2848,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2318,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:9"
      },
      {
        "absolutePath": "C:/Users/Tushar Sharma/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 2320,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2848,
        "sourceUnit": 3236,
        "src": "64:66:9",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2319,
              "name": "Address",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "72:7:9",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Tushar Sharma/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2321,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2848,
        "sourceUnit": 2047,
        "src": "134:56:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Tushar Sharma/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 2322,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2848,
        "sourceUnit": 2940,
        "src": "192:55:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2323,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2939,
              "src": "506:8:9"
            },
            "id": 2324,
            "nodeType": "InheritanceSpecifier",
            "src": "506:8:9"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2847,
        "linearizedBaseContracts": [
          2847,
          2939,
          3256
        ],
        "name": "SEGA_v112",
        "nameLocation": "493:9:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2326,
            "mutability": "mutable",
            "name": "parentVault",
            "nameLocation": "552:11:9",
            "nodeType": "VariableDeclaration",
            "scope": 2847,
            "src": "528:35:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2325,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "528:15:9",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2328,
            "mutability": "mutable",
            "name": "trader",
            "nameLocation": "586:6:9",
            "nodeType": "VariableDeclaration",
            "scope": 2847,
            "src": "570:22:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2327,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "570:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "functionSelector": "54fd4d50",
            "id": 2331,
            "mutability": "constant",
            "name": "version",
            "nameLocation": "625:7:9",
            "nodeType": "VariableDeclaration",
            "scope": 2847,
            "src": "601:39:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2329,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "601:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130313032",
              "id": 2330,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "635:5:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10102_by_1",
                "typeString": "int_const 10102"
              },
              "value": "10102"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2334,
            "mutability": "constant",
            "name": "noAccess",
            "nameLocation": "665:8:9",
            "nodeType": "VariableDeclaration",
            "scope": 2847,
            "src": "649:48:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 2332,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "649:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "55736572206e6f7420417574686f72697a6564",
              "id": 2333,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "676:21:9",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_33d7feb102e605ab866b1adf26ec6ed9276d2742839ea4a4b2ae987004275b78",
                "typeString": "literal_string \"User not Authorized\""
              },
              "value": "User not Authorized"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 2337,
            "mutability": "constant",
            "name": "txnFail",
            "nameLocation": "720:7:9",
            "nodeType": "VariableDeclaration",
            "scope": 2847,
            "src": "704:46:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 2335,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "704:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "5472616e73616374696f6e204661696c6564",
              "id": 2336,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "730:20:9",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_f49bab5693f8c67a6b906bdcc8c0fbaa6df8951336f67051f176c0232fe9f578",
                "typeString": "literal_string \"Transaction Failed\""
              },
              "value": "Transaction Failed"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 2343,
            "name": "Received",
            "nameLocation": "789:8:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2339,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "814:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2343,
                  "src": "798:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2338,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "798:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2341,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "826:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2343,
                  "src": "821:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2340,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "821:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "797:36:9"
            },
            "src": "783:51:9"
          },
          {
            "anonymous": false,
            "id": 2351,
            "name": "SentOutAssets",
            "nameLocation": "852:13:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2345,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "882:3:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2351,
                  "src": "866:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2344,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "866:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2347,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "903:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2351,
                  "src": "887:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "887:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2349,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "919:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2351,
                  "src": "911:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "911:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "865:62:9"
            },
            "src": "846:82:9"
          },
          {
            "anonymous": false,
            "id": 2359,
            "name": "ApprovedTokensOut",
            "nameLocation": "940:17:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2353,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "974:3:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2359,
                  "src": "958:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "958:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2355,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "995:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2359,
                  "src": "979:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "979:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2357,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1011:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2359,
                  "src": "1003:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2356,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "957:62:9"
            },
            "src": "934:86:9"
          },
          {
            "anonymous": false,
            "id": 2367,
            "name": "SmartContractCall",
            "nameLocation": "1034:17:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2361,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_SC",
                  "nameLocation": "1068:3:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2367,
                  "src": "1052:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2360,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1052:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2363,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_method",
                  "nameLocation": "1088:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2367,
                  "src": "1073:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2362,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1073:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2365,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "1105:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2367,
                  "src": "1097:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2364,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1097:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1051:61:9"
            },
            "src": "1028:85:9"
          },
          {
            "anonymous": false,
            "id": 2371,
            "name": "SegaTraderChanged",
            "nameLocation": "1125:17:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2369,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newTrader",
                  "nameLocation": "1151:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2371,
                  "src": "1143:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1143:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1142:19:9"
            },
            "src": "1119:43:9"
          },
          {
            "body": {
              "id": 2377,
              "nodeType": "Block",
              "src": "1319:47:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2373,
                      "name": "_isParentVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2404,
                      "src": "1330:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 2374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1330:16:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2375,
                  "nodeType": "ExpressionStatement",
                  "src": "1330:16:9"
                },
                {
                  "id": 2376,
                  "nodeType": "PlaceholderStatement",
                  "src": "1357:1:9"
                }
              ]
            },
            "id": 2378,
            "name": "isParentVault",
            "nameLocation": "1303:13:9",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1316:2:9"
            },
            "src": "1294:72:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2384,
              "nodeType": "Block",
              "src": "1406:42:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2380,
                      "name": "_isTrader",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2418,
                      "src": "1417:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 2381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1417:11:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2382,
                  "nodeType": "ExpressionStatement",
                  "src": "1417:11:9"
                },
                {
                  "id": 2383,
                  "nodeType": "PlaceholderStatement",
                  "src": "1439:1:9"
                }
              ]
            },
            "id": 2385,
            "name": "isTrader",
            "nameLocation": "1395:8:9",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1403:2:9"
            },
            "src": "1386:62:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2391,
              "nodeType": "Block",
              "src": "1488:49:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2387,
                      "name": "_isVaultOrTrader",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2440,
                      "src": "1499:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 2388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1499:18:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2389,
                  "nodeType": "ExpressionStatement",
                  "src": "1499:18:9"
                },
                {
                  "id": 2390,
                  "nodeType": "PlaceholderStatement",
                  "src": "1528:1:9"
                }
              ]
            },
            "id": 2392,
            "name": "isVaultOrTrader",
            "nameLocation": "1470:15:9",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1485:2:9"
            },
            "src": "1461:76:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2403,
              "nodeType": "Block",
              "src": "1585:63:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2396,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1604:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1604:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2398,
                          "name": "parentVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2326,
                          "src": "1618:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1604:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 2400,
                        "name": "noAccess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2334,
                        "src": "1631:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2395,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1596:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1596:44:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2402,
                  "nodeType": "ExpressionStatement",
                  "src": "1596:44:9"
                }
              ]
            },
            "id": 2404,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isParentVault",
            "nameLocation": "1554:14:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1568:2:9"
            },
            "returnParameters": {
              "id": 2394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1585:0:9"
            },
            "scope": 2847,
            "src": "1545:103:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2417,
              "nodeType": "Block",
              "src": "1717:58:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2410,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1736:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1736:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2412,
                          "name": "trader",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2328,
                          "src": "1750:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1736:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 2414,
                        "name": "noAccess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2334,
                        "src": "1758:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2409,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1728:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1728:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2416,
                  "nodeType": "ExpressionStatement",
                  "src": "1728:39:9"
                }
              ]
            },
            "id": 2418,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2407,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2406,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2895,
                  "src": "1689:13:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "1689:13:9"
              }
            ],
            "name": "_isTrader",
            "nameLocation": "1677:9:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1686:2:9"
            },
            "returnParameters": {
              "id": 2408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1717:0:9"
            },
            "scope": 2847,
            "src": "1668:107:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2439,
              "nodeType": "Block",
              "src": "1830:140:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2422,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1850:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1850:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2424,
                            "name": "parentVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2326,
                            "src": "1864:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1850:25:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2428,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "1897:9:9",
                                "subExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 2426,
                                    "name": "paused",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2883,
                                    "src": "1898:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                      "typeString": "function () view returns (bool)"
                                    }
                                  },
                                  "id": 2427,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1898:8:9",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2432,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2429,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1910:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2430,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1910:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 2431,
                                  "name": "trader",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2328,
                                  "src": "1924:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1910:20:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1897:33:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 2434,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1896:35:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1850:81:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 2436,
                        "name": "noAccess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2334,
                        "src": "1943:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2421,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1841:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1841:121:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2438,
                  "nodeType": "ExpressionStatement",
                  "src": "1841:121:9"
                }
              ]
            },
            "id": 2440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isVaultOrTrader",
            "nameLocation": "1797:16:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1813:2:9"
            },
            "returnParameters": {
              "id": 2420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1830:0:9"
            },
            "scope": 2847,
            "src": "1788:182:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2455,
              "nodeType": "Block",
              "src": "2028:79:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2446,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2442,
                          "src": "2048:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2068:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2060:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2447,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2060:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2060:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2048:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5a65726f2041646472657373204e6f7420416c6c6f776564",
                        "id": 2452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2072:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38af8dc8d870d5c15a2a4a83c8c2cd646e99c527c13b2d0d868792bf7f2eeffa",
                          "typeString": "literal_string \"Zero Address Not Allowed\""
                        },
                        "value": "Zero Address Not Allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38af8dc8d870d5c15a2a4a83c8c2cd646e99c527c13b2d0d868792bf7f2eeffa",
                          "typeString": "literal_string \"Zero Address Not Allowed\""
                        }
                      ],
                      "id": 2445,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2039:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2039:60:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2454,
                  "nodeType": "ExpressionStatement",
                  "src": "2039:60:9"
                }
              ]
            },
            "id": 2456,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_notZero",
            "nameLocation": "1987:8:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2442,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2004:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2456,
                  "src": "1996:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1996:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1995:18:9"
            },
            "returnParameters": {
              "id": 2444,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2028:0:9"
            },
            "scope": 2847,
            "src": "1978:129:9",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2477,
              "nodeType": "Block",
              "src": "2185:94:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2469,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2229:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SEGA_v112_$2847",
                                    "typeString": "contract SEGA_v112"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SEGA_v112_$2847",
                                    "typeString": "contract SEGA_v112"
                                  }
                                ],
                                "id": 2468,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2221:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2467,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2221:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2470,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2221:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2465,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2459,
                              "src": "2204:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2046",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1985,
                            "src": "2204:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2204:31:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2472,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2461,
                          "src": "2239:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2204:42:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e6365",
                        "id": 2474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2248:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        },
                        "value": "Insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        }
                      ],
                      "id": 2464,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2196:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2196:75:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2476,
                  "nodeType": "ExpressionStatement",
                  "src": "2196:75:9"
                }
              ]
            },
            "id": 2478,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_enoughBalance",
            "nameLocation": "2124:14:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2459,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2146:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2478,
                  "src": "2139:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2046",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 2458,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2457,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2046,
                      "src": "2139:6:9"
                    },
                    "referencedDeclaration": 2046,
                    "src": "2139:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2046",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2461,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2162:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2478,
                  "src": "2154:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2154:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2138:32:9"
            },
            "returnParameters": {
              "id": 2463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2185:0:9"
            },
            "scope": 2847,
            "src": "2115:164:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2496,
              "nodeType": "Block",
              "src": "2489:80:9",
              "statements": [
                {
                  "expression": {
                    "id": 2490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2485,
                      "name": "parentVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2326,
                      "src": "2500:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2488,
                          "name": "_parentVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2480,
                          "src": "2522:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2514:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 2486,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2514:8:9",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2514:21:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2500:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2491,
                  "nodeType": "ExpressionStatement",
                  "src": "2500:35:9"
                },
                {
                  "expression": {
                    "id": 2494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2492,
                      "name": "trader",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2328,
                      "src": "2546:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2493,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2482,
                      "src": "2555:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2546:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2495,
                  "nodeType": "ExpressionStatement",
                  "src": "2546:15:9"
                }
              ]
            },
            "id": 2497,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2480,
                  "mutability": "mutable",
                  "name": "_parentVault",
                  "nameLocation": "2459:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2497,
                  "src": "2451:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2479,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2451:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2482,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "2481:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2497,
                  "src": "2473:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2473:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2450:38:9"
            },
            "returnParameters": {
              "id": 2484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2489:0:9"
            },
            "scope": 2847,
            "src": "2439:130:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2507,
              "nodeType": "Block",
              "src": "2608:55:9",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2501,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2633:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2633:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2503,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2645:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2645:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2500,
                      "name": "Received",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2343,
                      "src": "2624:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2624:31:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2506,
                  "nodeType": "EmitStatement",
                  "src": "2619:36:9"
                }
              ]
            },
            "id": 2508,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2588:2:9"
            },
            "returnParameters": {
              "id": 2499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2608:0:9"
            },
            "scope": 2847,
            "src": "2581:82:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2524,
              "nodeType": "Block",
              "src": "2703:100:9",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2511,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2718:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2718:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2730:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2718:13:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2523,
                  "nodeType": "IfStatement",
                  "src": "2714:82:9",
                  "trueBody": {
                    "id": 2522,
                    "nodeType": "Block",
                    "src": "2733:63:9",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2516,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2762:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2762:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2518,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2774:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "2774:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2515,
                            "name": "Received",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2343,
                            "src": "2753:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2753:31:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2521,
                        "nodeType": "EmitStatement",
                        "src": "2748:36:9"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 2525,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2683:2:9"
            },
            "returnParameters": {
              "id": 2510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2703:0:9"
            },
            "scope": 2847,
            "src": "2675:128:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2533,
              "nodeType": "Block",
              "src": "3187:27:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2530,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2922,
                      "src": "3198:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3198:8:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2532,
                  "nodeType": "ExpressionStatement",
                  "src": "3198:8:9"
                }
              ]
            },
            "functionSelector": "47af9957",
            "id": 2534,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2528,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2527,
                  "name": "isParentVault",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2378,
                  "src": "3173:13:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "3173:13:9"
              }
            ],
            "name": "pauseTransfers",
            "nameLocation": "3147:14:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3161:2:9"
            },
            "returnParameters": {
              "id": 2529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3187:0:9"
            },
            "scope": 2847,
            "src": "3138:76:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2542,
              "nodeType": "Block",
              "src": "3271:29:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2539,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2938,
                      "src": "3282:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3282:10:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2541,
                  "nodeType": "ExpressionStatement",
                  "src": "3282:10:9"
                }
              ]
            },
            "functionSelector": "8936a91f",
            "id": 2543,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2537,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2536,
                  "name": "isParentVault",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2378,
                  "src": "3257:13:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "3257:13:9"
              }
            ],
            "name": "unpauseTransfers",
            "nameLocation": "3229:16:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3245:2:9"
            },
            "returnParameters": {
              "id": 2538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3271:0:9"
            },
            "scope": 2847,
            "src": "3220:80:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2558,
              "nodeType": "Block",
              "src": "3424:83:9",
              "statements": [
                {
                  "expression": {
                    "id": 2552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2550,
                      "name": "trader",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2328,
                      "src": "3435:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2551,
                      "name": "_newTrader",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2545,
                      "src": "3444:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3435:19:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2553,
                  "nodeType": "ExpressionStatement",
                  "src": "3435:19:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2555,
                        "name": "_newTrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2545,
                        "src": "3488:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2554,
                      "name": "SegaTraderChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2371,
                      "src": "3470:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3470:29:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2557,
                  "nodeType": "EmitStatement",
                  "src": "3465:34:9"
                }
              ]
            },
            "functionSelector": "03fa1417",
            "id": 2559,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2548,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2547,
                  "name": "isParentVault",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2378,
                  "src": "3410:13:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "3410:13:9"
              }
            ],
            "name": "changeTrader",
            "nameLocation": "3367:12:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2545,
                  "mutability": "mutable",
                  "name": "_newTrader",
                  "nameLocation": "3389:10:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2559,
                  "src": "3381:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2544,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3381:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3380:20:9"
            },
            "returnParameters": {
              "id": 2549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3424:0:9"
            },
            "scope": 2847,
            "src": "3358:149:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2582,
              "nodeType": "Block",
              "src": "3787:121:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2569,
                        "name": "parentVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2326,
                        "src": "3816:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 2570,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2561,
                        "src": "3829:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2566,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3235,
                        "src": "3798:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$3235_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 2568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2993,
                      "src": "3798:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 2571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3798:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2572,
                  "nodeType": "ExpressionStatement",
                  "src": "3798:39:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2574,
                        "name": "parentVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2326,
                        "src": "3867:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3888:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3880:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2575,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3880:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3880:10:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2579,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2561,
                        "src": "3892:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2573,
                      "name": "SentOutAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2351,
                      "src": "3853:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3853:47:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2581,
                  "nodeType": "EmitStatement",
                  "src": "3848:52:9"
                }
              ]
            },
            "functionSelector": "2fb0b77e",
            "id": 2583,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2564,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2563,
                  "name": "isVaultOrTrader",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2392,
                  "src": "3771:15:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "3771:15:9"
              }
            ],
            "name": "returnToVault",
            "nameLocation": "3733:13:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2561,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3755:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2583,
                  "src": "3747:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2560,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3747:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3746:17:9"
            },
            "returnParameters": {
              "id": 2565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3787:0:9"
            },
            "scope": 2847,
            "src": "3724:184:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2627,
              "nodeType": "Block",
              "src": "4047:272:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2593,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2585,
                        "src": "4067:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2592,
                      "name": "_notZero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2456,
                      "src": "4058:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 2594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4058:16:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2595,
                  "nodeType": "ExpressionStatement",
                  "src": "4058:16:9"
                },
                {
                  "assignments": [
                    2598
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2598,
                      "mutability": "mutable",
                      "name": "Token",
                      "nameLocation": "4092:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2627,
                      "src": "4085:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2046",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2597,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2596,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2046,
                          "src": "4085:6:9"
                        },
                        "referencedDeclaration": 2046,
                        "src": "4085:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2046",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2602,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2600,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2585,
                        "src": "4107:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2599,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2046,
                      "src": "4100:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2046_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 2601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4100:14:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2046",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4085:29:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2604,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2598,
                        "src": "4140:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2046",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 2605,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2587,
                        "src": "4147:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$2046",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2603,
                      "name": "_enoughBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2478,
                      "src": "4125:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$2046_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) view"
                      }
                    },
                    "id": 2606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4125:30:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2607,
                  "nodeType": "ExpressionStatement",
                  "src": "4125:30:9"
                },
                {
                  "assignments": [
                    2609
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2609,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "4171:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2627,
                      "src": "4166:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2608,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4166:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2615,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2612,
                        "name": "parentVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2326,
                        "src": "4196:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 2613,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2587,
                        "src": "4208:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2610,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2598,
                        "src": "4181:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2046",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1995,
                      "src": "4181:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4181:35:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4166:50:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2617,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2609,
                        "src": "4235:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 2618,
                        "name": "txnFail",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2337,
                        "src": "4244:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2616,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4227:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4227:25:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2620,
                  "nodeType": "ExpressionStatement",
                  "src": "4227:25:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2622,
                        "name": "parentVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2326,
                        "src": "4282:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 2623,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2585,
                        "src": "4295:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2624,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2587,
                        "src": "4303:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2621,
                      "name": "SentOutAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2351,
                      "src": "4268:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4268:43:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2626,
                  "nodeType": "EmitStatement",
                  "src": "4263:48:9"
                }
              ]
            },
            "functionSelector": "d0f108eb",
            "id": 2628,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2590,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2589,
                  "name": "isVaultOrTrader",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2392,
                  "src": "4031:15:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "4031:15:9"
              }
            ],
            "name": "returnToVault",
            "nameLocation": "3977:13:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2585,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3999:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2628,
                  "src": "3991:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3991:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2587,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4015:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2628,
                  "src": "4007:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2586,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4007:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3990:33:9"
            },
            "returnParameters": {
              "id": 2591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4047:0:9"
            },
            "scope": 2847,
            "src": "3968:351:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2657,
              "nodeType": "Block",
              "src": "4769:142:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2638,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2630,
                        "src": "4789:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2637,
                      "name": "_notZero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2456,
                      "src": "4780:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 2639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4780:18:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2640,
                  "nodeType": "ExpressionStatement",
                  "src": "4780:18:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2644,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2630,
                        "src": "4827:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 2645,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2632,
                        "src": "4837:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2641,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3235,
                        "src": "4809:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$3235_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 2643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2993,
                      "src": "4809:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 2646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4809:35:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2647,
                  "nodeType": "ExpressionStatement",
                  "src": "4809:35:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2649,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2630,
                        "src": "4874:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4892:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4884:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2650,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4884:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4884:10:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2654,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2632,
                        "src": "4896:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2648,
                      "name": "SentOutAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2351,
                      "src": "4860:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4860:43:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2656,
                  "nodeType": "EmitStatement",
                  "src": "4855:48:9"
                }
              ]
            },
            "functionSelector": "6880aafe",
            "id": 2658,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2635,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2634,
                  "name": "isTrader",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2385,
                  "src": "4760:8:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "4760:8:9"
              }
            ],
            "name": "sendNativeAssets",
            "nameLocation": "4694:16:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2630,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "4727:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2658,
                  "src": "4711:24:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2629,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4711:15:9",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2632,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4745:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2658,
                  "src": "4737:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2631,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4737:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4710:42:9"
            },
            "returnParameters": {
              "id": 2636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4769:0:9"
            },
            "scope": 2847,
            "src": "4685:226:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2708,
              "nodeType": "Block",
              "src": "5094:293:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2670,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2662,
                        "src": "5114:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2669,
                      "name": "_notZero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2456,
                      "src": "5105:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 2671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5105:16:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2672,
                  "nodeType": "ExpressionStatement",
                  "src": "5105:16:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2674,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2660,
                        "src": "5141:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2673,
                      "name": "_notZero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2456,
                      "src": "5132:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 2675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5132:18:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2676,
                  "nodeType": "ExpressionStatement",
                  "src": "5132:18:9"
                },
                {
                  "assignments": [
                    2679
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2679,
                      "mutability": "mutable",
                      "name": "Token",
                      "nameLocation": "5168:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2708,
                      "src": "5161:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2046",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2678,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2677,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2046,
                          "src": "5161:6:9"
                        },
                        "referencedDeclaration": 2046,
                        "src": "5161:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2046",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2683,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2681,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2662,
                        "src": "5183:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2680,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2046,
                      "src": "5176:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2046_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 2682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5176:14:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2046",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5161:29:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2685,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2679,
                        "src": "5216:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2046",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 2686,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2664,
                        "src": "5223:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$2046",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2684,
                      "name": "_enoughBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2478,
                      "src": "5201:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$2046_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) view"
                      }
                    },
                    "id": 2687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5201:29:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2688,
                  "nodeType": "ExpressionStatement",
                  "src": "5201:29:9"
                },
                {
                  "assignments": [
                    2690
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2690,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "5246:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2708,
                      "src": "5241:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2689,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5241:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2696,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2693,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2660,
                        "src": "5271:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2694,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2664,
                        "src": "5281:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2691,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2679,
                        "src": "5256:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2046",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1995,
                      "src": "5256:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5256:32:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5241:47:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2698,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2690,
                        "src": "5307:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 2699,
                        "name": "txnFail",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2337,
                        "src": "5316:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2697,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5299:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5299:25:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2701,
                  "nodeType": "ExpressionStatement",
                  "src": "5299:25:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2703,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2660,
                        "src": "5354:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2704,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2662,
                        "src": "5364:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2705,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2664,
                        "src": "5372:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2702,
                      "name": "SentOutAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2351,
                      "src": "5340:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5340:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2707,
                  "nodeType": "EmitStatement",
                  "src": "5335:44:9"
                }
              ]
            },
            "functionSelector": "d04f74ea",
            "id": 2709,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2667,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2666,
                  "name": "isTrader",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2385,
                  "src": "5085:8:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "5085:8:9"
              }
            ],
            "name": "sendTokenAssets",
            "nameLocation": "5012:15:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2660,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "5036:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2709,
                  "src": "5028:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2659,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5028:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2662,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5054:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2709,
                  "src": "5046:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2661,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5046:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2664,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5070:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2709,
                  "src": "5062:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5062:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5027:50:9"
            },
            "returnParameters": {
              "id": 2668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5094:0:9"
            },
            "scope": 2847,
            "src": "5003:384:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2754,
              "nodeType": "Block",
              "src": "5486:253:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2721,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2713,
                        "src": "5506:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2720,
                      "name": "_notZero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2456,
                      "src": "5497:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 2722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5497:16:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2723,
                  "nodeType": "ExpressionStatement",
                  "src": "5497:16:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2725,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2711,
                        "src": "5533:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2724,
                      "name": "_notZero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2456,
                      "src": "5524:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 2726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5524:17:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2727,
                  "nodeType": "ExpressionStatement",
                  "src": "5524:17:9"
                },
                {
                  "assignments": [
                    2730
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2730,
                      "mutability": "mutable",
                      "name": "Token",
                      "nameLocation": "5559:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2754,
                      "src": "5552:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2046",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2729,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2728,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2046,
                          "src": "5552:6:9"
                        },
                        "referencedDeclaration": 2046,
                        "src": "5552:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2046",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2734,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2732,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2713,
                        "src": "5574:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2731,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2046,
                      "src": "5567:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2046_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 2733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5567:14:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2046",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5552:29:9"
                },
                {
                  "assignments": [
                    2736
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2736,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "5597:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2754,
                      "src": "5592:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2735,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5592:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2742,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2739,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2711,
                        "src": "5621:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2740,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2715,
                        "src": "5630:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2737,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2730,
                        "src": "5607:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2046",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2015,
                      "src": "5607:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5607:30:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5592:45:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2744,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2736,
                        "src": "5656:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 2745,
                        "name": "txnFail",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2337,
                        "src": "5665:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2743,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5648:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5648:25:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2747,
                  "nodeType": "ExpressionStatement",
                  "src": "5648:25:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2749,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2711,
                        "src": "5707:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2750,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2713,
                        "src": "5716:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2751,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2715,
                        "src": "5724:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2748,
                      "name": "ApprovedTokensOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2359,
                      "src": "5689:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5689:42:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2753,
                  "nodeType": "EmitStatement",
                  "src": "5684:47:9"
                }
              ]
            },
            "functionSelector": "fb3f4d29",
            "id": 2755,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2718,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2717,
                  "name": "isTrader",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2385,
                  "src": "5477:8:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "5477:8:9"
              }
            ],
            "name": "tokenApprove",
            "nameLocation": "5408:12:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2711,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "5429:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2755,
                  "src": "5421:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5421:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2713,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5446:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2755,
                  "src": "5438:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2712,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5438:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2715,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5462:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2755,
                  "src": "5454:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2714,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5454:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5420:49:9"
            },
            "returnParameters": {
              "id": 2719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5486:0:9"
            },
            "scope": 2847,
            "src": "5399:340:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2785,
              "nodeType": "Block",
              "src": "5974:182:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2767,
                        "name": "smartContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2757,
                        "src": "6015:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2768,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2759,
                        "src": "6030:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 2769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6036:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 2770,
                        "name": "txnFail",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2337,
                        "src": "6039:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 2764,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3235,
                        "src": "5985:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$3235_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 2766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "functionCallWithValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3100,
                      "src": "5985:29:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 2771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5985:62:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 2772,
                  "nodeType": "ExpressionStatement",
                  "src": "5985:62:9"
                },
                {
                  "assignments": [
                    2774
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2774,
                      "mutability": "mutable",
                      "name": "method",
                      "nameLocation": "6065:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2785,
                      "src": "6058:13:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 2773,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "6058:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2778,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2776,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2759,
                        "src": "6084:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2775,
                      "name": "getMethod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2828,
                      "src": "6074:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (bytes memory) pure returns (bytes4)"
                      }
                    },
                    "id": 2777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6074:15:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6058:31:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2780,
                        "name": "smartContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2757,
                        "src": "6123:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2781,
                        "name": "method",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2774,
                        "src": "6138:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 2782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6146:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 2779,
                      "name": "SmartContractCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2367,
                      "src": "6105:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes4_$_t_uint256_$returns$__$",
                        "typeString": "function (address,bytes4,uint256)"
                      }
                    },
                    "id": 2783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6105:43:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2784,
                  "nodeType": "EmitStatement",
                  "src": "6100:48:9"
                }
              ]
            },
            "functionSelector": "c3b60ca6",
            "id": 2786,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2762,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2761,
                  "name": "isTrader",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2385,
                  "src": "5965:8:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "5965:8:9"
              }
            ],
            "name": "callSC",
            "nameLocation": "5909:6:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2757,
                  "mutability": "mutable",
                  "name": "smartContract",
                  "nameLocation": "5924:13:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2786,
                  "src": "5916:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5916:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2759,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5952:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2786,
                  "src": "5939:17:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2758,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5939:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5915:42:9"
            },
            "returnParameters": {
              "id": 2763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5974:0:9"
            },
            "scope": 2847,
            "src": "5900:256:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2818,
              "nodeType": "Block",
              "src": "6258:192:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2800,
                        "name": "smartContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2788,
                        "src": "6299:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2801,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2790,
                        "src": "6314:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 2802,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2792,
                        "src": "6320:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2803,
                        "name": "txnFail",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2337,
                        "src": "6328:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 2797,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3235,
                        "src": "6269:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$3235_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 2799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "functionCallWithValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3100,
                      "src": "6269:29:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 2804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6269:67:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 2805,
                  "nodeType": "ExpressionStatement",
                  "src": "6269:67:9"
                },
                {
                  "assignments": [
                    2807
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2807,
                      "mutability": "mutable",
                      "name": "method",
                      "nameLocation": "6354:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2818,
                      "src": "6347:13:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 2806,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "6347:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2811,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2809,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2790,
                        "src": "6373:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2808,
                      "name": "getMethod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2828,
                      "src": "6363:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (bytes memory) pure returns (bytes4)"
                      }
                    },
                    "id": 2810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6363:15:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6347:31:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2813,
                        "name": "smartContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2788,
                        "src": "6412:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2814,
                        "name": "method",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2807,
                        "src": "6427:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "id": 2815,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2792,
                        "src": "6435:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2812,
                      "name": "SmartContractCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2367,
                      "src": "6394:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes4_$_t_uint256_$returns$__$",
                        "typeString": "function (address,bytes4,uint256)"
                      }
                    },
                    "id": 2816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6394:48:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2817,
                  "nodeType": "EmitStatement",
                  "src": "6389:53:9"
                }
              ]
            },
            "functionSelector": "d4a015e4",
            "id": 2819,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2795,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2794,
                  "name": "isTrader",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2385,
                  "src": "6249:8:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "6249:8:9"
              }
            ],
            "name": "callSC",
            "nameLocation": "6177:6:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2788,
                  "mutability": "mutable",
                  "name": "smartContract",
                  "nameLocation": "6192:13:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2819,
                  "src": "6184:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6184:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2790,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "6220:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2819,
                  "src": "6207:17:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2789,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6207:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2792,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "6234:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2819,
                  "src": "6226:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6226:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6183:58:9"
            },
            "returnParameters": {
              "id": 2796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6258:0:9"
            },
            "scope": 2847,
            "src": "6168:282:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2827,
              "nodeType": "Block",
              "src": "6660:102:9",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "6680:75:9",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "6695:22:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "_data",
                              "nodeType": "YulIdentifier",
                              "src": "6708:5:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6714:2:9",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6704:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6704:13:9"
                        },
                        "variables": [
                          {
                            "name": "a",
                            "nodeType": "YulTypedName",
                            "src": "6699:1:9",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6731:13:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "a",
                              "nodeType": "YulIdentifier",
                              "src": "6742:1:9"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "6736:5:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6736:8:9"
                        },
                        "variableNames": [
                          {
                            "name": "M",
                            "nodeType": "YulIdentifier",
                            "src": "6731:1:9"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2824,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "6731:1:9",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2821,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "6708:5:9",
                      "valueSize": 1
                    }
                  ],
                  "id": 2826,
                  "nodeType": "InlineAssembly",
                  "src": "6671:84:9"
                }
              ]
            },
            "id": 2828,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMethod",
            "nameLocation": "6597:9:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2821,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "6620:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2828,
                  "src": "6607:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2820,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6607:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6606:20:9"
            },
            "returnParameters": {
              "id": 2825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2824,
                  "mutability": "mutable",
                  "name": "M",
                  "nameLocation": "6657:1:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2828,
                  "src": "6650:8:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2823,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "6650:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6649:10:9"
            },
            "scope": 2847,
            "src": "6588:174:9",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2845,
              "nodeType": "Block",
              "src": "6834:60:9",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 2837,
                        "name": "parentVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2326,
                        "src": "6853:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 2838,
                        "name": "trader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2328,
                        "src": "6866:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6874:11:9",
                        "subExpression": {
                          "components": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2839,
                                "name": "paused",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2883,
                                "src": "6876:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                  "typeString": "function () view returns (bool)"
                                }
                              },
                              "id": 2840,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6876:8:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 2841,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6875:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 2843,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6852:34:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_$_t_bool_$",
                      "typeString": "tuple(address payable,address,bool)"
                    }
                  },
                  "functionReturnParameters": 2836,
                  "id": 2844,
                  "nodeType": "Return",
                  "src": "6845:41:9"
                }
              ]
            },
            "functionSelector": "5a9b0b89",
            "id": 2846,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInfo",
            "nameLocation": "6779:7:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6786:2:9"
            },
            "returnParameters": {
              "id": 2836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2831,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2846,
                  "src": "6810:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2830,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6810:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2833,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2846,
                  "src": "6819:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6819:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2835,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2846,
                  "src": "6828:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2834,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6828:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6809:24:9"
            },
            "scope": 2847,
            "src": "6770:124:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2848,
        "src": "484:6415:9",
        "usedErrors": []
      }
    ],
    "src": "37:6862:9"
  },
  "bytecode": "",
  "bytecodeSha1": "6fbd64ddc29f2e6039a043540d75b5b779996d6c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "SEGA_v112",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "2": {
        "Address._verifyCallResult": {
          "56": [
            7124,
            7131,
            false
          ],
          "57": [
            7265,
            7286,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "55": [
            4745,
            4775,
            true
          ]
        },
        "Address.sendValue": {
          "53": [
            2101,
            2132,
            true
          ],
          "54": [
            2247,
            2254,
            true
          ]
        }
      },
      "3": {},
      "9": {
        "SEGA_v112.<fallback>": {
          "47": [
            2718,
            2731,
            false
          ]
        },
        "SEGA_v112._isParentVault": {
          "48": [
            1604,
            1629,
            true
          ]
        },
        "SEGA_v112._isTrader": {
          "51": [
            1736,
            1756,
            true
          ]
        },
        "SEGA_v112._isVaultOrTrader": {
          "49": [
            1850,
            1875,
            true
          ],
          "50": [
            1910,
            1930,
            true
          ]
        },
        "SEGA_v112._notZero": {
          "52": [
            2048,
            2070,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Pausable._pause": {
          "34": [
            1865,
            1879
          ],
          "35": [
            1889,
            1914
          ]
        },
        "Pausable._unpause": {
          "39": [
            2111,
            2126
          ],
          "40": [
            2136,
            2163
          ]
        },
        "Pausable.paused": {
          "3": [
            1104,
            1118
          ]
        }
      },
      "1": {},
      "2": {
        "Address._verifyCallResult": {
          "45": [
            7147,
            7164
          ],
          "46": [
            7591,
            7611
          ]
        },
        "Address.functionCallWithValue": {
          "41": [
            4737,
            4818
          ],
          "42": [
            4828,
            4888
          ],
          "43": [
            4982,
            5041
          ]
        },
        "Address.sendValue": {
          "32": [
            2093,
            2166
          ],
          "33": [
            2239,
            2317
          ]
        }
      },
      "3": {
        "Context._msgSender": {
          "36": [
            658,
            675
          ]
        }
      },
      "9": {
        "SEGA_v112.<fallback>": {
          "1": [
            2748,
            2784
          ]
        },
        "SEGA_v112.<receive>": {
          "0": [
            2619,
            2655
          ]
        },
        "SEGA_v112._enoughBalance": {
          "44": [
            2196,
            2271
          ]
        },
        "SEGA_v112._isParentVault": {
          "30": [
            1596,
            1640
          ]
        },
        "SEGA_v112._isTrader": {
          "37": [
            1728,
            1767
          ]
        },
        "SEGA_v112._isVaultOrTrader": {
          "31": [
            1841,
            1962
          ]
        },
        "SEGA_v112._notZero": {
          "38": [
            2039,
            2099
          ]
        },
        "SEGA_v112.callSC": {
          "13": [
            5985,
            6047
          ],
          "14": [
            6100,
            6148
          ],
          "24": [
            6269,
            6336
          ],
          "25": [
            6389,
            6442
          ]
        },
        "SEGA_v112.changeTrader": {
          "4": [
            3435,
            3454
          ],
          "5": [
            3465,
            3499
          ]
        },
        "SEGA_v112.getInfo": {
          "2": [
            6845,
            6886
          ]
        },
        "SEGA_v112.pauseTransfers": {
          "8": [
            3198,
            3206
          ]
        },
        "SEGA_v112.returnToVault": {
          "6": [
            3798,
            3837
          ],
          "7": [
            3848,
            3900
          ],
          "20": [
            4058,
            4074
          ],
          "21": [
            4125,
            4155
          ],
          "22": [
            4227,
            4252
          ],
          "23": [
            4263,
            4311
          ]
        },
        "SEGA_v112.sendNativeAssets": {
          "9": [
            4780,
            4798
          ],
          "10": [
            4809,
            4844
          ],
          "11": [
            4855,
            4903
          ]
        },
        "SEGA_v112.sendTokenAssets": {
          "15": [
            5105,
            5121
          ],
          "16": [
            5132,
            5150
          ],
          "17": [
            5201,
            5230
          ],
          "18": [
            5299,
            5324
          ],
          "19": [
            5335,
            5379
          ]
        },
        "SEGA_v112.tokenApprove": {
          "26": [
            5497,
            5513
          ],
          "27": [
            5524,
            5541
          ],
          "28": [
            5648,
            5673
          ],
          "29": [
            5684,
            5731
          ]
        },
        "SEGA_v112.unpauseTransfers": {
          "12": [
            3282,
            3292
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Pausable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "484:6415:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2624:31;;2645:9;5741:25:14;;2633:10:9;;2624:31;;5729:2:14;5714:18;2624:31:9;;;;;;;;484:6415;;2718:9;:13;2714:82;;2753:31;;2774:9;5741:25:14;;2762:10:9;;2753:31;;5729:2:14;5714:18;2753:31:9;5696:76:14;2714:82:9;484:6415;3358:149;;;;;;;;;;-1:-1:-1;3358:149:9;;;;;:::i;:::-;;:::i;3724:184::-;;;;;;;;;;-1:-1:-1;3724:184:9;;;;;:::i;:::-;;:::i;3138:76::-;;;;;;;;;;;;;:::i;601:39::-;;;;;;;;;;;;635:5;601:39;;;;;5741:25:14;;;5729:2;5714:18;601:39:9;;;;;;;;6770:124;;;;;;;;;;-1:-1:-1;6810:7:9;6853:11;;6866:6;6770:124;;;-1:-1:-1;;;;;6853:11:9;;;;;4960:34:14;;6866:6:9;;;5025:2:14;5010:18;;5003:43;1111:7:0;;;;6874:11:9;5062:18:14;;;5055:50;;;;4910:2;4895:18;6770:124:9;4877:234:14;1041:84:0;;;;;;;;;;-1:-1:-1;1088:4:0;1111:7;;;1041:84;;5560:14:14;;5553:22;5535:41;;5523:2;5508:18;1041:84:0;5490:92:14;4685:226:9;;;;;;;;;;-1:-1:-1;4685:226:9;;;;;:::i;:::-;;:::i;3220:80::-;;;;;;;;;;;;;:::i;5900:256::-;;;;;;;;;;-1:-1:-1;5900:256:9;;;;;:::i;:::-;;:::i;5003:384::-;;;;;;;;;;-1:-1:-1;5003:384:9;;;;;:::i;:::-;;:::i;3968:351::-;;;;;;;;;;-1:-1:-1;3968:351:9;;;;;:::i;:::-;;:::i;6168:282::-;;;;;;;;;;-1:-1:-1;6168:282:9;;;;;:::i;:::-;;:::i;5399:340::-;;;;;;;;;;-1:-1:-1;5399:340:9;;;;;:::i;:::-;;:::i;3358:149::-;1330:16;:14;:16::i;:::-;3435:6:::1;:19:::0;;-1:-1:-1;;;;;3435:19:9;::::1;-1:-1:-1::0;;;;;;3435:19:9;;::::1;::::0;::::1;::::0;;;3470:29:::1;::::0;;4377:51:14;;;3470:29:9;::::1;::::0;;;;4365:2:14;3470:29:9;;::::1;3358:149:::0;:::o;3724:184::-;1499:18;:16;:18::i;:::-;3816:11:::1;::::0;3798:39:::1;::::0;3816:11:::1;::::0;::::1;-1:-1:-1::0;;;;;3816:11:9::1;3829:7:::0;3798:17:::1;:39::i;:::-;3888:1;3867:11:::0;;3853:47:::1;::::0;3867:11:::1;::::0;;::::1;-1:-1:-1::0;;;;;3867:11:9::1;::::0;-1:-1:-1;;;;;;;;;;;5741:25:14;;;-1:-1:-1;5729:2:14;5714:18;3853:47:9::1;;;;;;;3724:184:::0;:::o;3138:76::-;1330:16;:14;:16::i;:::-;3198:8:::1;:6;:8::i;:::-;3138:76::o:0;4685:226::-;1417:11;:9;:11::i;:::-;4780:18:::1;4789:8;4780;:18::i;:::-;4809:35;4827:8;4837:6;4809:17;:35::i;:::-;4860:43;::::0;5741:25:14;;;4892:1:9::1;-1:-1:-1::0;;4892:1:9;;-1:-1:-1;;;;;4860:43:9;::::1;::::0;4892:1;;-1:-1:-1;;4892:1:9;-1:-1:-1;;;;;4860:43:9;5729:2:14;5714:18;4860:43:9::1;;;;;;;4685:226:::0;;:::o;3220:80::-;1330:16;:14;:16::i;:::-;3282:10:::1;:8;:10::i;5900:256::-:0;1417:11;:9;:11::i;:::-;5985:62:::1;6015:13;6030:4;6036:1;6039:7;;;;;;;;;;;;;-1:-1:-1::0;;;6039:7:9::1;;::::0;5985:29:::1;:62::i;:::-;;6058:13;6074:15;6084:4;6714:2:::0;6704:13;6736:8;;6588:174;6074:15:::1;6105:43;::::0;6146:1:::1;5741:25:14::0;;6058:31:9;;-1:-1:-1;;;;;;;6105:43:9;::::1;::::0;-1:-1:-1;;;;;6105:43:9;::::1;::::0;::::1;::::0;5729:2:14;5714:18;6105:43:9::1;;;;;;;5974:182;5900:256:::0;;:::o;5003:384::-;1417:11;:9;:11::i;:::-;5105:16:::1;5114:6;5105:8;:16::i;:::-;5132:18;5141:8;5132;:18::i;:::-;5183:6:::0;5201:29:::1;5183:6:::0;5223;5201:14:::1;:29::i;:::-;5256:32;::::0;-1:-1:-1;;;5256:32:9;;-1:-1:-1;;;;;4639:32:14;;;5256::9::1;::::0;::::1;4621:51:14::0;4688:18;;;4681:34;;;5241:12:9::1;::::0;5256:14;;::::1;::::0;::::1;::::0;4594:18:14;;5256:32:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5316:7;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;5316:7:9::1;::::0;::::1;::::0;5241:47;;-1:-1:-1;5241:47:9;5299:25:::1;;;::::0;-1:-1:-1;;;5299:25:9;;::::1;::::0;;::::1;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;;;;;;;;;5340:39:9;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;;;;5340:39:9::1;::::0;5741:25:14;;;5729:2;5714:18;5340:39:9::1;;;;;;;;5094:293;;5003:384:::0;;;:::o;3968:351::-;1499:18;:16;:18::i;:::-;4058:16:::1;4067:6;4058:8;:16::i;:::-;4107:6:::0;4125:30:::1;4107:6:::0;4147:7;4125:14:::1;:30::i;:::-;4166:12;4196:11:::0;;4181:35:::1;::::0;-1:-1:-1;;;4181:35:9;;4196:11:::1;::::0;;::::1;-1:-1:-1::0;;;;;4196:11:9;;::::1;4181:35;::::0;::::1;4621:51:14::0;4688:18;;;4681:34;;;4181:14:9;::::1;::::0;::::1;::::0;4594:18:14;;4181:35:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4244:7;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;4244:7:9::1;::::0;::::1;::::0;4166:50;;-1:-1:-1;4166:50:9;4227:25:::1;;;::::0;-1:-1:-1;;;4227:25:9;;::::1;::::0;;::::1;;;:::i;:::-;-1:-1:-1::0;4282:11:9::1;::::0;;4268:43:::1;::::0;5741:25:14;;;-1:-1:-1;;;;;;;4268:43:9;;::::1;::::0;4282:11:::1;::::0;;::::1;;::::0;;-1:-1:-1;;4282:11:9;-1:-1:-1;;;;;4268:43:9;5729:2:14;5714:18;4268:43:9::1;;;;;;;;4047:272;;3968:351:::0;;:::o;6168:282::-;1417:11;:9;:11::i;:::-;6269:67:::1;6299:13;6314:4;6320:6;6328:7;;;;;;;;;;;;;-1:-1:-1::0;;;6328:7:9::1;;::::0;6269:29:::1;:67::i;:::-;;6347:13;6363:15;6373:4;6714:2:::0;6704:13;6736:8;;6588:174;6363:15:::1;6394:48;::::0;5741:25:14;;;6347:31:9;;-1:-1:-1;;;;;;;6394:48:9;::::1;::::0;-1:-1:-1;;;;;6394:48:9;::::1;::::0;::::1;::::0;5729:2:14;5714:18;6394:48:9::1;5696:76:14::0;5399:340:9;1417:11;:9;:11::i;:::-;5497:16:::1;5506:6;5497:8;:16::i;:::-;5524:17;5533:7;5524:8;:17::i;:::-;5607:30;::::0;-1:-1:-1;;;5607:30:9;;-1:-1:-1;;;;;4639:32:14;;;5607:30:9::1;::::0;::::1;4621:51:14::0;4688:18;;;4681:34;;;5574:6:9;;5552:12:::1;::::0;5607:13;::::1;::::0;::::1;::::0;4594:18:14;;5607:30:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5665:7;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;5665:7:9::1;::::0;::::1;::::0;5592:45;;-1:-1:-1;5592:45:9;5648:25:::1;;;::::0;-1:-1:-1;;;5648:25:9;;::::1;::::0;;::::1;;;:::i;:::-;-1:-1:-1::0;5689:42:9::1;::::0;5741:25:14;;;-1:-1:-1;;;;;5689:42:9;;::::1;::::0;;;::::1;::::0;::::1;::::0;5729:2:14;5714:18;5689:42:9::1;5696:76:14::0;1545:103:9;1618:11;;1631:8;;;;;;;;;;;;-1:-1:-1;;;1631:8:9;;;;;1618:11;;;-1:-1:-1;;;;;1618:11:9;1604:10;:25;1596:44;;;;-1:-1:-1;;;1596:44:9;;;;;;;;:::i;:::-;;1545:103::o;1788:182::-;1864:11;;;;;-1:-1:-1;;;;;1864:11:9;1850:10;:25;;:81;;-1:-1:-1;1088:4:0;1111:7;;;1897:9:9;:33;;;;-1:-1:-1;1924:6:9;;-1:-1:-1;;;;;1924:6:9;1910:10;:20;1897:33;1943:8;;;;;;;;;;;;-1:-1:-1;;;1943:8:9;;;;;1841:121;;;;-1:-1:-1;;;1841:121:9;;;;;;;;:::i;2012:312:2:-;2126:6;2101:21;:31;;2093:73;;;;-1:-1:-1;;;2093:73:2;;7845:2:14;2093:73:2;;;7827:21:14;7884:2;7864:18;;;7857:30;7923:31;7903:18;;;7896:59;7972:18;;2093:73:2;7817:179:14;2093:73:2;2196:33;;2178:12;;-1:-1:-1;;;;;2196:14:2;;;2218:6;;2178:12;2196:33;2178:12;2196:33;2218:6;2196:14;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2177:52;;;2247:7;2239:78;;;;-1:-1:-1;;;2239:78:2;;7418:2:14;2239:78:2;;;7400:21:14;7457:2;7437:18;;;7430:30;7496:34;7476:18;;;7469:62;7567:28;7547:18;;;7540:56;7613:19;;2239:78:2;7390:248:14;2239:78:2;2083:241;2012:312;;:::o;1806:115:0:-;1088:4;1111:7;;;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:0;;8610:2:14;1346:38:0;;;8592:21:14;8649:2;8629:18;;;8622:30;-1:-1:-1;;;8668:18:14;;;8661:46;8724:18;;1346:38:0;8582:166:14;1346:38:0;1865:7:::1;:14:::0;;-1:-1:-1;;1865:14:0::1;1875:4;1865:14;::::0;;1894:20:::1;1901:12;665:10:3::0;;586:96;1901:12:0::1;1894:20;::::0;;-1:-1:-1;;;;;4395:32:14;;;;4377:51;;1894:20:0;;;;;4365:2:14;1894:20:0;;::::1;1806:115::o:0;1668:107:9:-;1088:4:0;1111:7;;;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:0;;8610:2:14;1346:38:0;;;8592:21:14;8649:2;8629:18;;;8622:30;-1:-1:-1;;;8668:18:14;;;8661:46;8724:18;;1346:38:0;8582:166:14;1346:38:0;1750:6:9::1;::::0;1758:8:::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;1758:8:9::1;::::0;::::1;::::0;;-1:-1:-1;;;;;1750:6:9::1;1736:10;:20;1728:39;;;::::0;-1:-1:-1;;;1728:39:9;;::::1;::::0;;::::1;;;:::i;1978:129::-:0;-1:-1:-1;;;;;2048:22:9;;2039:60;;;;-1:-1:-1;;;2039:60:9;;6716:2:14;2039:60:9;;;6698:21:14;6755:2;6735:18;;;6728:30;6794:26;6774:18;;;6767:54;6838:18;;2039:60:9;6688:174:14;2053:117:0;1088:4;1111:7;;;1612:41;;;;-1:-1:-1;;;1612:41:0;;6367:2:14;1612:41:0;;;6349:21:14;6406:2;6386:18;;;6379:30;-1:-1:-1;;;6425:18:14;;;6418:50;6485:18;;1612:41:0;6339:170:14;1612:41:0;2121:5:::1;2111:15:::0;;-1:-1:-1;;2111:15:0::1;::::0;;2141:22:::1;665:10:3::0;2150:12:0::1;586:96:3::0;4548:500:2;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:2;;8203:2:14;4737:81:2;;;8185:21:14;8242:2;8222:18;;;8215:30;8281:34;8261:18;;;8254:62;-1:-1:-1;;;8332:18:14;;;8325:36;8378:19;;4737:81:2;8175:228:14;4737:81:2;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:2;;8955:2:14;4828:60:2;;;8937:21:14;8994:2;8974:18;;;8967:30;9033:31;9013:18;;;9006:59;9082:18;;4828:60:2;8927:179:14;4828:60:2;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:2;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:52;5007:7;5016:10;5028:12;4989:17;:52::i;:::-;4982:59;4548:500;-1:-1:-1;;;;;;;4548:500:2:o;2115:164:9:-;2204:31;;-1:-1:-1;;;2204:31:9;;2229:4;2204:31;;;4377:51:14;2239:7:9;;-1:-1:-1;;;;;2204:16:9;;;;;4350:18:14;;2204:31:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;2196:75;;;;-1:-1:-1;;;2196:75:9;;7069:2:14;2196:75:9;;;7051:21:14;7108:2;7088:18;;;7081:30;-1:-1:-1;;;7127:18:14;;;7120:50;7187:18;;2196:75:9;7041:170:14;2196:75:9;2115:164;;:::o;6950:692:2:-;7096:12;7124:7;7120:516;;;-1:-1:-1;7154:10:2;7147:17;;7120:516;7265:17;;:21;7261:365;;7459:10;7453:17;7519:15;7506:10;7502:2;7498:19;7491:44;7261:365;7591:20;;-1:-1:-1;;;7591:20:2;;;;7598:12;;7591:20;;;:::i;7261:365::-;6950:692;;;;;:::o;14:718:14:-;56:5;109:3;102:4;94:6;90:17;86:27;76:2;;127:1;124;117:12;76:2;163:6;150:20;189:18;226:2;222;219:10;216:2;;;232:18;;:::i;:::-;307:2;301:9;275:2;361:13;;-1:-1:-1;;357:22:14;;;381:2;353:31;349:40;337:53;;;405:18;;;425:22;;;402:46;399:2;;;451:18;;:::i;:::-;491:10;487:2;480:22;526:2;518:6;511:18;572:3;565:4;560:2;552:6;548:15;544:26;541:35;538:2;;;589:1;586;579:12;538:2;653;646:4;638:6;634:17;627:4;619:6;615:17;602:54;700:1;693:4;688:2;680:6;676:15;672:26;665:37;720:6;711:15;;;;;;66:666;;;;:::o;737:247::-;796:6;849:2;837:9;828:7;824:23;820:32;817:2;;;865:1;862;855:12;817:2;904:9;891:23;923:31;948:5;923:31;:::i;989:323::-;1065:6;1073;1126:2;1114:9;1105:7;1101:23;1097:32;1094:2;;;1142:1;1139;1132:12;1094:2;1181:9;1168:23;1200:31;1225:5;1200:31;:::i;:::-;1250:5;1302:2;1287:18;;;;1274:32;;-1:-1:-1;;;1084:228:14:o;1317:456::-;1394:6;1402;1410;1463:2;1451:9;1442:7;1438:23;1434:32;1431:2;;;1479:1;1476;1469:12;1431:2;1518:9;1505:23;1537:31;1562:5;1537:31;:::i;:::-;1587:5;-1:-1:-1;1644:2:14;1629:18;;1616:32;1657:33;1616:32;1657:33;:::i;:::-;1421:352;;1709:7;;-1:-1:-1;;;1763:2:14;1748:18;;;;1735:32;;1421:352::o;1778:455::-;1855:6;1863;1916:2;1904:9;1895:7;1891:23;1887:32;1884:2;;;1932:1;1929;1922:12;1884:2;1971:9;1958:23;1990:31;2015:5;1990:31;:::i;:::-;2040:5;-1:-1:-1;2096:2:14;2081:18;;2068:32;2123:18;2112:30;;2109:2;;;2155:1;2152;2145:12;2109:2;2178:49;2219:7;2210:6;2199:9;2195:22;2178:49;:::i;:::-;2168:59;;;1874:359;;;;;:::o;2238:523::-;2324:6;2332;2340;2393:2;2381:9;2372:7;2368:23;2364:32;2361:2;;;2409:1;2406;2399:12;2361:2;2448:9;2435:23;2467:31;2492:5;2467:31;:::i;:::-;2517:5;-1:-1:-1;2573:2:14;2558:18;;2545:32;2600:18;2589:30;;2586:2;;;2632:1;2629;2622:12;2586:2;2655:49;2696:7;2687:6;2676:9;2672:22;2655:49;:::i;:::-;2645:59;;;2751:2;2740:9;2736:18;2723:32;2713:42;;2351:410;;;;;:::o;3086:277::-;3153:6;3206:2;3194:9;3185:7;3181:23;3177:32;3174:2;;;3222:1;3219;3212:12;3174:2;3254:9;3248:16;3307:5;3300:13;3293:21;3286:5;3283:32;3273:2;;3329:1;3326;3319:12;3368:180;3427:6;3480:2;3468:9;3459:7;3455:23;3451:32;3448:2;;;3496:1;3493;3486:12;3448:2;-1:-1:-1;3519:23:14;;3438:110;-1:-1:-1;3438:110:14:o;3553:184::-;3623:6;3676:2;3664:9;3655:7;3651:23;3647:32;3644:2;;;3692:1;3689;3682:12;3644:2;-1:-1:-1;3715:16:14;;3634:103;-1:-1:-1;3634:103:14:o;3742:274::-;3871:3;3909:6;3903:13;3925:53;3971:6;3966:3;3959:4;3951:6;3947:17;3925:53;:::i;:::-;3994:16;;;;;3879:137;-1:-1:-1;;3879:137:14:o;5777:383::-;5926:2;5915:9;5908:21;5889:4;5958:6;5952:13;6001:6;5996:2;5985:9;5981:18;5974:34;6017:66;6076:6;6071:2;6060:9;6056:18;6051:2;6043:6;6039:15;6017:66;:::i;:::-;6144:2;6123:15;-1:-1:-1;;6119:29:14;6104:45;;;;6151:2;6100:54;;5898:262;-1:-1:-1;;5898:262:14:o;9293:258::-;9365:1;9375:113;9389:6;9386:1;9383:13;9375:113;;;9465:11;;;9459:18;9446:11;;;9439:39;9411:2;9404:10;9375:113;;;9506:6;9503:1;9500:13;9497:2;;;9541:1;9532:6;9527:3;9523:16;9516:27;9497:2;;9346:205;;;:::o;9556:127::-;9617:10;9612:3;9608:20;9605:1;9598:31;9648:4;9645:1;9638:15;9672:4;9669:1;9662:15;9688:131;-1:-1:-1;;;;;9763:31:14;;9753:42;;9743:2;;9809:1;9806;9799:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      }
    },
    "version": 1
  },
  "offset": [
    484,
    6899
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6880AAFE GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xD04F74EA GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD04F74EA EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xD0F108EB EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xD4A015E4 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xFB3F4D29 EQ PUSH2 0x2D8 JUMPI PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH4 0x6880AAFE EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x8936A91F EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xC3B60CA6 EQ PUSH2 0x258 JUMPI PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH4 0x3FA1417 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x2FB0B77E EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x47AF9957 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x5A9B0B89 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x200 JUMPI PUSH2 0x103 JUMP JUMPDEST CALLDATASIZE PUSH2 0x103 JUMPI PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x13B JUMPI PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 SWAP1 PUSH1 0x20 ADD PUSH2 0xF9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x158 CALLDATASIZE PUSH1 0x4 PUSH2 0xFBD JUMP JUMPDEST PUSH2 0x2F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x1112 JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x3B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH2 0x2776 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP6 DIV DUP2 AND DUP3 MSTORE SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xFF SWAP1 SWAP3 AND ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD PUSH2 0x1B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0xFDA JUMP JUMPDEST PUSH2 0x3C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x416 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x1047 JUMP JUMPDEST PUSH2 0x426 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x293 CALLDATASIZE PUSH1 0x4 PUSH2 0x1006 JUMP JUMPDEST PUSH2 0x4C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0xFDA JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1097 JUMP JUMPDEST PUSH2 0x73F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1006 JUMP JUMPDEST PUSH2 0x7D3 JUMP JUMPDEST PUSH2 0x300 PUSH2 0x906 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x91C186C0719ED592EE83C1C56B97609511E4B91D6D93ED40C8D80663B997467F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x35C PUSH2 0x964 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x377 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x11EF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x3AB SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x906 JUMP JUMPDEST PUSH2 0x3C6 PUSH2 0xB02 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3D0 PUSH2 0xB9A JUMP JUMPDEST PUSH2 0x3D9 DUP3 PUSH2 0xC36 JUMP JUMPDEST PUSH2 0x3E3 DUP3 DUP3 PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x11EF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x41E PUSH2 0x906 JUMP JUMPDEST PUSH2 0x3C6 PUSH2 0xC8C JUMP JUMPDEST PUSH2 0x42E PUSH2 0xB9A JUMP JUMPDEST PUSH2 0x465 DUP3 DUP3 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x151C985B9CD858DD1A5BDB8811985A5B1959 PUSH1 0x72 SHL DUP2 MSTORE POP PUSH2 0xD06 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x473 DUP3 PUSH1 0x20 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xEC539C4DBCB33605D0AD29CD8CBD6CA59BB51A4B5EF9388E055A91A3A188339E PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x4BC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x4D1 PUSH2 0xB9A JUMP JUMPDEST PUSH2 0x4DA DUP3 PUSH2 0xC36 JUMP JUMPDEST PUSH2 0x4E3 DUP4 PUSH2 0xC36 JUMP JUMPDEST DUP2 PUSH2 0x4EE DUP2 DUP4 PUSH2 0xE2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x550 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x574 SWAP2 SWAP1 PUSH2 0x10F0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x151C985B9CD858DD1A5BDB8811985A5B1959 PUSH1 0x72 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x5C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C0 SWAP2 SWAP1 PUSH2 0x1160 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x11EF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 PUSH1 0x40 MLOAD PUSH2 0x5FD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x614 PUSH2 0x964 JUMP JUMPDEST PUSH2 0x61D DUP3 PUSH2 0xC36 JUMP JUMPDEST DUP2 PUSH2 0x628 DUP2 DUP4 PUSH2 0xE2E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x690 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6B4 SWAP2 SWAP1 PUSH2 0x10F0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x151C985B9CD858DD1A5BDB8811985A5B1959 PUSH1 0x72 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C0 SWAP2 SWAP1 PUSH2 0x1160 JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x11EF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x747 PUSH2 0xB9A JUMP JUMPDEST PUSH2 0x77D DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x151C985B9CD858DD1A5BDB8811985A5B1959 PUSH1 0x72 SHL DUP2 MSTORE POP PUSH2 0xD06 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x78B DUP4 PUSH1 0x20 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xEC539C4DBCB33605D0AD29CD8CBD6CA59BB51A4B5EF9388E055A91A3A188339E DUP5 PUSH1 0x40 MLOAD PUSH2 0x731 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x7DB PUSH2 0xB9A JUMP JUMPDEST PUSH2 0x7E4 DUP3 PUSH2 0xC36 JUMP JUMPDEST PUSH2 0x7ED DUP4 PUSH2 0xC36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 SWAP2 PUSH1 0x0 SWAP2 DUP4 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x83C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x850 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x874 SWAP2 SWAP1 PUSH2 0x10F0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x151C985B9CD858DD1A5BDB8811985A5B1959 PUSH1 0x72 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C0 SWAP2 SWAP1 PUSH2 0x1160 JUMP JUMPDEST POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4E48F8EA88AB4EEBCE074074F123DA6364EF9C1734C8E16843337615C081AD68 DUP6 PUSH1 0x40 MLOAD PUSH2 0x5FD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH19 0x155CD95C881B9BDD08105D5D1A1BDC9A5E9959 PUSH1 0x6A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x961 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C0 SWAP2 SWAP1 PUSH2 0x1160 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x99A JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x99A JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH19 0x155CD95C881B9BDD08105D5D1A1BDC9A5E9959 PUSH1 0x6A SHL DUP2 MSTORE POP SWAP1 PUSH2 0x961 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C0 SWAP2 SWAP1 PUSH2 0x1160 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0xA34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C0 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA81 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA86 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xAFD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xB7D CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH19 0x155CD95C881B9BDD08105D5D1A1BDC9A5E9959 PUSH1 0x6A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x961 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C0 SWAP2 SWAP1 PUSH2 0x1160 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x961 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A65726F2041646472657373204E6F7420416C6C6F7765640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0xCD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xD67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C0 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0xDB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C0 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xDD1 SWAP2 SWAP1 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xE0E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xE23 DUP3 DUP3 DUP7 PUSH2 0xEF0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEA7 SWAP2 SWAP1 PUSH2 0x112B JUMP JUMPDEST LT ISZERO PUSH2 0xEEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xEFF JUMPI POP DUP2 PUSH2 0xF29 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xF0F JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C0 SWAP2 SWAP1 PUSH2 0x1160 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF5C JUMPI PUSH2 0xF5C PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF84 JUMPI PUSH2 0xF84 PUSH2 0x11C3 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xF9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF29 DUP2 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xFF8 DUP2 PUSH2 0x11D9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x101B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1026 DUP2 PUSH2 0x11D9 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1036 DUP2 PUSH2 0x11D9 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x105A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1065 DUP2 PUSH2 0x11D9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1081 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x108D DUP6 DUP3 DUP7 ADD PUSH2 0xF30 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x10B7 DUP2 PUSH2 0x11D9 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10DF DUP7 DUP3 DUP8 ADD PUSH2 0xF30 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x113D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1156 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1193 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x117F DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1193 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11AE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1196 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x11BD JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x961 JUMPI PUSH1 0x0 DUP1 REVERT INVALID DUP16 PUSH18 0x84268EABC3E5F95D42873237E44E84D2CB27 0xBA 0xA7 CALLDATALOAD DUP11 0xC4 INVALID MULMOD DUP14 0x4D 0xFB LOG2 0xED LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xFB BLOCKHASH 0x4E MSTORE 0xC4 0xAA PUSH22 0x23913D2296BCCF785BAEECD61B204EBD81CFC2F1072 DIFFICULTY 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        484,
        6899
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "8": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "LT",
      "path": "9"
    },
    "9": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC6"
    },
    "12": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "13": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "16": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "SHR",
      "path": "9"
    },
    "19": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "DUP1",
      "path": "9"
    },
    "20": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x6880AAFE"
    },
    "25": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "GT",
      "path": "9"
    },
    "26": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7F"
    },
    "29": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "30": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "DUP1",
      "path": "9"
    },
    "31": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xD04F74EA"
    },
    "36": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "GT",
      "path": "9"
    },
    "37": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x59"
    },
    "40": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "41": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "DUP1",
      "path": "9"
    },
    "42": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xD04F74EA"
    },
    "47": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "EQ",
      "path": "9"
    },
    "48": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x278"
    },
    "51": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "52": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "DUP1",
      "path": "9"
    },
    "53": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xD0F108EB"
    },
    "58": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "EQ",
      "path": "9"
    },
    "59": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x298"
    },
    "62": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "63": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "DUP1",
      "path": "9"
    },
    "64": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xD4A015E4"
    },
    "69": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "EQ",
      "path": "9"
    },
    "70": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2B8"
    },
    "73": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "74": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "DUP1",
      "path": "9"
    },
    "75": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFB3F4D29"
    },
    "80": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "EQ",
      "path": "9"
    },
    "81": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2D8"
    },
    "84": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "85": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x103"
    },
    "88": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "JUMP",
      "path": "9"
    },
    "89": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "90": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "DUP1",
      "path": "9"
    },
    "91": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x6880AAFE"
    },
    "96": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "EQ",
      "path": "9"
    },
    "97": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x223"
    },
    "100": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "101": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "DUP1",
      "path": "9"
    },
    "102": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x8936A91F"
    },
    "107": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "EQ",
      "path": "9"
    },
    "108": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x243"
    },
    "111": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "112": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "DUP1",
      "path": "9"
    },
    "113": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xC3B60CA6"
    },
    "118": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "EQ",
      "path": "9"
    },
    "119": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x258"
    },
    "122": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "123": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x103"
    },
    "126": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "JUMP",
      "path": "9"
    },
    "127": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "128": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "DUP1",
      "path": "9"
    },
    "129": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x3FA1417"
    },
    "134": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "EQ",
      "path": "9"
    },
    "135": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13D"
    },
    "138": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "139": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "DUP1",
      "path": "9"
    },
    "140": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x2FB0B77E"
    },
    "145": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "EQ",
      "path": "9"
    },
    "146": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x15D"
    },
    "149": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "150": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "DUP1",
      "path": "9"
    },
    "151": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x47AF9957"
    },
    "156": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "EQ",
      "path": "9"
    },
    "157": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x17D"
    },
    "160": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "161": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "DUP1",
      "path": "9"
    },
    "162": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x54FD4D50"
    },
    "167": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "EQ",
      "path": "9"
    },
    "168": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x192"
    },
    "171": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "172": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "DUP1",
      "path": "9"
    },
    "173": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x5A9B0B89"
    },
    "178": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "EQ",
      "path": "9"
    },
    "179": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1BB"
    },
    "182": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "183": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "DUP1",
      "path": "9"
    },
    "184": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x5C975ABB"
    },
    "189": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "EQ",
      "path": "9"
    },
    "190": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x200"
    },
    "193": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "194": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x103"
    },
    "197": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "JUMP",
      "path": "9"
    },
    "198": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "199": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "200": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x103"
    },
    "203": {
      "fn": null,
      "offset": [
        484,
        6899
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "204": {
      "fn": "SEGA_v112.<receive>",
      "offset": [
        2624,
        2655
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 0,
      "value": "0x40"
    },
    "206": {
      "fn": "SEGA_v112.<receive>",
      "offset": [
        2624,
        2655
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "207": {
      "fn": "SEGA_v112.<receive>",
      "offset": [
        2645,
        2654
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "208": {
      "op": "DUP2"
    },
    "209": {
      "op": "MSTORE"
    },
    "210": {
      "fn": "SEGA_v112.<receive>",
      "offset": [
        2633,
        2643
      ],
      "op": "CALLER",
      "path": "9"
    },
    "211": {
      "fn": "SEGA_v112.<receive>",
      "offset": [
        2633,
        2643
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "212": {
      "fn": "SEGA_v112.<receive>",
      "offset": [
        2624,
        2655
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874"
    },
    "245": {
      "fn": "SEGA_v112.<receive>",
      "offset": [
        2624,
        2655
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "246": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "248": {
      "op": "ADD"
    },
    "249": {
      "fn": "SEGA_v112.<receive>",
      "offset": [
        2624,
        2655
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "250": {
      "fn": "SEGA_v112.<receive>",
      "offset": [
        2624,
        2655
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "252": {
      "fn": "SEGA_v112.<receive>",
      "offset": [
        2624,
        2655
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "253": {
      "fn": "SEGA_v112.<receive>",
      "offset": [
        2624,
        2655
      ],
      "op": "DUP1",
      "path": "9"
    },
    "254": {
      "fn": "SEGA_v112.<receive>",
      "offset": [
        2624,
        2655
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "255": {
      "fn": "SEGA_v112.<receive>",
      "offset": [
        2624,
        2655
      ],
      "op": "SUB",
      "path": "9"
    },
    "256": {
      "fn": "SEGA_v112.<receive>",
      "offset": [
        2624,
        2655
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "257": {
      "fn": "SEGA_v112.<receive>",
      "offset": [
        2624,
        2655
      ],
      "op": "LOG2",
      "path": "9"
    },
    "258": {
      "offset": [
        484,
        6899
      ],
      "op": "STOP",
      "path": "9"
    },
    "259": {
      "fn": "SEGA_v112.<receive>",
      "offset": [
        484,
        6899
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "260": {
      "fn": "SEGA_v112.<fallback>",
      "offset": [
        2718,
        2727
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "261": {
      "branch": 47,
      "fn": "SEGA_v112.<fallback>",
      "offset": [
        2718,
        2731
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "262": {
      "fn": "SEGA_v112.<fallback>",
      "offset": [
        2714,
        2796
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13B"
    },
    "265": {
      "branch": 47,
      "fn": "SEGA_v112.<fallback>",
      "offset": [
        2714,
        2796
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "266": {
      "fn": "SEGA_v112.<fallback>",
      "offset": [
        2753,
        2784
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 1,
      "value": "0x40"
    },
    "268": {
      "fn": "SEGA_v112.<fallback>",
      "offset": [
        2753,
        2784
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "269": {
      "fn": "SEGA_v112.<fallback>",
      "offset": [
        2774,
        2783
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "270": {
      "op": "DUP2"
    },
    "271": {
      "op": "MSTORE"
    },
    "272": {
      "fn": "SEGA_v112.<fallback>",
      "offset": [
        2762,
        2772
      ],
      "op": "CALLER",
      "path": "9"
    },
    "273": {
      "fn": "SEGA_v112.<fallback>",
      "offset": [
        2762,
        2772
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "274": {
      "fn": "SEGA_v112.<fallback>",
      "offset": [
        2753,
        2784
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874"
    },
    "307": {
      "fn": "SEGA_v112.<fallback>",
      "offset": [
        2753,
        2784
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "308": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "310": {
      "op": "ADD"
    },
    "311": {
      "fn": "SEGA_v112.<fallback>",
      "offset": [
        2753,
        2784
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF9"
    },
    "314": {
      "op": "JUMP"
    },
    "315": {
      "fn": "SEGA_v112.<fallback>",
      "offset": [
        2714,
        2796
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "316": {
      "offset": [
        484,
        6899
      ],
      "op": "STOP",
      "path": "9"
    },
    "317": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3358,
        3507
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "318": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3358,
        3507
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "319": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3358,
        3507
      ],
      "op": "DUP1",
      "path": "9"
    },
    "320": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3358,
        3507
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "321": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3358,
        3507
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x149"
    },
    "324": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3358,
        3507
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "325": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3358,
        3507
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "327": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3358,
        3507
      ],
      "op": "DUP1",
      "path": "9"
    },
    "328": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3358,
        3507
      ],
      "op": "REVERT",
      "path": "9"
    },
    "329": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3358,
        3507
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "330": {
      "op": "POP"
    },
    "331": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3358,
        3507
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13B"
    },
    "334": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3358,
        3507
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x158"
    },
    "337": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3358,
        3507
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "338": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3358,
        3507
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "340": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3358,
        3507
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xFBD"
    },
    "343": {
      "fn": "SEGA_v112.changeTrader",
      "jump": "i",
      "offset": [
        3358,
        3507
      ],
      "op": "JUMP",
      "path": "9"
    },
    "344": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3358,
        3507
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "345": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3358,
        3507
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2F8"
    },
    "348": {
      "fn": "SEGA_v112.changeTrader",
      "jump": "i",
      "offset": [
        3358,
        3507
      ],
      "op": "JUMP",
      "path": "9"
    },
    "349": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3724,
        3908
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "350": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3724,
        3908
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "351": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3724,
        3908
      ],
      "op": "DUP1",
      "path": "9"
    },
    "352": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3724,
        3908
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "353": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3724,
        3908
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x169"
    },
    "356": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3724,
        3908
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "357": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3724,
        3908
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "359": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3724,
        3908
      ],
      "op": "DUP1",
      "path": "9"
    },
    "360": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3724,
        3908
      ],
      "op": "REVERT",
      "path": "9"
    },
    "361": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3724,
        3908
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "362": {
      "op": "POP"
    },
    "363": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3724,
        3908
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13B"
    },
    "366": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3724,
        3908
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x178"
    },
    "369": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3724,
        3908
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "370": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3724,
        3908
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "372": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3724,
        3908
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1112"
    },
    "375": {
      "fn": "SEGA_v112.returnToVault",
      "jump": "i",
      "offset": [
        3724,
        3908
      ],
      "op": "JUMP",
      "path": "9"
    },
    "376": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3724,
        3908
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "377": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3724,
        3908
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x354"
    },
    "380": {
      "fn": "SEGA_v112.returnToVault",
      "jump": "i",
      "offset": [
        3724,
        3908
      ],
      "op": "JUMP",
      "path": "9"
    },
    "381": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        3138,
        3214
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "382": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        3138,
        3214
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "383": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        3138,
        3214
      ],
      "op": "DUP1",
      "path": "9"
    },
    "384": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        3138,
        3214
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "385": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        3138,
        3214
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x189"
    },
    "388": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        3138,
        3214
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "389": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        3138,
        3214
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "391": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        3138,
        3214
      ],
      "op": "DUP1",
      "path": "9"
    },
    "392": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        3138,
        3214
      ],
      "op": "REVERT",
      "path": "9"
    },
    "393": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        3138,
        3214
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "394": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        3138,
        3214
      ],
      "op": "POP",
      "path": "9"
    },
    "395": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        3138,
        3214
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13B"
    },
    "398": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        3138,
        3214
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3B6"
    },
    "401": {
      "fn": "SEGA_v112.pauseTransfers",
      "jump": "i",
      "offset": [
        3138,
        3214
      ],
      "op": "JUMP",
      "path": "9"
    },
    "402": {
      "offset": [
        601,
        640
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "403": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        601,
        640
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "404": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        601,
        640
      ],
      "op": "DUP1",
      "path": "9"
    },
    "405": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        601,
        640
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "406": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        601,
        640
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x19E"
    },
    "409": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        601,
        640
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "410": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        601,
        640
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "412": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        601,
        640
      ],
      "op": "DUP1",
      "path": "9"
    },
    "413": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        601,
        640
      ],
      "op": "REVERT",
      "path": "9"
    },
    "414": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        601,
        640
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "415": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        601,
        640
      ],
      "op": "POP",
      "path": "9"
    },
    "416": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        601,
        640
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1A8"
    },
    "419": {
      "offset": [
        635,
        640
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2776"
    },
    "422": {
      "offset": [
        601,
        640
      ],
      "op": "DUP2",
      "path": "9"
    },
    "423": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        601,
        640
      ],
      "op": "JUMP",
      "path": "9"
    },
    "424": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        601,
        640
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "425": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        601,
        640
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "427": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        601,
        640
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "428": {
      "op": "SWAP1"
    },
    "429": {
      "op": "DUP2"
    },
    "430": {
      "op": "MSTORE"
    },
    "431": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "433": {
      "op": "ADD"
    },
    "434": {
      "offset": [
        601,
        640
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "435": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        601,
        640
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "437": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        601,
        640
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "438": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        601,
        640
      ],
      "op": "DUP1",
      "path": "9"
    },
    "439": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        601,
        640
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "440": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        601,
        640
      ],
      "op": "SUB",
      "path": "9"
    },
    "441": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        601,
        640
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "442": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        601,
        640
      ],
      "op": "RETURN",
      "path": "9"
    },
    "443": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6770,
        6894
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "444": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6770,
        6894
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "445": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6770,
        6894
      ],
      "op": "DUP1",
      "path": "9"
    },
    "446": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6770,
        6894
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "447": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6770,
        6894
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C7"
    },
    "450": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6770,
        6894
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "451": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6770,
        6894
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "453": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6770,
        6894
      ],
      "op": "DUP1",
      "path": "9"
    },
    "454": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6770,
        6894
      ],
      "op": "REVERT",
      "path": "9"
    },
    "455": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6770,
        6894
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "456": {
      "op": "POP"
    },
    "457": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6810,
        6817
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "459": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6853,
        6864
      ],
      "op": "SLOAD",
      "path": "9",
      "statement": 2
    },
    "460": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6853,
        6864
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "462": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6866,
        6872
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "463": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6770,
        6894
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "465": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6770,
        6894
      ],
      "op": "DUP1",
      "path": "9"
    },
    "466": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6770,
        6894
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "473": {
      "op": "SHL"
    },
    "474": {
      "op": "SUB"
    },
    "475": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6853,
        6864
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x100"
    },
    "478": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6853,
        6864
      ],
      "op": "DUP6",
      "path": "9"
    },
    "479": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6853,
        6864
      ],
      "op": "DIV",
      "path": "9"
    },
    "480": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6853,
        6864
      ],
      "op": "DUP2",
      "path": "9"
    },
    "481": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6853,
        6864
      ],
      "op": "AND",
      "path": "9"
    },
    "482": {
      "op": "DUP3"
    },
    "483": {
      "op": "MSTORE"
    },
    "484": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6866,
        6872
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "485": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6866,
        6872
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "486": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6866,
        6872
      ],
      "op": "AND",
      "path": "9"
    },
    "487": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "489": {
      "op": "DUP4"
    },
    "490": {
      "op": "ADD"
    },
    "491": {
      "op": "MSTORE"
    },
    "492": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0xFF"
    },
    "494": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "495": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "496": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "0"
    },
    "497": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6874,
        6885
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "498": {
      "op": "SWAP2"
    },
    "499": {
      "op": "DUP2"
    },
    "500": {
      "op": "ADD"
    },
    "501": {
      "op": "SWAP2"
    },
    "502": {
      "op": "SWAP1"
    },
    "503": {
      "op": "SWAP2"
    },
    "504": {
      "op": "MSTORE"
    },
    "505": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "507": {
      "op": "ADD"
    },
    "508": {
      "fn": "SEGA_v112.getInfo",
      "offset": [
        6770,
        6894
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1B2"
    },
    "511": {
      "op": "JUMP"
    },
    "512": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "513": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "514": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "DUP1",
      "path": "0"
    },
    "515": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "516": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20C"
    },
    "519": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "520": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "522": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "DUP1",
      "path": "0"
    },
    "523": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "REVERT",
      "path": "0"
    },
    "524": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "525": {
      "op": "POP"
    },
    "526": {
      "fn": "Pausable.paused",
      "offset": [
        1088,
        1092
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "528": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "529": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "531": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "0"
    },
    "532": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "534": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "535": {
      "op": "SWAP1"
    },
    "536": {
      "op": "ISZERO"
    },
    "537": {
      "op": "ISZERO"
    },
    "538": {
      "op": "DUP2"
    },
    "539": {
      "op": "MSTORE"
    },
    "540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "542": {
      "op": "ADD"
    },
    "543": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B2"
    },
    "546": {
      "op": "JUMP"
    },
    "547": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4685,
        4911
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "548": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4685,
        4911
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "549": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4685,
        4911
      ],
      "op": "DUP1",
      "path": "9"
    },
    "550": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4685,
        4911
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "551": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4685,
        4911
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x22F"
    },
    "554": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4685,
        4911
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "555": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4685,
        4911
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "557": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4685,
        4911
      ],
      "op": "DUP1",
      "path": "9"
    },
    "558": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4685,
        4911
      ],
      "op": "REVERT",
      "path": "9"
    },
    "559": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4685,
        4911
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "560": {
      "op": "POP"
    },
    "561": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4685,
        4911
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13B"
    },
    "564": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4685,
        4911
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x23E"
    },
    "567": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4685,
        4911
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "568": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4685,
        4911
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "570": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4685,
        4911
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xFDA"
    },
    "573": {
      "fn": "SEGA_v112.sendNativeAssets",
      "jump": "i",
      "offset": [
        4685,
        4911
      ],
      "op": "JUMP",
      "path": "9"
    },
    "574": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4685,
        4911
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "575": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4685,
        4911
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3C8"
    },
    "578": {
      "fn": "SEGA_v112.sendNativeAssets",
      "jump": "i",
      "offset": [
        4685,
        4911
      ],
      "op": "JUMP",
      "path": "9"
    },
    "579": {
      "fn": "SEGA_v112.unpauseTransfers",
      "offset": [
        3220,
        3300
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "580": {
      "fn": "SEGA_v112.unpauseTransfers",
      "offset": [
        3220,
        3300
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "581": {
      "fn": "SEGA_v112.unpauseTransfers",
      "offset": [
        3220,
        3300
      ],
      "op": "DUP1",
      "path": "9"
    },
    "582": {
      "fn": "SEGA_v112.unpauseTransfers",
      "offset": [
        3220,
        3300
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "583": {
      "fn": "SEGA_v112.unpauseTransfers",
      "offset": [
        3220,
        3300
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x24F"
    },
    "586": {
      "fn": "SEGA_v112.unpauseTransfers",
      "offset": [
        3220,
        3300
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "587": {
      "fn": "SEGA_v112.unpauseTransfers",
      "offset": [
        3220,
        3300
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "589": {
      "fn": "SEGA_v112.unpauseTransfers",
      "offset": [
        3220,
        3300
      ],
      "op": "DUP1",
      "path": "9"
    },
    "590": {
      "fn": "SEGA_v112.unpauseTransfers",
      "offset": [
        3220,
        3300
      ],
      "op": "REVERT",
      "path": "9"
    },
    "591": {
      "fn": "SEGA_v112.unpauseTransfers",
      "offset": [
        3220,
        3300
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "592": {
      "fn": "SEGA_v112.unpauseTransfers",
      "offset": [
        3220,
        3300
      ],
      "op": "POP",
      "path": "9"
    },
    "593": {
      "fn": "SEGA_v112.unpauseTransfers",
      "offset": [
        3220,
        3300
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13B"
    },
    "596": {
      "fn": "SEGA_v112.unpauseTransfers",
      "offset": [
        3220,
        3300
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x416"
    },
    "599": {
      "fn": "SEGA_v112.unpauseTransfers",
      "jump": "i",
      "offset": [
        3220,
        3300
      ],
      "op": "JUMP",
      "path": "9"
    },
    "600": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        5900,
        6156
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "601": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        5900,
        6156
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "602": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        5900,
        6156
      ],
      "op": "DUP1",
      "path": "9"
    },
    "603": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        5900,
        6156
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "604": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        5900,
        6156
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x264"
    },
    "607": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        5900,
        6156
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "608": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        5900,
        6156
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "610": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        5900,
        6156
      ],
      "op": "DUP1",
      "path": "9"
    },
    "611": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        5900,
        6156
      ],
      "op": "REVERT",
      "path": "9"
    },
    "612": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        5900,
        6156
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "613": {
      "op": "POP"
    },
    "614": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        5900,
        6156
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13B"
    },
    "617": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        5900,
        6156
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x273"
    },
    "620": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        5900,
        6156
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "621": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        5900,
        6156
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "623": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        5900,
        6156
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1047"
    },
    "626": {
      "fn": "SEGA_v112.callSC",
      "jump": "i",
      "offset": [
        5900,
        6156
      ],
      "op": "JUMP",
      "path": "9"
    },
    "627": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        5900,
        6156
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "628": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        5900,
        6156
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x426"
    },
    "631": {
      "fn": "SEGA_v112.callSC",
      "jump": "i",
      "offset": [
        5900,
        6156
      ],
      "op": "JUMP",
      "path": "9"
    },
    "632": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5003,
        5387
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "633": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5003,
        5387
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "634": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5003,
        5387
      ],
      "op": "DUP1",
      "path": "9"
    },
    "635": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5003,
        5387
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "636": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5003,
        5387
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x284"
    },
    "639": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5003,
        5387
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "640": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5003,
        5387
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "642": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5003,
        5387
      ],
      "op": "DUP1",
      "path": "9"
    },
    "643": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5003,
        5387
      ],
      "op": "REVERT",
      "path": "9"
    },
    "644": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5003,
        5387
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "645": {
      "op": "POP"
    },
    "646": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5003,
        5387
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13B"
    },
    "649": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5003,
        5387
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x293"
    },
    "652": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5003,
        5387
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "653": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5003,
        5387
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "655": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5003,
        5387
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1006"
    },
    "658": {
      "fn": "SEGA_v112.sendTokenAssets",
      "jump": "i",
      "offset": [
        5003,
        5387
      ],
      "op": "JUMP",
      "path": "9"
    },
    "659": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5003,
        5387
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "660": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5003,
        5387
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4C9"
    },
    "663": {
      "fn": "SEGA_v112.sendTokenAssets",
      "jump": "i",
      "offset": [
        5003,
        5387
      ],
      "op": "JUMP",
      "path": "9"
    },
    "664": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3968,
        4319
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "665": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3968,
        4319
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "666": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3968,
        4319
      ],
      "op": "DUP1",
      "path": "9"
    },
    "667": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3968,
        4319
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "668": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3968,
        4319
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2A4"
    },
    "671": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3968,
        4319
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "672": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3968,
        4319
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "674": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3968,
        4319
      ],
      "op": "DUP1",
      "path": "9"
    },
    "675": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3968,
        4319
      ],
      "op": "REVERT",
      "path": "9"
    },
    "676": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3968,
        4319
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "677": {
      "op": "POP"
    },
    "678": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3968,
        4319
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13B"
    },
    "681": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3968,
        4319
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2B3"
    },
    "684": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3968,
        4319
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "685": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3968,
        4319
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "687": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3968,
        4319
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xFDA"
    },
    "690": {
      "fn": "SEGA_v112.returnToVault",
      "jump": "i",
      "offset": [
        3968,
        4319
      ],
      "op": "JUMP",
      "path": "9"
    },
    "691": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3968,
        4319
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "692": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3968,
        4319
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x60C"
    },
    "695": {
      "fn": "SEGA_v112.returnToVault",
      "jump": "i",
      "offset": [
        3968,
        4319
      ],
      "op": "JUMP",
      "path": "9"
    },
    "696": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6168,
        6450
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "697": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6168,
        6450
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "698": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6168,
        6450
      ],
      "op": "DUP1",
      "path": "9"
    },
    "699": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6168,
        6450
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "700": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6168,
        6450
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2C4"
    },
    "703": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6168,
        6450
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "704": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6168,
        6450
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "706": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6168,
        6450
      ],
      "op": "DUP1",
      "path": "9"
    },
    "707": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6168,
        6450
      ],
      "op": "REVERT",
      "path": "9"
    },
    "708": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6168,
        6450
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "709": {
      "op": "POP"
    },
    "710": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6168,
        6450
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13B"
    },
    "713": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6168,
        6450
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2D3"
    },
    "716": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6168,
        6450
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "717": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6168,
        6450
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "719": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6168,
        6450
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1097"
    },
    "722": {
      "fn": "SEGA_v112.callSC",
      "jump": "i",
      "offset": [
        6168,
        6450
      ],
      "op": "JUMP",
      "path": "9"
    },
    "723": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6168,
        6450
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "724": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6168,
        6450
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x73F"
    },
    "727": {
      "fn": "SEGA_v112.callSC",
      "jump": "i",
      "offset": [
        6168,
        6450
      ],
      "op": "JUMP",
      "path": "9"
    },
    "728": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5399,
        5739
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "729": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5399,
        5739
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "730": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5399,
        5739
      ],
      "op": "DUP1",
      "path": "9"
    },
    "731": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5399,
        5739
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "732": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5399,
        5739
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2E4"
    },
    "735": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5399,
        5739
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "736": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5399,
        5739
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "738": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5399,
        5739
      ],
      "op": "DUP1",
      "path": "9"
    },
    "739": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5399,
        5739
      ],
      "op": "REVERT",
      "path": "9"
    },
    "740": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5399,
        5739
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "741": {
      "op": "POP"
    },
    "742": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5399,
        5739
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13B"
    },
    "745": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5399,
        5739
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2F3"
    },
    "748": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5399,
        5739
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "749": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5399,
        5739
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "751": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5399,
        5739
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1006"
    },
    "754": {
      "fn": "SEGA_v112.tokenApprove",
      "jump": "i",
      "offset": [
        5399,
        5739
      ],
      "op": "JUMP",
      "path": "9"
    },
    "755": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5399,
        5739
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "756": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5399,
        5739
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7D3"
    },
    "759": {
      "fn": "SEGA_v112.tokenApprove",
      "jump": "i",
      "offset": [
        5399,
        5739
      ],
      "op": "JUMP",
      "path": "9"
    },
    "760": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3358,
        3507
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "761": {
      "offset": [
        1330,
        1346
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x300"
    },
    "764": {
      "offset": [
        1330,
        1344
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x906"
    },
    "767": {
      "jump": "i",
      "offset": [
        1330,
        1346
      ],
      "op": "JUMP",
      "path": "9"
    },
    "768": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        1330,
        1346
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "769": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3435,
        3441
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 4,
      "value": "0x1"
    },
    "771": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3435,
        3454
      ],
      "op": "DUP1",
      "path": "9"
    },
    "772": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3435,
        3454
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "777": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "779": {
      "op": "SHL"
    },
    "780": {
      "op": "SUB"
    },
    "781": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3435,
        3454
      ],
      "op": "NOT",
      "path": "9"
    },
    "782": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3435,
        3454
      ],
      "op": "AND",
      "path": "9"
    },
    "783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "787": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "789": {
      "op": "SHL"
    },
    "790": {
      "op": "SUB"
    },
    "791": {
      "op": "DUP4"
    },
    "792": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3435,
        3454
      ],
      "op": "AND",
      "path": "9"
    },
    "793": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3435,
        3454
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "794": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3435,
        3454
      ],
      "op": "DUP2",
      "path": "9"
    },
    "795": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3435,
        3454
      ],
      "op": "OR",
      "path": "9"
    },
    "796": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3435,
        3454
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "797": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3435,
        3454
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "798": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3435,
        3454
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "799": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3435,
        3454
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "801": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3470,
        3499
      ],
      "op": "MLOAD",
      "path": "9",
      "statement": 5
    },
    "802": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3470,
        3499
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "803": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3470,
        3499
      ],
      "op": "DUP2",
      "path": "9"
    },
    "804": {
      "op": "MSTORE"
    },
    "805": {
      "op": "PUSH32",
      "value": "0x91C186C0719ED592EE83C1C56B97609511E4B91D6D93ED40C8D80663B997467F"
    },
    "838": {
      "op": "SWAP1"
    },
    "839": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3470,
        3499
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "841": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3470,
        3499
      ],
      "op": "ADD",
      "path": "9"
    },
    "842": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3470,
        3499
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "844": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3470,
        3499
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "845": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3470,
        3499
      ],
      "op": "DUP1",
      "path": "9"
    },
    "846": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3470,
        3499
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "847": {
      "op": "SUB"
    },
    "848": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3470,
        3499
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "849": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3470,
        3499
      ],
      "op": "LOG1",
      "path": "9"
    },
    "850": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3470,
        3499
      ],
      "op": "POP",
      "path": "9"
    },
    "851": {
      "fn": "SEGA_v112.changeTrader",
      "offset": [
        3358,
        3507
      ],
      "op": "JUMP",
      "path": "9"
    },
    "852": {
      "fn": "SEGA_v112.changeTrader",
      "jump": "o",
      "offset": [
        3358,
        3507
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "853": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3724,
        3908
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x35C"
    },
    "856": {
      "offset": [
        1499,
        1517
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x964"
    },
    "859": {
      "offset": [
        1499,
        1515
      ],
      "op": "JUMP",
      "path": "9"
    },
    "860": {
      "jump": "i",
      "offset": [
        1499,
        1517
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "861": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        1499,
        1517
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "863": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3816,
        3827
      ],
      "op": "SLOAD",
      "path": "9",
      "statement": 6
    },
    "864": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3816,
        3827
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x377"
    },
    "867": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3798,
        3837
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "868": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3798,
        3837
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x100"
    },
    "871": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3816,
        3827
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "872": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3816,
        3827
      ],
      "op": "DIV",
      "path": "9"
    },
    "873": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3816,
        3827
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "879": {
      "op": "SHL"
    },
    "880": {
      "op": "SUB"
    },
    "881": {
      "op": "AND"
    },
    "882": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3816,
        3827
      ],
      "op": "DUP3",
      "path": "9"
    },
    "883": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3829,
        3836
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9E4"
    },
    "886": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3798,
        3815
      ],
      "op": "JUMP",
      "path": "9"
    },
    "887": {
      "fn": "SEGA_v112.returnToVault",
      "jump": "i",
      "offset": [
        3798,
        3837
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "888": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3798,
        3837
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "890": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3888,
        3889
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 7
    },
    "891": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3867,
        3878
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "892": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3867,
        3878
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "894": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3853,
        3900
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "895": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3853,
        3900
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x100"
    },
    "898": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3867,
        3878
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "899": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3867,
        3878
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "900": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3867,
        3878
      ],
      "op": "DIV",
      "path": "9"
    },
    "901": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3867,
        3878
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "905": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "907": {
      "op": "SHL"
    },
    "908": {
      "op": "SUB"
    },
    "909": {
      "op": "AND"
    },
    "910": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3867,
        3878
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "911": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3867,
        3878
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "913": {
      "op": "DUP1"
    },
    "914": {
      "op": "MLOAD"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "917": {
      "op": "PUSH2",
      "value": "0x11EF"
    },
    "920": {
      "op": "DUP4"
    },
    "921": {
      "op": "CODECOPY"
    },
    "922": {
      "op": "DUP2"
    },
    "923": {
      "op": "MLOAD"
    },
    "924": {
      "op": "SWAP2"
    },
    "925": {
      "op": "MSTORE"
    },
    "926": {
      "op": "SWAP1"
    },
    "927": {
      "op": "PUSH2",
      "value": "0x3AB"
    },
    "930": {
      "op": "SWAP1"
    },
    "931": {
      "op": "DUP6"
    },
    "932": {
      "op": "DUP2"
    },
    "933": {
      "op": "MSTORE"
    },
    "934": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "936": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3853,
        3900
      ],
      "op": "ADD",
      "path": "9"
    },
    "937": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3853,
        3900
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "938": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3853,
        3900
      ],
      "op": "JUMP",
      "path": "9"
    },
    "939": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3853,
        3900
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "940": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3853,
        3900
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "942": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3853,
        3900
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "943": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3853,
        3900
      ],
      "op": "DUP1",
      "path": "9"
    },
    "944": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3724,
        3908
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "945": {
      "fn": "SEGA_v112.returnToVault",
      "jump": "o",
      "offset": [
        3724,
        3908
      ],
      "op": "SUB",
      "path": "9"
    },
    "946": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        3138,
        3214
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "947": {
      "offset": [
        1330,
        1346
      ],
      "op": "LOG3",
      "path": "9"
    },
    "948": {
      "offset": [
        1330,
        1344
      ],
      "op": "POP",
      "path": "9"
    },
    "949": {
      "jump": "i",
      "offset": [
        1330,
        1346
      ],
      "op": "JUMP",
      "path": "9"
    },
    "950": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        1330,
        1346
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "951": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        3198,
        3206
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 8,
      "value": "0x3BE"
    },
    "954": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        3198,
        3204
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x906"
    },
    "957": {
      "fn": "SEGA_v112.pauseTransfers",
      "jump": "i",
      "offset": [
        3198,
        3206
      ],
      "op": "JUMP",
      "path": "9"
    },
    "958": {
      "fn": "SEGA_v112.pauseTransfers",
      "offset": [
        3198,
        3206
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "959": {
      "fn": "SEGA_v112.pauseTransfers",
      "jump": "o",
      "offset": [
        3138,
        3214
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3C6"
    },
    "962": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4685,
        4911
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB02"
    },
    "965": {
      "offset": [
        1417,
        1428
      ],
      "op": "JUMP",
      "path": "9"
    },
    "966": {
      "offset": [
        1417,
        1426
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "967": {
      "jump": "i",
      "offset": [
        1417,
        1428
      ],
      "op": "JUMP",
      "path": "9"
    },
    "968": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        1417,
        1428
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "969": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4780,
        4798
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 9,
      "value": "0x3D0"
    },
    "972": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4789,
        4797
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB9A"
    },
    "975": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4780,
        4788
      ],
      "op": "JUMP",
      "path": "9"
    },
    "976": {
      "fn": "SEGA_v112.sendNativeAssets",
      "jump": "i",
      "offset": [
        4780,
        4798
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "977": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4780,
        4798
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3D9"
    },
    "980": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4809,
        4844
      ],
      "op": "DUP3",
      "path": "9",
      "statement": 10
    },
    "981": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4827,
        4835
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC36"
    },
    "984": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4837,
        4843
      ],
      "op": "JUMP",
      "path": "9"
    },
    "985": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4809,
        4826
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "986": {
      "fn": "SEGA_v112.sendNativeAssets",
      "jump": "i",
      "offset": [
        4809,
        4844
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3E3"
    },
    "989": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4809,
        4844
      ],
      "op": "DUP3",
      "path": "9"
    },
    "990": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4860,
        4903
      ],
      "op": "DUP3",
      "path": "9",
      "statement": 11
    },
    "991": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4860,
        4903
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9E4"
    },
    "994": {
      "op": "JUMP"
    },
    "995": {
      "op": "JUMPDEST"
    },
    "996": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "998": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4892,
        4893
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "999": {
      "op": "DUP2"
    },
    "1000": {
      "op": "DUP2"
    },
    "1001": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4892,
        4893
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1002": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4892,
        4893
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1004": {
      "op": "SWAP1"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1011": {
      "op": "SHL"
    },
    "1012": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4860,
        4903
      ],
      "op": "SUB",
      "path": "9"
    },
    "1013": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4860,
        4903
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1014": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4860,
        4903
      ],
      "op": "AND",
      "path": "9"
    },
    "1015": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4892,
        4893
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1016": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4892,
        4893
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1018": {
      "op": "DUP1"
    },
    "1019": {
      "op": "MLOAD"
    },
    "1020": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4892,
        4893
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1022": {
      "op": "PUSH2",
      "value": "0x11EF"
    },
    "1025": {
      "op": "DUP4"
    },
    "1026": {
      "op": "CODECOPY"
    },
    "1027": {
      "op": "DUP2"
    },
    "1028": {
      "op": "MLOAD"
    },
    "1029": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4860,
        4903
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1030": {
      "op": "MSTORE"
    },
    "1031": {
      "op": "SWAP1"
    },
    "1032": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4860,
        4903
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1034": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4860,
        4903
      ],
      "op": "ADD",
      "path": "9"
    },
    "1035": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4860,
        4903
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1037": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4860,
        4903
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1038": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4860,
        4903
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1039": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4860,
        4903
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1040": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4860,
        4903
      ],
      "op": "SUB",
      "path": "9"
    },
    "1041": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4685,
        4911
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1042": {
      "fn": "SEGA_v112.sendNativeAssets",
      "offset": [
        4685,
        4911
      ],
      "op": "LOG3",
      "path": "9"
    },
    "1043": {
      "fn": "SEGA_v112.sendNativeAssets",
      "jump": "o",
      "offset": [
        4685,
        4911
      ],
      "op": "POP",
      "path": "9"
    },
    "1044": {
      "fn": "SEGA_v112.unpauseTransfers",
      "offset": [
        3220,
        3300
      ],
      "op": "POP",
      "path": "9"
    },
    "1045": {
      "offset": [
        1330,
        1346
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1046": {
      "offset": [
        1330,
        1344
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1047": {
      "jump": "i",
      "offset": [
        1330,
        1346
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x41E"
    },
    "1050": {
      "fn": "SEGA_v112.unpauseTransfers",
      "offset": [
        1330,
        1346
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x906"
    },
    "1053": {
      "fn": "SEGA_v112.unpauseTransfers",
      "offset": [
        3282,
        3292
      ],
      "op": "JUMP",
      "path": "9",
      "statement": 12
    },
    "1054": {
      "fn": "SEGA_v112.unpauseTransfers",
      "offset": [
        3282,
        3290
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1055": {
      "fn": "SEGA_v112.unpauseTransfers",
      "jump": "i",
      "offset": [
        3282,
        3292
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3C6"
    },
    "1058": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        5900,
        6156
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC8C"
    },
    "1061": {
      "offset": [
        1417,
        1428
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1062": {
      "offset": [
        1417,
        1426
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1063": {
      "jump": "i",
      "offset": [
        1417,
        1428
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x42E"
    },
    "1066": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        1417,
        1428
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB9A"
    },
    "1069": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        5985,
        6047
      ],
      "op": "JUMP",
      "path": "9",
      "statement": 13
    },
    "1070": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6015,
        6028
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1071": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6030,
        6034
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x465"
    },
    "1074": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6036,
        6037
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1075": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6039,
        6046
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1076": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6039,
        6046
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1078": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6039,
        6046
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1080": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6039,
        6046
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1081": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6039,
        6046
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1082": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6039,
        6046
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1084": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6039,
        6046
      ],
      "op": "ADD",
      "path": "9"
    },
    "1085": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6039,
        6046
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1087": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6039,
        6046
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1088": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6039,
        6046
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1089": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6039,
        6046
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x12"
    },
    "1091": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6039,
        6046
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1092": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6039,
        6046
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1095": {
      "op": "ADD"
    },
    "1096": {
      "op": "PUSH18",
      "value": "0x151C985B9CD858DD1A5BDB8811985A5B1959"
    },
    "1115": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6039,
        6046
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x72"
    },
    "1117": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6039,
        6046
      ],
      "op": "SHL",
      "path": "9"
    },
    "1118": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6039,
        6046
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1119": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        5985,
        6014
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1120": {
      "fn": "SEGA_v112.callSC",
      "jump": "i",
      "offset": [
        5985,
        6047
      ],
      "op": "POP",
      "path": "9"
    },
    "1121": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        5985,
        6047
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD06"
    },
    "1124": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        5985,
        6047
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1125": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6058,
        6071
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1126": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6074,
        6089
      ],
      "op": "POP",
      "path": "9"
    },
    "1127": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6084,
        6088
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1129": {
      "fn": "SEGA_v112.getMethod",
      "offset": [
        6714,
        6716
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x473"
    },
    "1132": {
      "fn": "SEGA_v112.getMethod",
      "offset": [
        6704,
        6717
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1133": {
      "fn": "SEGA_v112.getMethod",
      "offset": [
        6736,
        6744
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1135": {
      "fn": "SEGA_v112.getMethod",
      "offset": [
        6736,
        6744
      ],
      "op": "ADD",
      "path": "9"
    },
    "1136": {
      "fn": "SEGA_v112.getMethod",
      "offset": [
        6588,
        6762
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1137": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6074,
        6089
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1138": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6105,
        6148
      ],
      "op": "JUMP",
      "path": "9",
      "statement": 14
    },
    "1139": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6105,
        6148
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1140": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6146,
        6147
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1141": {
      "op": "POP"
    },
    "1142": {
      "op": "DUP1"
    },
    "1143": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6058,
        6089
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1145": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6058,
        6089
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1149": {
      "op": "SHL"
    },
    "1150": {
      "op": "SUB"
    },
    "1151": {
      "op": "NOT"
    },
    "1152": {
      "op": "AND"
    },
    "1153": {
      "op": "DUP4"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1156": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6105,
        6148
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1158": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6105,
        6148
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "1160": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6105,
        6148
      ],
      "op": "SHL",
      "path": "9"
    },
    "1161": {
      "op": "SUB"
    },
    "1162": {
      "op": "AND"
    },
    "1163": {
      "op": "PUSH32",
      "value": "0xEC539C4DBCB33605D0AD29CD8CBD6CA59BB51A4B5EF9388E055A91A3A188339E"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1200": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6105,
        6148
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1201": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6105,
        6148
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4BC"
    },
    "1204": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6105,
        6148
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1205": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6105,
        6148
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1206": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6105,
        6148
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1209": {
      "op": "ADD"
    },
    "1210": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6105,
        6148
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1211": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6105,
        6148
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1212": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6105,
        6148
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1213": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6105,
        6148
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1215": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6105,
        6148
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1216": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6105,
        6148
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1217": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6105,
        6148
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1218": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        5974,
        6156
      ],
      "op": "SUB",
      "path": "9"
    },
    "1219": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        5900,
        6156
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1220": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        5900,
        6156
      ],
      "op": "LOG3",
      "path": "9"
    },
    "1221": {
      "fn": "SEGA_v112.callSC",
      "jump": "o",
      "offset": [
        5900,
        6156
      ],
      "op": "POP",
      "path": "9"
    },
    "1222": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5003,
        5387
      ],
      "op": "POP",
      "path": "9"
    },
    "1223": {
      "offset": [
        1417,
        1428
      ],
      "op": "POP",
      "path": "9"
    },
    "1224": {
      "offset": [
        1417,
        1426
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1225": {
      "jump": "i",
      "offset": [
        1417,
        1428
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1226": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        1417,
        1428
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4D1"
    },
    "1229": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5105,
        5121
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 15,
      "value": "0xB9A"
    },
    "1232": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5114,
        5120
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1233": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5105,
        5113
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1234": {
      "fn": "SEGA_v112.sendTokenAssets",
      "jump": "i",
      "offset": [
        5105,
        5121
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4DA"
    },
    "1237": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5105,
        5121
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1238": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5132,
        5150
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 16,
      "value": "0xC36"
    },
    "1241": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5141,
        5149
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1242": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5132,
        5140
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1243": {
      "fn": "SEGA_v112.sendTokenAssets",
      "jump": "i",
      "offset": [
        5132,
        5150
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4E3"
    },
    "1246": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5132,
        5150
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1247": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5183,
        5189
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC36"
    },
    "1250": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5201,
        5230
      ],
      "op": "JUMP",
      "path": "9",
      "statement": 17
    },
    "1251": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5183,
        5189
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1252": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5223,
        5229
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1253": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5201,
        5215
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4EE"
    },
    "1256": {
      "fn": "SEGA_v112.sendTokenAssets",
      "jump": "i",
      "offset": [
        5201,
        5230
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1257": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5201,
        5230
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1258": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE2E"
    },
    "1261": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1262": {
      "op": "JUMPDEST"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1265": {
      "op": "MLOAD"
    },
    "1266": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xA9059CBB"
    },
    "1271": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE0"
    },
    "1273": {
      "op": "SHL"
    },
    "1274": {
      "op": "DUP2"
    },
    "1275": {
      "op": "MSTORE"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1282": {
      "op": "SHL"
    },
    "1283": {
      "op": "SUB"
    },
    "1284": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "DUP6",
      "path": "9"
    },
    "1285": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1286": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "AND",
      "path": "9"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1289": {
      "op": "DUP4"
    },
    "1290": {
      "op": "ADD"
    },
    "1291": {
      "op": "MSTORE"
    },
    "1292": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1294": {
      "op": "DUP3"
    },
    "1295": {
      "op": "ADD"
    },
    "1296": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5241,
        5253
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1297": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5241,
        5253
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1298": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5270
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1299": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5270
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1301": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5270
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1302": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5270
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1303": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5270
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1304": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5270
      ],
      "op": "AND",
      "path": "9"
    },
    "1305": {
      "op": "SWAP1"
    },
    "1306": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1311": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1312": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "1314": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "ADD",
      "path": "9"
    },
    "1315": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1317": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1319": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1320": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1321": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1322": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "SUB",
      "path": "9"
    },
    "1323": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1324": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1326": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "DUP8",
      "path": "9"
    },
    "1327": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1328": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "1329": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1330": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1331": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1332": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x53C"
    },
    "1335": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1336": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1338": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1339": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1340": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1341": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "POP",
      "path": "9"
    },
    "1342": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "GAS",
      "path": "9"
    },
    "1343": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "CALL",
      "path": "9"
    },
    "1344": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1345": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1346": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1347": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x550"
    },
    "1350": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1351": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "1352": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1354": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1355": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "1356": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "1357": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1359": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1360": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1361": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "POP",
      "path": "9"
    },
    "1362": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "POP",
      "path": "9"
    },
    "1363": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "POP",
      "path": "9"
    },
    "1364": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "POP",
      "path": "9"
    },
    "1365": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1367": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1368": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "1369": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "1371": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "NOT",
      "path": "9"
    },
    "1372": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "1374": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1375": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "ADD",
      "path": "9"
    },
    "1376": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "AND",
      "path": "9"
    },
    "1377": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1378": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "ADD",
      "path": "9"
    },
    "1379": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1380": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1382": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1383": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "POP",
      "path": "9"
    },
    "1384": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1385": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "ADD",
      "path": "9"
    },
    "1386": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1387": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x574"
    },
    "1390": {
      "fn": "SEGA_v112.sendTokenAssets",
      "jump": "i",
      "offset": [
        5256,
        5288
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1391": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5256,
        5288
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1392": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5316,
        5323
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 18,
      "value": "0x10F0"
    },
    "1395": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5316,
        5323
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1396": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5316,
        5323
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1397": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5316,
        5323
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1398": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5316,
        5323
      ],
      "op": "POP",
      "path": "9"
    },
    "1399": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5316,
        5323
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1400": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5316,
        5323
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1402": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5316,
        5323
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1403": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5316,
        5323
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1404": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5316,
        5323
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1406": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5316,
        5323
      ],
      "op": "ADD",
      "path": "9"
    },
    "1407": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5316,
        5323
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1409": {
      "op": "MSTORE"
    },
    "1410": {
      "op": "DUP1"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1413": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5316,
        5323
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1414": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5316,
        5323
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1415": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5316,
        5323
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1417": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5316,
        5323
      ],
      "op": "ADD",
      "path": "9"
    },
    "1418": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5241,
        5288
      ],
      "op": "PUSH18",
      "path": "9",
      "value": "0x151C985B9CD858DD1A5BDB8811985A5B1959"
    },
    "1437": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5241,
        5288
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x72"
    },
    "1439": {
      "op": "SHL"
    },
    "1440": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5241,
        5288
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1441": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5299,
        5324
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1442": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5299,
        5324
      ],
      "op": "POP",
      "path": "9"
    },
    "1443": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5299,
        5324
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1444": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5299,
        5324
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5C9"
    },
    "1447": {
      "op": "JUMPI"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1450": {
      "op": "MLOAD"
    },
    "1451": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5299,
        5324
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x461BCD"
    },
    "1455": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5299,
        5324
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE5"
    },
    "1457": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5299,
        5324
      ],
      "op": "SHL",
      "path": "9"
    },
    "1458": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5299,
        5324
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1459": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5299,
        5324
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1460": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5299,
        5324
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1462": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5299,
        5324
      ],
      "op": "ADD",
      "path": "9"
    },
    "1463": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5299,
        5324
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5C0"
    },
    "1466": {
      "fn": "SEGA_v112.sendTokenAssets",
      "jump": "i",
      "offset": [
        5299,
        5324
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1467": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5299,
        5324
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1468": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5299,
        5324
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1160"
    },
    "1471": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5299,
        5324
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1472": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5299,
        5324
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1473": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5299,
        5324
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1475": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5299,
        5324
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1476": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5299,
        5324
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1477": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5299,
        5324
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1478": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5299,
        5324
      ],
      "op": "SUB",
      "path": "9"
    },
    "1479": {
      "op": "SWAP1"
    },
    "1480": {
      "op": "REVERT"
    },
    "1481": {
      "op": "JUMPDEST"
    },
    "1482": {
      "op": "POP"
    },
    "1483": {
      "op": "DUP4"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1490": {
      "op": "SHL"
    },
    "1491": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5340,
        5379
      ],
      "op": "SUB",
      "path": "9",
      "statement": 19
    },
    "1492": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5340,
        5379
      ],
      "op": "AND",
      "path": "9"
    },
    "1493": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5340,
        5379
      ],
      "op": "DUP6",
      "path": "9"
    },
    "1494": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5340,
        5379
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1496": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5340,
        5379
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1498": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5340,
        5379
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "1500": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5340,
        5379
      ],
      "op": "SHL",
      "path": "9"
    },
    "1501": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5340,
        5379
      ],
      "op": "SUB",
      "path": "9"
    },
    "1502": {
      "op": "AND"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1505": {
      "op": "DUP1"
    },
    "1506": {
      "op": "MLOAD"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1509": {
      "op": "PUSH2",
      "value": "0x11EF"
    },
    "1512": {
      "op": "DUP4"
    },
    "1513": {
      "op": "CODECOPY"
    },
    "1514": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5340,
        5379
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1515": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5340,
        5379
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1516": {
      "op": "SWAP2"
    },
    "1517": {
      "op": "MSTORE"
    },
    "1518": {
      "op": "DUP6"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1521": {
      "op": "MLOAD"
    },
    "1522": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5340,
        5379
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5FD"
    },
    "1525": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5340,
        5379
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1526": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5340,
        5379
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1527": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5340,
        5379
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1528": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5340,
        5379
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1530": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5340,
        5379
      ],
      "op": "ADD",
      "path": "9"
    },
    "1531": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5340,
        5379
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1532": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5340,
        5379
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1533": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5094,
        5387
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1534": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5094,
        5387
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1536": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5003,
        5387
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1537": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5003,
        5387
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1538": {
      "fn": "SEGA_v112.sendTokenAssets",
      "offset": [
        5003,
        5387
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1539": {
      "fn": "SEGA_v112.sendTokenAssets",
      "jump": "o",
      "offset": [
        5003,
        5387
      ],
      "op": "SUB",
      "path": "9"
    },
    "1540": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3968,
        4319
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1541": {
      "offset": [
        1499,
        1517
      ],
      "op": "LOG3",
      "path": "9"
    },
    "1542": {
      "offset": [
        1499,
        1515
      ],
      "op": "POP",
      "path": "9"
    },
    "1543": {
      "jump": "i",
      "offset": [
        1499,
        1517
      ],
      "op": "POP",
      "path": "9"
    },
    "1544": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        1499,
        1517
      ],
      "op": "POP",
      "path": "9"
    },
    "1545": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4058,
        4074
      ],
      "op": "POP",
      "path": "9",
      "statement": 20
    },
    "1546": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4067,
        4073
      ],
      "op": "POP",
      "path": "9"
    },
    "1547": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4058,
        4066
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1548": {
      "fn": "SEGA_v112.returnToVault",
      "jump": "i",
      "offset": [
        4058,
        4074
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1549": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4058,
        4074
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x614"
    },
    "1552": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4107,
        4113
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x964"
    },
    "1555": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4125,
        4155
      ],
      "op": "JUMP",
      "path": "9",
      "statement": 21
    },
    "1556": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4107,
        4113
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1557": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4147,
        4154
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x61D"
    },
    "1560": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4125,
        4139
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1561": {
      "fn": "SEGA_v112.returnToVault",
      "jump": "i",
      "offset": [
        4125,
        4155
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC36"
    },
    "1564": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4125,
        4155
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1565": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4166,
        4178
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1566": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4196,
        4207
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1567": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4196,
        4207
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x628"
    },
    "1570": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1571": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1572": {
      "op": "PUSH2",
      "value": "0xE2E"
    },
    "1575": {
      "op": "JUMP"
    },
    "1576": {
      "op": "JUMPDEST"
    },
    "1577": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1579": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1580": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4196,
        4207
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1581": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4196,
        4207
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1583": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4196,
        4207
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1584": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4196,
        4207
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xA9059CBB"
    },
    "1589": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1591": {
      "op": "SHL"
    },
    "1592": {
      "op": "DUP2"
    },
    "1593": {
      "op": "MSTORE"
    },
    "1594": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1597": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4196,
        4207
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1598": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4196,
        4207
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1599": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4196,
        4207
      ],
      "op": "DIV",
      "path": "9"
    },
    "1600": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1602": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1604": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "1606": {
      "op": "SHL"
    },
    "1607": {
      "op": "SUB"
    },
    "1608": {
      "op": "SWAP1"
    },
    "1609": {
      "op": "DUP2"
    },
    "1610": {
      "op": "AND"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1613": {
      "op": "DUP4"
    },
    "1614": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4195
      ],
      "op": "ADD",
      "path": "9"
    },
    "1615": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4195
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1616": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4195
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "1618": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4195
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1619": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4195
      ],
      "op": "ADD",
      "path": "9"
    },
    "1620": {
      "op": "DUP6"
    },
    "1621": {
      "op": "SWAP1"
    },
    "1622": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1623": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1624": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "AND",
      "path": "9"
    },
    "1625": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1626": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xA9059CBB"
    },
    "1631": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1632": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "1634": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "ADD",
      "path": "9"
    },
    "1635": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1637": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1639": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1640": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1641": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1642": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "SUB",
      "path": "9"
    },
    "1643": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1644": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1646": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "DUP8",
      "path": "9"
    },
    "1647": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1648": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "1649": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1650": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1651": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1652": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x67C"
    },
    "1655": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1656": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1658": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1659": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1660": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1661": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "POP",
      "path": "9"
    },
    "1662": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "GAS",
      "path": "9"
    },
    "1663": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "CALL",
      "path": "9"
    },
    "1664": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1665": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1666": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1667": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x690"
    },
    "1670": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1671": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "1672": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1674": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1675": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "1676": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "1677": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1679": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1680": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1681": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "POP",
      "path": "9"
    },
    "1682": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "POP",
      "path": "9"
    },
    "1683": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "POP",
      "path": "9"
    },
    "1684": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "POP",
      "path": "9"
    },
    "1685": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1687": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1688": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "1689": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "1691": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "NOT",
      "path": "9"
    },
    "1692": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "1694": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1695": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "ADD",
      "path": "9"
    },
    "1696": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "AND",
      "path": "9"
    },
    "1697": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1698": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "ADD",
      "path": "9"
    },
    "1699": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1700": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1702": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1703": {
      "fn": "SEGA_v112.returnToVault",
      "jump": "i",
      "offset": [
        4181,
        4216
      ],
      "op": "POP",
      "path": "9"
    },
    "1704": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4181,
        4216
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1705": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4244,
        4251
      ],
      "op": "ADD",
      "path": "9",
      "statement": 22
    },
    "1706": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4244,
        4251
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1707": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4244,
        4251
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6B4"
    },
    "1710": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4244,
        4251
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1711": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4244,
        4251
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1712": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4244,
        4251
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10F0"
    },
    "1715": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4244,
        4251
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1716": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4244,
        4251
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1717": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4244,
        4251
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1718": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4244,
        4251
      ],
      "op": "POP",
      "path": "9"
    },
    "1719": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4244,
        4251
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1720": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4244,
        4251
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1722": {
      "op": "MLOAD"
    },
    "1723": {
      "op": "DUP1"
    },
    "1724": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1726": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4244,
        4251
      ],
      "op": "ADD",
      "path": "9"
    },
    "1727": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4244,
        4251
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1729": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4244,
        4251
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1730": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4244,
        4251
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1731": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4166,
        4216
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x12"
    },
    "1733": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4166,
        4216
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1734": {
      "op": "MSTORE"
    },
    "1735": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4166,
        4216
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1737": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4227,
        4252
      ],
      "op": "ADD",
      "path": "9"
    },
    "1738": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4227,
        4252
      ],
      "op": "PUSH18",
      "path": "9",
      "value": "0x151C985B9CD858DD1A5BDB8811985A5B1959"
    },
    "1757": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4227,
        4252
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x72"
    },
    "1759": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4227,
        4252
      ],
      "op": "SHL",
      "path": "9"
    },
    "1760": {
      "op": "DUP2"
    },
    "1761": {
      "op": "MSTORE"
    },
    "1762": {
      "op": "POP"
    },
    "1763": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4227,
        4252
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1764": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4227,
        4252
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x700"
    },
    "1767": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4227,
        4252
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1768": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4227,
        4252
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1770": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4227,
        4252
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1771": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4227,
        4252
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x461BCD"
    },
    "1775": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4227,
        4252
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE5"
    },
    "1777": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4227,
        4252
      ],
      "op": "SHL",
      "path": "9"
    },
    "1778": {
      "fn": "SEGA_v112.returnToVault",
      "jump": "i",
      "offset": [
        4227,
        4252
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1779": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4227,
        4252
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1782": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4282,
        4293
      ],
      "op": "ADD",
      "path": "9",
      "statement": 23
    },
    "1783": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4282,
        4293
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5C0"
    },
    "1786": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4282,
        4293
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1787": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4268,
        4311
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1788": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4268,
        4311
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1160"
    },
    "1791": {
      "op": "JUMP"
    },
    "1792": {
      "op": "JUMPDEST"
    },
    "1793": {
      "op": "POP"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1796": {
      "op": "SLOAD"
    },
    "1797": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1799": {
      "op": "MLOAD"
    },
    "1800": {
      "op": "DUP5"
    },
    "1801": {
      "op": "DUP2"
    },
    "1802": {
      "op": "MSTORE"
    },
    "1803": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4268,
        4311
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1805": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4268,
        4311
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1807": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4268,
        4311
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "1809": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4268,
        4311
      ],
      "op": "SHL",
      "path": "9"
    },
    "1810": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4282,
        4293
      ],
      "op": "SUB",
      "path": "9"
    },
    "1811": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4282,
        4293
      ],
      "op": "DUP7",
      "path": "9"
    },
    "1812": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4282,
        4293
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1813": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4282,
        4293
      ],
      "op": "AND",
      "path": "9"
    },
    "1814": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4282,
        4293
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1815": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4282,
        4293
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x100"
    },
    "1818": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4282,
        4293
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1819": {
      "op": "DIV"
    },
    "1820": {
      "op": "AND"
    },
    "1821": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4282,
        4293
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1824": {
      "op": "DUP1"
    },
    "1825": {
      "op": "MLOAD"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1828": {
      "op": "PUSH2",
      "value": "0x11EF"
    },
    "1831": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4268,
        4311
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1832": {
      "op": "CODECOPY"
    },
    "1833": {
      "op": "DUP2"
    },
    "1834": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4268,
        4311
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1835": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4268,
        4311
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1836": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4268,
        4311
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1837": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4268,
        4311
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1838": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4268,
        4311
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1840": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4268,
        4311
      ],
      "op": "ADD",
      "path": "9"
    },
    "1841": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4268,
        4311
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1842": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4268,
        4311
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1844": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4047,
        4319
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1845": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        4047,
        4319
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1846": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3968,
        4319
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1847": {
      "fn": "SEGA_v112.returnToVault",
      "offset": [
        3968,
        4319
      ],
      "op": "SUB",
      "path": "9"
    },
    "1848": {
      "fn": "SEGA_v112.returnToVault",
      "jump": "o",
      "offset": [
        3968,
        4319
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1849": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6168,
        6450
      ],
      "op": "LOG3",
      "path": "9"
    },
    "1850": {
      "offset": [
        1417,
        1428
      ],
      "op": "POP",
      "path": "9"
    },
    "1851": {
      "offset": [
        1417,
        1426
      ],
      "op": "POP",
      "path": "9"
    },
    "1852": {
      "jump": "i",
      "offset": [
        1417,
        1428
      ],
      "op": "POP",
      "path": "9"
    },
    "1853": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        1417,
        1428
      ],
      "op": "POP",
      "path": "9"
    },
    "1854": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6269,
        6336
      ],
      "op": "JUMP",
      "path": "9",
      "statement": 24
    },
    "1855": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6299,
        6312
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1856": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6314,
        6318
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x747"
    },
    "1859": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6320,
        6326
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB9A"
    },
    "1862": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6328,
        6335
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1863": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6328,
        6335
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1864": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6328,
        6335
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x77D"
    },
    "1867": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6328,
        6335
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1868": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6328,
        6335
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1869": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6328,
        6335
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1870": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6328,
        6335
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1872": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6328,
        6335
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1873": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6328,
        6335
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1874": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6328,
        6335
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1876": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6328,
        6335
      ],
      "op": "ADD",
      "path": "9"
    },
    "1877": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6328,
        6335
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1879": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6328,
        6335
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1880": {
      "op": "DUP1"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1883": {
      "op": "DUP2"
    },
    "1884": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6328,
        6335
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1885": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6328,
        6335
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1887": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6328,
        6335
      ],
      "op": "ADD",
      "path": "9"
    },
    "1888": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6269,
        6298
      ],
      "op": "PUSH18",
      "path": "9",
      "value": "0x151C985B9CD858DD1A5BDB8811985A5B1959"
    },
    "1907": {
      "fn": "SEGA_v112.callSC",
      "jump": "i",
      "offset": [
        6269,
        6336
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x72"
    },
    "1909": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6269,
        6336
      ],
      "op": "SHL",
      "path": "9"
    },
    "1910": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6269,
        6336
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1911": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6347,
        6360
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1912": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6363,
        6378
      ],
      "op": "POP",
      "path": "9"
    },
    "1913": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6373,
        6377
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD06"
    },
    "1916": {
      "fn": "SEGA_v112.getMethod",
      "offset": [
        6714,
        6716
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1917": {
      "fn": "SEGA_v112.getMethod",
      "offset": [
        6704,
        6717
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1918": {
      "fn": "SEGA_v112.getMethod",
      "offset": [
        6736,
        6744
      ],
      "op": "POP",
      "path": "9"
    },
    "1919": {
      "fn": "SEGA_v112.getMethod",
      "offset": [
        6736,
        6744
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1921": {
      "fn": "SEGA_v112.getMethod",
      "offset": [
        6588,
        6762
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x78B"
    },
    "1924": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6363,
        6378
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1925": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6394,
        6442
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 25,
      "value": "0x20"
    },
    "1927": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6394,
        6442
      ],
      "op": "ADD",
      "path": "9"
    },
    "1928": {
      "op": "MLOAD"
    },
    "1929": {
      "op": "SWAP1"
    },
    "1930": {
      "op": "JUMP"
    },
    "1931": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6347,
        6378
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1932": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6347,
        6378
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1933": {
      "op": "POP"
    },
    "1934": {
      "op": "DUP1"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1941": {
      "op": "SHL"
    },
    "1942": {
      "op": "SUB"
    },
    "1943": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6394,
        6442
      ],
      "op": "NOT",
      "path": "9"
    },
    "1944": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6394,
        6442
      ],
      "op": "AND",
      "path": "9"
    },
    "1945": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6394,
        6442
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1952": {
      "op": "SHL"
    },
    "1953": {
      "op": "SUB"
    },
    "1954": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6394,
        6442
      ],
      "op": "AND",
      "path": "9"
    },
    "1955": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6394,
        6442
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xEC539C4DBCB33605D0AD29CD8CBD6CA59BB51A4B5EF9388E055A91A3A188339E"
    },
    "1988": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6394,
        6442
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1989": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6394,
        6442
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1991": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6394,
        6442
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1992": {
      "op": "PUSH2",
      "value": "0x731"
    },
    "1995": {
      "op": "SWAP2"
    },
    "1996": {
      "fn": "SEGA_v112.callSC",
      "offset": [
        6394,
        6442
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1997": {
      "op": "MSTORE"
    },
    "1998": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5399,
        5739
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2000": {
      "offset": [
        1417,
        1428
      ],
      "op": "ADD",
      "path": "9"
    },
    "2001": {
      "offset": [
        1417,
        1426
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2002": {
      "jump": "i",
      "offset": [
        1417,
        1428
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2003": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        1417,
        1428
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2004": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5497,
        5513
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 26,
      "value": "0x7DB"
    },
    "2007": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5506,
        5512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB9A"
    },
    "2010": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5497,
        5505
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2011": {
      "fn": "SEGA_v112.tokenApprove",
      "jump": "i",
      "offset": [
        5497,
        5513
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2012": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5497,
        5513
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7E4"
    },
    "2015": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5524,
        5541
      ],
      "op": "DUP3",
      "path": "9",
      "statement": 27
    },
    "2016": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5533,
        5540
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC36"
    },
    "2019": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5524,
        5532
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2020": {
      "fn": "SEGA_v112.tokenApprove",
      "jump": "i",
      "offset": [
        5524,
        5541
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2021": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5524,
        5541
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7ED"
    },
    "2024": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2025": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC36"
    },
    "2028": {
      "op": "JUMP"
    },
    "2029": {
      "op": "JUMPDEST"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2032": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2033": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x95EA7B3"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2040": {
      "op": "SHL"
    },
    "2041": {
      "op": "DUP2"
    },
    "2042": {
      "op": "MSTORE"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2049": {
      "op": "SHL"
    },
    "2050": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "SUB",
      "path": "9"
    },
    "2051": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2052": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2053": {
      "op": "AND"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2056": {
      "op": "DUP4"
    },
    "2057": {
      "op": "ADD"
    },
    "2058": {
      "op": "MSTORE"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2061": {
      "op": "DUP3"
    },
    "2062": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5574,
        5580
      ],
      "op": "ADD",
      "path": "9"
    },
    "2063": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5574,
        5580
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2064": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5552,
        5564
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2065": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5552,
        5564
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2066": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5620
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2067": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5620
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2068": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5620
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2070": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5620
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2071": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5620
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2072": {
      "op": "AND"
    },
    "2073": {
      "op": "SWAP1"
    },
    "2074": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x95EA7B3"
    },
    "2079": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2080": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "2082": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "ADD",
      "path": "9"
    },
    "2083": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2085": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2087": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2088": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2089": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2090": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "SUB",
      "path": "9"
    },
    "2091": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2092": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2094": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "DUP8",
      "path": "9"
    },
    "2095": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2096": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "2097": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2098": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2099": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2100": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x83C"
    },
    "2103": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2104": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2106": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2107": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "REVERT",
      "path": "9"
    },
    "2108": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2109": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "POP",
      "path": "9"
    },
    "2110": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "GAS",
      "path": "9"
    },
    "2111": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "CALL",
      "path": "9"
    },
    "2112": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2113": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2114": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2115": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x850"
    },
    "2118": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2119": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "2120": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2122": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2123": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "2124": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "2125": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2127": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "REVERT",
      "path": "9"
    },
    "2128": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2129": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "POP",
      "path": "9"
    },
    "2130": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "POP",
      "path": "9"
    },
    "2131": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "POP",
      "path": "9"
    },
    "2132": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "POP",
      "path": "9"
    },
    "2133": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2135": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2136": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "2137": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "2139": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "NOT",
      "path": "9"
    },
    "2140": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "2142": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2143": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "ADD",
      "path": "9"
    },
    "2144": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "AND",
      "path": "9"
    },
    "2145": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2146": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "ADD",
      "path": "9"
    },
    "2147": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2148": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2150": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2151": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "POP",
      "path": "9"
    },
    "2152": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2153": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "ADD",
      "path": "9"
    },
    "2154": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2155": {
      "fn": "SEGA_v112.tokenApprove",
      "jump": "i",
      "offset": [
        5607,
        5637
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x874"
    },
    "2158": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5607,
        5637
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2159": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5665,
        5672
      ],
      "op": "SWAP1",
      "path": "9",
      "statement": 28
    },
    "2160": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5665,
        5672
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10F0"
    },
    "2163": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5665,
        5672
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2164": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5665,
        5672
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2165": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5665,
        5672
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2166": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5665,
        5672
      ],
      "op": "POP",
      "path": "9"
    },
    "2167": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5665,
        5672
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2168": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5665,
        5672
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2170": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5665,
        5672
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2171": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5665,
        5672
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2172": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5665,
        5672
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2174": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5665,
        5672
      ],
      "op": "ADD",
      "path": "9"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2177": {
      "op": "MSTORE"
    },
    "2178": {
      "op": "DUP1"
    },
    "2179": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5665,
        5672
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x12"
    },
    "2181": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5665,
        5672
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2182": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5665,
        5672
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2183": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5665,
        5672
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2185": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5592,
        5637
      ],
      "op": "ADD",
      "path": "9"
    },
    "2186": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5592,
        5637
      ],
      "op": "PUSH18",
      "path": "9",
      "value": "0x151C985B9CD858DD1A5BDB8811985A5B1959"
    },
    "2205": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "2207": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5592,
        5637
      ],
      "op": "SHL",
      "path": "9"
    },
    "2208": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5648,
        5673
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2209": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5648,
        5673
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2210": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5648,
        5673
      ],
      "op": "POP",
      "path": "9"
    },
    "2211": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5648,
        5673
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2212": {
      "op": "PUSH2",
      "value": "0x8C0"
    },
    "2215": {
      "op": "JUMPI"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2218": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5648,
        5673
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2219": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5648,
        5673
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x461BCD"
    },
    "2223": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5648,
        5673
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE5"
    },
    "2225": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5648,
        5673
      ],
      "op": "SHL",
      "path": "9"
    },
    "2226": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5648,
        5673
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2227": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5648,
        5673
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2228": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5648,
        5673
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2230": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5648,
        5673
      ],
      "op": "ADD",
      "path": "9"
    },
    "2231": {
      "fn": "SEGA_v112.tokenApprove",
      "jump": "i",
      "offset": [
        5648,
        5673
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5C0"
    },
    "2234": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5648,
        5673
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2235": {
      "op": "SWAP1"
    },
    "2236": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5689,
        5731
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 29,
      "value": "0x1160"
    },
    "2239": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5689,
        5731
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2240": {
      "op": "JUMPDEST"
    },
    "2241": {
      "op": "POP"
    },
    "2242": {
      "op": "DUP4"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2249": {
      "op": "SHL"
    },
    "2250": {
      "op": "SUB"
    },
    "2251": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5689,
        5731
      ],
      "op": "AND",
      "path": "9"
    },
    "2252": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5689,
        5731
      ],
      "op": "DUP6",
      "path": "9"
    },
    "2253": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5689,
        5731
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2255": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5689,
        5731
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2257": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5689,
        5731
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "2259": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5689,
        5731
      ],
      "op": "SHL",
      "path": "9"
    },
    "2260": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5689,
        5731
      ],
      "op": "SUB",
      "path": "9"
    },
    "2261": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5689,
        5731
      ],
      "op": "AND",
      "path": "9"
    },
    "2262": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5689,
        5731
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x4E48F8EA88AB4EEBCE074074F123DA6364EF9C1734C8E16843337615C081AD68"
    },
    "2295": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5689,
        5731
      ],
      "op": "DUP6",
      "path": "9"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2298": {
      "op": "MLOAD"
    },
    "2299": {
      "fn": "SEGA_v112.tokenApprove",
      "offset": [
        5689,
        5731
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5FD"
    },
    "2302": {
      "op": "SWAP2"
    },
    "2303": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1545,
        1648
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2304": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1618,
        1629
      ],
      "op": "MSTORE",
      "path": "9",
      "statement": 30
    },
    "2305": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1618,
        1629
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2307": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1631,
        1639
      ],
      "op": "ADD",
      "path": "9"
    },
    "2308": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1631,
        1639
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2309": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1631,
        1639
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2310": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1631,
        1639
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2311": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1631,
        1639
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2313": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1631,
        1639
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2314": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1631,
        1639
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2316": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1631,
        1639
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2317": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1631,
        1639
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2318": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1631,
        1639
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2319": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1631,
        1639
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2320": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1631,
        1639
      ],
      "op": "ADD",
      "path": "9"
    },
    "2321": {
      "op": "SWAP1"
    },
    "2322": {
      "op": "SWAP2"
    },
    "2323": {
      "op": "MSTORE"
    },
    "2324": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1631,
        1639
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x13"
    },
    "2326": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1631,
        1639
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2327": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1631,
        1639
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2328": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1631,
        1639
      ],
      "op": "PUSH19",
      "path": "9",
      "value": "0x155CD95C881B9BDD08105D5D1A1BDC9A5E9959"
    },
    "2348": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1631,
        1639
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x6A"
    },
    "2350": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1618,
        1629
      ],
      "op": "SHL",
      "path": "9"
    },
    "2351": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1618,
        1629
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2353": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1618,
        1629
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2354": {
      "op": "ADD"
    },
    "2355": {
      "op": "MSTORE"
    },
    "2356": {
      "op": "SWAP1"
    },
    "2357": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "2360": {
      "op": "SWAP1"
    },
    "2361": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1618,
        1629
      ],
      "op": "DIV",
      "path": "9"
    },
    "2362": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1604,
        1614
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2364": {
      "branch": 48,
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1604,
        1629
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2366": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1596,
        1640
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "2368": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1596,
        1640
      ],
      "op": "SHL",
      "path": "9"
    },
    "2369": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1596,
        1640
      ],
      "op": "SUB",
      "path": "9"
    },
    "2370": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1596,
        1640
      ],
      "op": "AND",
      "path": "9"
    },
    "2371": {
      "op": "CALLER"
    },
    "2372": {
      "op": "EQ"
    },
    "2373": {
      "op": "PUSH2",
      "value": "0x961"
    },
    "2376": {
      "branch": 48,
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1596,
        1640
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2377": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1596,
        1640
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2379": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1596,
        1640
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2380": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1596,
        1640
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x461BCD"
    },
    "2384": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1596,
        1640
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE5"
    },
    "2386": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1596,
        1640
      ],
      "op": "SHL",
      "path": "9"
    },
    "2387": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1596,
        1640
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2388": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1596,
        1640
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2389": {
      "fn": "SEGA_v112._isParentVault",
      "jump": "i",
      "offset": [
        1596,
        1640
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2391": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1596,
        1640
      ],
      "op": "ADD",
      "path": "9"
    },
    "2392": {
      "fn": "SEGA_v112._isParentVault",
      "offset": [
        1596,
        1640
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5C0"
    },
    "2395": {
      "fn": "SEGA_v112._isParentVault",
      "jump": "o",
      "offset": [
        1545,
        1648
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2396": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1788,
        1970
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2397": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1864,
        1875
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 31,
      "value": "0x1160"
    },
    "2400": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1864,
        1875
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2401": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1864,
        1875
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2402": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1864,
        1875
      ],
      "op": "POP",
      "path": "9"
    },
    "2403": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1864,
        1875
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2404": {
      "op": "JUMPDEST"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2407": {
      "op": "SLOAD"
    },
    "2408": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "2411": {
      "op": "SWAP1"
    },
    "2412": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1864,
        1875
      ],
      "op": "DIV",
      "path": "9"
    },
    "2413": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1850,
        1860
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2415": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1850,
        1875
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2417": {
      "branch": 49,
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1850,
        1875
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "2419": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1850,
        1931
      ],
      "op": "SHL",
      "path": "9"
    },
    "2420": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1850,
        1931
      ],
      "op": "SUB",
      "path": "9"
    },
    "2421": {
      "op": "AND"
    },
    "2422": {
      "fn": "Pausable.paused",
      "offset": [
        1088,
        1092
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2423": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "EQ",
      "path": "0"
    },
    "2424": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2425": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x99A"
    },
    "2428": {
      "branch": 49,
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1897,
        1906
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2429": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1897,
        1930
      ],
      "op": "POP",
      "path": "9"
    },
    "2430": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1897,
        1930
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2432": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1897,
        1930
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2433": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1897,
        1930
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "2435": {
      "op": "AND"
    },
    "2436": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1924,
        1930
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2437": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1924,
        1930
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2438": {
      "op": "ISZERO"
    },
    "2439": {
      "op": "PUSH2",
      "value": "0x99A"
    },
    "2442": {
      "op": "JUMPI"
    },
    "2443": {
      "op": "POP"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2446": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1924,
        1930
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2447": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1910,
        1920
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2449": {
      "branch": 50,
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1910,
        1930
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2451": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1897,
        1930
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "2453": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1943,
        1951
      ],
      "op": "SHL",
      "path": "9"
    },
    "2454": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1943,
        1951
      ],
      "op": "SUB",
      "path": "9"
    },
    "2455": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1943,
        1951
      ],
      "op": "AND",
      "path": "9"
    },
    "2456": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1943,
        1951
      ],
      "op": "CALLER",
      "path": "9"
    },
    "2457": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1943,
        1951
      ],
      "op": "EQ",
      "path": "9"
    },
    "2458": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1943,
        1951
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2459": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1943,
        1951
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2461": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1943,
        1951
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2462": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1943,
        1951
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2463": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1943,
        1951
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2465": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1943,
        1951
      ],
      "op": "ADD",
      "path": "9"
    },
    "2466": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1943,
        1951
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2468": {
      "op": "MSTORE"
    },
    "2469": {
      "op": "DUP1"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "2472": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1943,
        1951
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2473": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1943,
        1951
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2474": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1943,
        1951
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2476": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1943,
        1951
      ],
      "op": "ADD",
      "path": "9"
    },
    "2477": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1943,
        1951
      ],
      "op": "PUSH19",
      "path": "9",
      "value": "0x155CD95C881B9BDD08105D5D1A1BDC9A5E9959"
    },
    "2497": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1841,
        1962
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x6A"
    },
    "2499": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1841,
        1962
      ],
      "op": "SHL",
      "path": "9"
    },
    "2500": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1841,
        1962
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2501": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1841,
        1962
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2502": {
      "op": "POP"
    },
    "2503": {
      "op": "SWAP1"
    },
    "2504": {
      "op": "PUSH2",
      "value": "0x961"
    },
    "2507": {
      "branch": 50,
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1841,
        1962
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2508": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1841,
        1962
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2510": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1841,
        1962
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2511": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1841,
        1962
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x461BCD"
    },
    "2515": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1841,
        1962
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE5"
    },
    "2517": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1841,
        1962
      ],
      "op": "SHL",
      "path": "9"
    },
    "2518": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1841,
        1962
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2519": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "offset": [
        1841,
        1962
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2520": {
      "fn": "SEGA_v112._isVaultOrTrader",
      "jump": "i",
      "offset": [
        1841,
        1962
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2522": {
      "fn": "Address.sendValue",
      "offset": [
        2012,
        2324
      ],
      "op": "ADD",
      "path": "2"
    },
    "2523": {
      "fn": "Address.sendValue",
      "offset": [
        2126,
        2132
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 32,
      "value": "0x5C0"
    },
    "2526": {
      "fn": "Address.sendValue",
      "offset": [
        2101,
        2122
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2527": {
      "fn": "Address.sendValue",
      "offset": [
        2101,
        2132
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2528": {
      "branch": 53,
      "fn": "Address.sendValue",
      "offset": [
        2101,
        2132
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1160"
    },
    "2531": {
      "fn": "Address.sendValue",
      "offset": [
        2093,
        2166
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2532": {
      "fn": "Address.sendValue",
      "offset": [
        2093,
        2166
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2533": {
      "fn": "Address.sendValue",
      "offset": [
        2093,
        2166
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2534": {
      "fn": "Address.sendValue",
      "offset": [
        2093,
        2166
      ],
      "op": "SELFBALANCE",
      "path": "2"
    },
    "2535": {
      "op": "LT"
    },
    "2536": {
      "op": "ISZERO"
    },
    "2537": {
      "op": "PUSH2",
      "value": "0xA34"
    },
    "2540": {
      "branch": 53,
      "fn": "Address.sendValue",
      "offset": [
        2093,
        2166
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2541": {
      "fn": "Address.sendValue",
      "offset": [
        2093,
        2166
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2543": {
      "op": "MLOAD"
    },
    "2544": {
      "fn": "Address.sendValue",
      "offset": [
        2093,
        2166
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0x461BCD"
    },
    "2548": {
      "fn": "Address.sendValue",
      "offset": [
        2093,
        2166
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE5"
    },
    "2550": {
      "fn": "Address.sendValue",
      "offset": [
        2093,
        2166
      ],
      "op": "SHL",
      "path": "2"
    },
    "2551": {
      "op": "DUP2"
    },
    "2552": {
      "op": "MSTORE"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2557": {
      "op": "DUP3"
    },
    "2558": {
      "op": "ADD"
    },
    "2559": {
      "op": "MSTORE"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2564": {
      "op": "DUP3"
    },
    "2565": {
      "op": "ADD"
    },
    "2566": {
      "op": "MSTORE"
    },
    "2567": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E6365000000"
    },
    "2600": {
      "fn": "Address.sendValue",
      "offset": [
        2093,
        2166
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "2602": {
      "op": "DUP3"
    },
    "2603": {
      "fn": "Address.sendValue",
      "offset": [
        2093,
        2166
      ],
      "op": "ADD",
      "path": "2"
    },
    "2604": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2605": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "2607": {
      "fn": "Address.sendValue",
      "offset": [
        2178,
        2190
      ],
      "op": "ADD",
      "path": "2"
    },
    "2608": {
      "fn": "Address.sendValue",
      "offset": [
        2178,
        2190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C0"
    },
    "2611": {
      "op": "JUMP"
    },
    "2612": {
      "op": "JUMPDEST"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2615": {
      "op": "DUP3"
    },
    "2616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2618": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2210
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2620": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2210
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "2622": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2210
      ],
      "op": "SHL",
      "path": "2"
    },
    "2623": {
      "fn": "Address.sendValue",
      "offset": [
        2218,
        2224
      ],
      "op": "SUB",
      "path": "2"
    },
    "2624": {
      "fn": "Address.sendValue",
      "offset": [
        2218,
        2224
      ],
      "op": "AND",
      "path": "2"
    },
    "2625": {
      "fn": "Address.sendValue",
      "offset": [
        2178,
        2190
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2626": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2628": {
      "fn": "Address.sendValue",
      "offset": [
        2178,
        2190
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2629": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2631": {
      "fn": "Address.sendValue",
      "offset": [
        2218,
        2224
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2633": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2210
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2634": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2635": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2636": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "SUB",
      "path": "2"
    },
    "2637": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2638": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2639": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2640": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "GAS",
      "path": "2"
    },
    "2641": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "CALL",
      "path": "2"
    },
    "2642": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2643": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "POP",
      "path": "2"
    },
    "2644": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "POP",
      "path": "2"
    },
    "2645": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "POP",
      "path": "2"
    },
    "2646": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2647": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2648": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2650": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2651": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "EQ",
      "path": "2"
    },
    "2652": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA81"
    },
    "2655": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2656": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2658": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2659": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2660": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "POP",
      "path": "2"
    },
    "2661": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2663": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "NOT",
      "path": "2"
    },
    "2664": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "2666": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2667": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "ADD",
      "path": "2"
    },
    "2668": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "AND",
      "path": "2"
    },
    "2669": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2670": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "ADD",
      "path": "2"
    },
    "2671": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2673": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2674": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2675": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2676": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2677": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2678": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2680": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2682": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2683": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "ADD",
      "path": "2"
    },
    "2684": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2685": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA86"
    },
    "2688": {
      "fn": "Address.sendValue",
      "offset": [
        2196,
        2229
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2689": {
      "fn": "Address.sendValue",
      "offset": [
        2177,
        2229
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2690": {
      "fn": "Address.sendValue",
      "offset": [
        2177,
        2229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2692": {
      "fn": "Address.sendValue",
      "offset": [
        2177,
        2229
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2693": {
      "branch": 54,
      "fn": "Address.sendValue",
      "offset": [
        2247,
        2254
      ],
      "op": "POP",
      "path": "2",
      "statement": 33
    },
    "2694": {
      "fn": "Address.sendValue",
      "offset": [
        2239,
        2317
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2695": {
      "fn": "Address.sendValue",
      "offset": [
        2239,
        2317
      ],
      "op": "POP",
      "path": "2"
    },
    "2696": {
      "fn": "Address.sendValue",
      "offset": [
        2239,
        2317
      ],
      "op": "POP",
      "path": "2"
    },
    "2697": {
      "fn": "Address.sendValue",
      "offset": [
        2239,
        2317
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2698": {
      "op": "POP"
    },
    "2699": {
      "op": "DUP1"
    },
    "2700": {
      "op": "PUSH2",
      "value": "0xAFD"
    },
    "2703": {
      "branch": 54,
      "fn": "Address.sendValue",
      "offset": [
        2239,
        2317
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2704": {
      "fn": "Address.sendValue",
      "offset": [
        2239,
        2317
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2706": {
      "op": "MLOAD"
    },
    "2707": {
      "fn": "Address.sendValue",
      "offset": [
        2239,
        2317
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0x461BCD"
    },
    "2711": {
      "fn": "Address.sendValue",
      "offset": [
        2239,
        2317
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE5"
    },
    "2713": {
      "fn": "Address.sendValue",
      "offset": [
        2239,
        2317
      ],
      "op": "SHL",
      "path": "2"
    },
    "2714": {
      "op": "DUP2"
    },
    "2715": {
      "op": "MSTORE"
    },
    "2716": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2718": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2720": {
      "op": "DUP3"
    },
    "2721": {
      "op": "ADD"
    },
    "2722": {
      "op": "MSTORE"
    },
    "2723": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2727": {
      "op": "DUP3"
    },
    "2728": {
      "op": "ADD"
    },
    "2729": {
      "op": "MSTORE"
    },
    "2730": {
      "op": "PUSH32",
      "value": "0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072"
    },
    "2763": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2765": {
      "op": "DUP3"
    },
    "2766": {
      "op": "ADD"
    },
    "2767": {
      "op": "MSTORE"
    },
    "2768": {
      "op": "PUSH32",
      "value": "0x6563697069656E74206D61792068617665207265766572746564000000000000"
    },
    "2801": {
      "fn": "Address.sendValue",
      "offset": [
        2239,
        2317
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "2803": {
      "op": "DUP3"
    },
    "2804": {
      "fn": "Address.sendValue",
      "offset": [
        2239,
        2317
      ],
      "op": "ADD",
      "path": "2"
    },
    "2805": {
      "fn": "Address.sendValue",
      "offset": [
        2083,
        2324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2806": {
      "fn": "Address.sendValue",
      "offset": [
        2012,
        2324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x84"
    },
    "2808": {
      "fn": "Address.sendValue",
      "offset": [
        2012,
        2324
      ],
      "op": "ADD",
      "path": "2"
    },
    "2809": {
      "fn": "Address.sendValue",
      "jump": "o",
      "offset": [
        2012,
        2324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C0"
    },
    "2812": {
      "fn": "Pausable._pause",
      "offset": [
        1806,
        1921
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2813": {
      "fn": "Pausable.paused",
      "offset": [
        1088,
        1092
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2814": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "POP",
      "path": "0"
    },
    "2815": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "POP",
      "path": "0"
    },
    "2816": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "POP",
      "path": "0"
    },
    "2817": {
      "offset": [
        1354,
        1363
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2818": {
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2819": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2821": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2822": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2824": {
      "op": "AND"
    },
    "2825": {
      "op": "ISZERO"
    },
    "2826": {
      "op": "PUSH2",
      "value": "0xB48"
    },
    "2829": {
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2830": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2832": {
      "op": "MLOAD"
    },
    "2833": {
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x461BCD"
    },
    "2837": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE5"
    },
    "2839": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "SHL",
      "path": "0"
    },
    "2840": {
      "op": "DUP2"
    },
    "2841": {
      "op": "MSTORE"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2846": {
      "op": "DUP3"
    },
    "2847": {
      "op": "ADD"
    },
    "2848": {
      "op": "MSTORE"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "2851": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2853": {
      "op": "DUP3"
    },
    "2854": {
      "op": "ADD"
    },
    "2855": {
      "op": "MSTORE"
    },
    "2856": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "2873": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "2875": {
      "op": "SHL"
    },
    "2876": {
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "2878": {
      "op": "DUP3"
    },
    "2879": {
      "offset": [
        1346,
        1384
      ],
      "op": "ADD",
      "path": "0"
    },
    "2880": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1872
      ],
      "op": "MSTORE",
      "path": "0",
      "statement": 34
    },
    "2881": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1879
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "2883": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1879
      ],
      "op": "ADD",
      "path": "0"
    },
    "2884": {
      "op": "PUSH2",
      "value": "0x5C0"
    },
    "2887": {
      "op": "JUMP"
    },
    "2888": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1879
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2889": {
      "fn": "Pausable._pause",
      "offset": [
        1875,
        1879
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2891": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1879
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2892": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1879
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2893": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1879
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2895": {
      "fn": "Pausable._pause",
      "offset": [
        1894,
        1914
      ],
      "op": "NOT",
      "path": "0",
      "statement": 35
    },
    "2896": {
      "fn": "Pausable._pause",
      "offset": [
        1901,
        1913
      ],
      "op": "AND",
      "path": "0"
    },
    "2897": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 36,
      "value": "0x1"
    },
    "2899": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "OR",
      "path": "3"
    },
    "2900": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2901": {
      "fn": "Pausable._pause",
      "offset": [
        1901,
        1913
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2902": {
      "fn": "Pausable._pause",
      "offset": [
        1894,
        1914
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
    },
    "2935": {
      "fn": "Pausable._pause",
      "offset": [
        1894,
        1914
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7D"
    },
    "2938": {
      "fn": "Pausable._pause",
      "offset": [
        1894,
        1914
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2939": {
      "op": "SWAP1"
    },
    "2940": {
      "op": "JUMP"
    },
    "2941": {
      "op": "JUMPDEST"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2944": {
      "op": "MLOAD"
    },
    "2945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2951": {
      "op": "SHL"
    },
    "2952": {
      "op": "SUB"
    },
    "2953": {
      "op": "SWAP1"
    },
    "2954": {
      "fn": "Pausable._pause",
      "offset": [
        1894,
        1914
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2955": {
      "fn": "Pausable._pause",
      "offset": [
        1894,
        1914
      ],
      "op": "AND",
      "path": "0"
    },
    "2956": {
      "fn": "Pausable._pause",
      "offset": [
        1894,
        1914
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2957": {
      "fn": "Pausable._pause",
      "offset": [
        1894,
        1914
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2958": {
      "fn": "Pausable._pause",
      "offset": [
        1894,
        1914
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2960": {
      "op": "ADD"
    },
    "2961": {
      "fn": "Pausable._pause",
      "offset": [
        1894,
        1914
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2963": {
      "fn": "Pausable._pause",
      "offset": [
        1894,
        1914
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2964": {
      "fn": "Pausable._pause",
      "offset": [
        1894,
        1914
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2965": {
      "fn": "Pausable._pause",
      "jump": "o",
      "offset": [
        1806,
        1921
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2966": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1668,
        1775
      ],
      "op": "SUB",
      "path": "9"
    },
    "2967": {
      "fn": "Pausable.paused",
      "offset": [
        1088,
        1092
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2968": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "LOG1",
      "path": "0"
    },
    "2969": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2970": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2971": {
      "offset": [
        1354,
        1363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2973": {
      "offset": [
        1346,
        1384
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2974": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2976": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "AND",
      "path": "0"
    },
    "2977": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2978": {
      "op": "PUSH2",
      "value": "0xBE0"
    },
    "2981": {
      "op": "JUMPI"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2984": {
      "offset": [
        1346,
        1384
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2985": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x461BCD"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2991": {
      "offset": [
        1346,
        1384
      ],
      "op": "SHL",
      "path": "0"
    },
    "2992": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2993": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2996": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2998": {
      "op": "DUP3"
    },
    "2999": {
      "op": "ADD"
    },
    "3000": {
      "op": "MSTORE"
    },
    "3001": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "3003": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3005": {
      "op": "DUP3"
    },
    "3006": {
      "op": "ADD"
    },
    "3007": {
      "op": "MSTORE"
    },
    "3008": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "3025": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "3027": {
      "op": "SHL"
    },
    "3028": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3030": {
      "op": "DUP3"
    },
    "3031": {
      "offset": [
        1346,
        1384
      ],
      "op": "ADD",
      "path": "0"
    },
    "3032": {
      "op": "MSTORE"
    },
    "3033": {
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "3035": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1750,
        1756
      ],
      "op": "ADD",
      "path": "9",
      "statement": 37
    },
    "3036": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1750,
        1756
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5C0"
    },
    "3039": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1758,
        1766
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3040": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1758,
        1766
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3041": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1758,
        1766
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3043": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1758,
        1766
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3044": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1758,
        1766
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3046": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1758,
        1766
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3047": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1758,
        1766
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3048": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1758,
        1766
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3049": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1758,
        1766
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3050": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1758,
        1766
      ],
      "op": "ADD",
      "path": "9"
    },
    "3051": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1758,
        1766
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3052": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1758,
        1766
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3053": {
      "op": "MSTORE"
    },
    "3054": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "3056": {
      "op": "DUP2"
    },
    "3057": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1758,
        1766
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3058": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1758,
        1766
      ],
      "op": "PUSH19",
      "path": "9",
      "value": "0x155CD95C881B9BDD08105D5D1A1BDC9A5E9959"
    },
    "3078": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1758,
        1766
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x6A"
    },
    "3080": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1758,
        1766
      ],
      "op": "SHL",
      "path": "9"
    },
    "3081": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1758,
        1766
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3083": {
      "op": "DUP3"
    },
    "3084": {
      "op": "ADD"
    },
    "3085": {
      "op": "MSTORE"
    },
    "3086": {
      "op": "SWAP1"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3089": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1750,
        1756
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3091": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1736,
        1746
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "3093": {
      "branch": 51,
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1736,
        1756
      ],
      "op": "SHL",
      "path": "9"
    },
    "3094": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1728,
        1767
      ],
      "op": "SUB",
      "path": "9"
    },
    "3095": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1728,
        1767
      ],
      "op": "AND",
      "path": "9"
    },
    "3096": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1728,
        1767
      ],
      "op": "CALLER",
      "path": "9"
    },
    "3097": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1728,
        1767
      ],
      "op": "EQ",
      "path": "9"
    },
    "3098": {
      "op": "PUSH2",
      "value": "0x961"
    },
    "3101": {
      "op": "JUMPI"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3104": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1728,
        1767
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3105": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1728,
        1767
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x461BCD"
    },
    "3109": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1728,
        1767
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE5"
    },
    "3111": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1728,
        1767
      ],
      "op": "SHL",
      "path": "9"
    },
    "3112": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1728,
        1767
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3113": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1728,
        1767
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3114": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1728,
        1767
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3116": {
      "fn": "SEGA_v112._isTrader",
      "offset": [
        1728,
        1767
      ],
      "op": "ADD",
      "path": "9"
    },
    "3117": {
      "fn": "SEGA_v112._isTrader",
      "jump": "i",
      "offset": [
        1728,
        1767
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5C0"
    },
    "3120": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        1978,
        2107
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3121": {
      "op": "SWAP1"
    },
    "3122": {
      "op": "PUSH2",
      "value": "0x1160"
    },
    "3125": {
      "op": "JUMP"
    },
    "3126": {
      "op": "JUMPDEST"
    },
    "3127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3129": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2048,
        2070
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 38,
      "value": "0x1"
    },
    "3131": {
      "branch": 52,
      "fn": "SEGA_v112._notZero",
      "offset": [
        2048,
        2070
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "3133": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2039,
        2099
      ],
      "op": "SHL",
      "path": "9"
    },
    "3134": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2039,
        2099
      ],
      "op": "SUB",
      "path": "9"
    },
    "3135": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2039,
        2099
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3136": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2039,
        2099
      ],
      "op": "AND",
      "path": "9"
    },
    "3137": {
      "op": "PUSH2",
      "value": "0x961"
    },
    "3140": {
      "op": "JUMPI"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3143": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2039,
        2099
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3144": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2039,
        2099
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x461BCD"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3150": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2039,
        2099
      ],
      "op": "SHL",
      "path": "9"
    },
    "3151": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2039,
        2099
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3152": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2039,
        2099
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3153": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3157": {
      "op": "DUP3"
    },
    "3158": {
      "op": "ADD"
    },
    "3159": {
      "op": "MSTORE"
    },
    "3160": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3164": {
      "op": "DUP3"
    },
    "3165": {
      "op": "ADD"
    },
    "3166": {
      "op": "MSTORE"
    },
    "3167": {
      "op": "PUSH32",
      "value": "0x5A65726F2041646472657373204E6F7420416C6C6F7765640000000000000000"
    },
    "3200": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3202": {
      "op": "DUP3"
    },
    "3203": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2039,
        2099
      ],
      "op": "ADD",
      "path": "9"
    },
    "3204": {
      "op": "MSTORE"
    },
    "3205": {
      "fn": "Pausable._unpause",
      "offset": [
        2053,
        2170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "3207": {
      "fn": "Pausable.paused",
      "offset": [
        1088,
        1092
      ],
      "op": "ADD",
      "path": "0"
    },
    "3208": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C0"
    },
    "3211": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3212": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3213": {
      "offset": [
        1612,
        1653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3215": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3216": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3218": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "AND",
      "path": "0"
    },
    "3219": {
      "op": "PUSH2",
      "value": "0xCD5"
    },
    "3222": {
      "op": "JUMPI"
    },
    "3223": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3225": {
      "offset": [
        1612,
        1653
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3226": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x461BCD"
    },
    "3230": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3232": {
      "offset": [
        1612,
        1653
      ],
      "op": "SHL",
      "path": "0"
    },
    "3233": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3234": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3237": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3239": {
      "op": "DUP3"
    },
    "3240": {
      "op": "ADD"
    },
    "3241": {
      "op": "MSTORE"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3246": {
      "op": "DUP3"
    },
    "3247": {
      "op": "ADD"
    },
    "3248": {
      "op": "MSTORE"
    },
    "3249": {
      "op": "PUSH20",
      "value": "0x14185D5CD8589B194E881B9BDD081C185D5CD959"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "3272": {
      "op": "SHL"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3275": {
      "op": "DUP3"
    },
    "3276": {
      "offset": [
        1612,
        1653
      ],
      "op": "ADD",
      "path": "0"
    },
    "3277": {
      "op": "MSTORE"
    },
    "3278": {
      "offset": [
        1612,
        1653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "3280": {
      "fn": "Pausable._unpause",
      "offset": [
        2121,
        2126
      ],
      "op": "ADD",
      "path": "0",
      "statement": 39
    },
    "3281": {
      "fn": "Pausable._unpause",
      "offset": [
        2111,
        2126
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C0"
    },
    "3284": {
      "fn": "Pausable._unpause",
      "offset": [
        2111,
        2126
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3285": {
      "op": "JUMPDEST"
    },
    "3286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3288": {
      "fn": "Pausable._unpause",
      "offset": [
        2111,
        2126
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3289": {
      "fn": "Pausable._unpause",
      "offset": [
        2111,
        2126
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3290": {
      "fn": "Pausable._unpause",
      "offset": [
        2111,
        2126
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3292": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "NOT",
      "path": "0",
      "statement": 40
    },
    "3293": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "AND",
      "path": "3"
    },
    "3294": {
      "fn": "Pausable._unpause",
      "offset": [
        2150,
        2162
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3295": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3296": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5048
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
    },
    "3329": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4713,
        4725
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3330": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4770,
        4775
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 41,
      "value": "0xB7D"
    },
    "3333": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4766
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3334": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3335": {
      "branch": 55,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3337": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3338": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "SELFBALANCE",
      "path": "2"
    },
    "3339": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "LT",
      "path": "2"
    },
    "3340": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3341": {
      "op": "PUSH2",
      "value": "0xD67"
    },
    "3344": {
      "op": "JUMPI"
    },
    "3345": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3347": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3348": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0x461BCD"
    },
    "3352": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3354": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "SHL",
      "path": "2"
    },
    "3355": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3356": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3361": {
      "op": "DUP3"
    },
    "3362": {
      "op": "ADD"
    },
    "3363": {
      "op": "MSTORE"
    },
    "3364": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3366": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3368": {
      "op": "DUP3"
    },
    "3369": {
      "op": "ADD"
    },
    "3370": {
      "op": "MSTORE"
    },
    "3371": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "3404": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3406": {
      "op": "DUP3"
    },
    "3407": {
      "op": "ADD"
    },
    "3408": {
      "op": "MSTORE"
    },
    "3409": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "3416": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "3418": {
      "op": "SHL"
    },
    "3419": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3421": {
      "op": "DUP3"
    },
    "3422": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "ADD",
      "path": "2"
    },
    "3423": {
      "op": "MSTORE"
    },
    "3424": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x84"
    },
    "3426": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "ADD",
      "path": "2"
    },
    "3427": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C0"
    },
    "3430": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMP",
      "path": "2",
      "statement": 42
    },
    "3431": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3432": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3433": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "3434": {
      "op": "PUSH2",
      "value": "0xDB5"
    },
    "3437": {
      "op": "JUMPI"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3440": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3441": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0x461BCD"
    },
    "3445": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3447": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "SHL",
      "path": "2"
    },
    "3448": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3449": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3454": {
      "op": "DUP3"
    },
    "3455": {
      "op": "ADD"
    },
    "3456": {
      "op": "MSTORE"
    },
    "3457": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3459": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3461": {
      "op": "DUP3"
    },
    "3462": {
      "op": "ADD"
    },
    "3463": {
      "op": "MSTORE"
    },
    "3464": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "3497": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3499": {
      "op": "DUP3"
    },
    "3500": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "ADD",
      "path": "2"
    },
    "3501": {
      "op": "MSTORE"
    },
    "3502": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "3504": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4900,
        4912
      ],
      "op": "ADD",
      "path": "2"
    },
    "3505": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4914,
        4937
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C0"
    },
    "3508": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4947
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3509": {
      "op": "JUMPDEST"
    },
    "3510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3512": {
      "op": "DUP1"
    },
    "3513": {
      "op": "DUP7"
    },
    "3514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3516": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4952
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3518": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4960,
        4965
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "3520": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4967,
        4971
      ],
      "op": "SHL",
      "path": "2"
    },
    "3521": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SUB",
      "path": "2"
    },
    "3522": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "AND",
      "path": "2"
    },
    "3523": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3524": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3525": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3527": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3528": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDD1"
    },
    "3531": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3532": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3533": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1144"
    },
    "3536": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3537": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3538": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3540": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3542": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3543": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3544": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3545": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SUB",
      "path": "2"
    },
    "3546": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3547": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3548": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3549": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "GAS",
      "path": "2"
    },
    "3550": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "CALL",
      "path": "2"
    },
    "3551": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3552": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "2"
    },
    "3553": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "2"
    },
    "3554": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "2"
    },
    "3555": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3556": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3557": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3559": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3560": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "EQ",
      "path": "2"
    },
    "3561": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE0E"
    },
    "3564": {
      "branch": 55,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3565": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3567": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3568": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3569": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "2"
    },
    "3570": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3572": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "NOT",
      "path": "2"
    },
    "3573": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "3575": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3576": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "2"
    },
    "3577": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "AND",
      "path": "2"
    },
    "3578": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3579": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "2"
    },
    "3580": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3582": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3583": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3584": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3585": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3586": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3587": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3589": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3591": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3592": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "2"
    },
    "3593": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "3594": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE13"
    },
    "3597": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3598": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3599": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3601": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3602": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "2"
    },
    "3603": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3604": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "2"
    },
    "3605": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5041
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 43
    },
    "3606": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5007,
        5014
      ],
      "op": "POP",
      "path": "2"
    },
    "3607": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5016,
        5026
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3608": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5028,
        5040
      ],
      "op": "POP",
      "path": "2"
    },
    "3609": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5006
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE23"
    },
    "3612": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4989,
        5041
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3613": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5041
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3614": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5041
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3615": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5048
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEF0"
    },
    "3618": {
      "op": "JUMP"
    },
    "3619": {
      "op": "JUMPDEST"
    },
    "3620": {
      "op": "SWAP8"
    },
    "3621": {
      "op": "SWAP7"
    },
    "3622": {
      "op": "POP"
    },
    "3623": {
      "op": "POP"
    },
    "3624": {
      "op": "POP"
    },
    "3625": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4548,
        5048
      ],
      "op": "POP",
      "path": "2"
    },
    "3626": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2115,
        2279
      ],
      "op": "POP",
      "path": "9"
    },
    "3627": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2235
      ],
      "op": "POP",
      "path": "9",
      "statement": 44
    },
    "3628": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2235
      ],
      "op": "POP",
      "path": "9"
    },
    "3629": {
      "op": "JUMP"
    },
    "3630": {
      "op": "JUMPDEST"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3633": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2235
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3634": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2235
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x70A08231"
    },
    "3639": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2229,
        2233
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE0"
    },
    "3641": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2235
      ],
      "op": "SHL",
      "path": "9"
    },
    "3642": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2235
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3643": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2235
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3644": {
      "op": "ADDRESS"
    },
    "3645": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2239,
        2246
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3647": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2239,
        2246
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3648": {
      "op": "ADD"
    },
    "3649": {
      "op": "MSTORE"
    },
    "3650": {
      "op": "DUP2"
    },
    "3651": {
      "op": "SWAP1"
    },
    "3652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3654": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2220
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3656": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2220
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "3658": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2220
      ],
      "op": "SHL",
      "path": "9"
    },
    "3659": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2220
      ],
      "op": "SUB",
      "path": "9"
    },
    "3660": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2220
      ],
      "op": "DUP5",
      "path": "9"
    },
    "3661": {
      "op": "AND"
    },
    "3662": {
      "op": "SWAP1"
    },
    "3663": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2235
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x70A08231"
    },
    "3668": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2235
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3669": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2235
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "3671": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2235
      ],
      "op": "ADD",
      "path": "9"
    },
    "3672": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2235
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3674": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2235
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3676": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2235
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3677": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2235
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3678": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2235
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3679": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2235
      ],
      "op": "SUB",
      "path": "9"
    },
    "3680": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2235
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3681": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2235
      ],
      "op": "DUP7",
      "path": "9"
    },
    "3682": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2235
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3683": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2235
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "3684": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2235
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3685": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2235
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3686": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2235
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3687": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2235
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE6F"
    },
    "3690": {
      "branch": 52,
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3691": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3693": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3694": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "9"
    },
    "3695": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3696": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "POP",
      "path": "9"
    },
    "3697": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "GAS",
      "path": "9"
    },
    "3698": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "STATICCALL",
      "path": "9"
    },
    "3699": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3700": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3701": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3702": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE83"
    },
    "3705": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3706": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "3707": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3709": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3710": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "3711": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "3712": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3714": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "REVERT",
      "path": "9"
    },
    "3715": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3716": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "POP",
      "path": "9"
    },
    "3717": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "POP",
      "path": "9"
    },
    "3718": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "POP",
      "path": "9"
    },
    "3719": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "POP",
      "path": "9"
    },
    "3720": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3722": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3723": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "3724": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "3726": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "NOT",
      "path": "9"
    },
    "3727": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "3729": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3730": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "ADD",
      "path": "9"
    },
    "3731": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "AND",
      "path": "9"
    },
    "3732": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3733": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "ADD",
      "path": "9"
    },
    "3734": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3735": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3737": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3738": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "POP",
      "path": "9"
    },
    "3739": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3740": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "ADD",
      "path": "9"
    },
    "3741": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3742": {
      "fn": "SEGA_v112._notZero",
      "jump": "i",
      "offset": [
        2204,
        2235
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xEA7"
    },
    "3745": {
      "fn": "SEGA_v112._notZero",
      "offset": [
        2204,
        2235
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3746": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2246
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3747": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2204,
        2246
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x112B"
    },
    "3750": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2196,
        2271
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3751": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2196,
        2271
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3752": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2196,
        2271
      ],
      "op": "LT",
      "path": "9"
    },
    "3753": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2196,
        2271
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3754": {
      "op": "PUSH2",
      "value": "0xEEC"
    },
    "3757": {
      "op": "JUMPI"
    },
    "3758": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3760": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2196,
        2271
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3761": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2196,
        2271
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x461BCD"
    },
    "3765": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3767": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2196,
        2271
      ],
      "op": "SHL",
      "path": "9"
    },
    "3768": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2196,
        2271
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3769": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2196,
        2271
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3772": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3774": {
      "op": "DUP3"
    },
    "3775": {
      "op": "ADD"
    },
    "3776": {
      "op": "MSTORE"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "3779": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3781": {
      "op": "DUP3"
    },
    "3782": {
      "op": "ADD"
    },
    "3783": {
      "op": "MSTORE"
    },
    "3784": {
      "op": "PUSH20",
      "value": "0x496E73756666696369656E742062616C616E6365"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3807": {
      "op": "SHL"
    },
    "3808": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3810": {
      "op": "DUP3"
    },
    "3811": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2196,
        2271
      ],
      "op": "ADD",
      "path": "9"
    },
    "3812": {
      "op": "MSTORE"
    },
    "3813": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2196,
        2271
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "3815": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2115,
        2279
      ],
      "op": "ADD",
      "path": "9"
    },
    "3816": {
      "fn": "SEGA_v112._enoughBalance",
      "offset": [
        2115,
        2279
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5C0"
    },
    "3819": {
      "fn": "SEGA_v112._enoughBalance",
      "jump": "o",
      "offset": [
        2115,
        2279
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3820": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6950,
        7642
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3821": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7096,
        7108
      ],
      "op": "POP",
      "path": "2"
    },
    "3822": {
      "branch": 56,
      "fn": "Address._verifyCallResult",
      "offset": [
        7124,
        7131
      ],
      "op": "POP",
      "path": "2"
    },
    "3823": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7120,
        7636
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3824": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7120,
        7636
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3825": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7120,
        7636
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3827": {
      "op": "DUP4"
    },
    "3828": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7154,
        7164
      ],
      "op": "ISZERO",
      "path": "2",
      "statement": 45
    },
    "3829": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7147,
        7164
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEFF"
    },
    "3832": {
      "branch": 56,
      "fn": "Address._verifyCallResult",
      "offset": [
        7147,
        7164
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3833": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7120,
        7636
      ],
      "op": "POP",
      "path": "2"
    },
    "3834": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7265,
        7282
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3835": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7265,
        7282
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF29"
    },
    "3838": {
      "branch": 57,
      "fn": "Address._verifyCallResult",
      "offset": [
        7265,
        7286
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3839": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7261,
        7626
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3840": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7261,
        7626
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3841": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7459,
        7469
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3842": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7453,
        7470
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3843": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7519,
        7534
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF0F"
    },
    "3846": {
      "branch": 57,
      "fn": "Address._verifyCallResult",
      "offset": [
        7506,
        7516
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3847": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7502,
        7504
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3848": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7498,
        7517
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3849": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7491,
        7535
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3850": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7261,
        7626
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3851": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 46,
      "value": "0x20"
    },
    "3853": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "ADD",
      "path": "2"
    },
    "3854": {
      "op": "REVERT"
    },
    "3855": {
      "op": "JUMPDEST"
    },
    "3856": {
      "op": "DUP2"
    },
    "3857": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3859": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3860": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0x461BCD"
    },
    "3864": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE5"
    },
    "3866": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7598,
        7610
      ],
      "op": "SHL",
      "path": "2"
    },
    "3867": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7598,
        7610
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3868": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3869": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3871": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "ADD",
      "path": "2"
    },
    "3872": {
      "fn": "Address._verifyCallResult",
      "jump": "i",
      "offset": [
        7591,
        7611
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C0"
    },
    "3875": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7261,
        7626
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3876": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6950,
        7642
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3877": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6950,
        7642
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1160"
    },
    "3880": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6950,
        7642
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3881": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6950,
        7642
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3882": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6950,
        7642
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3883": {
      "fn": "Address._verifyCallResult",
      "jump": "o",
      "offset": [
        6950,
        7642
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3884": {
      "op": "POP"
    },
    "3885": {
      "op": "POP"
    },
    "3886": {
      "op": "POP"
    },
    "3887": {
      "op": "JUMP"
    },
    "3888": {
      "op": "JUMPDEST"
    },
    "3889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3891": {
      "op": "DUP3"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3894": {
      "op": "DUP4"
    },
    "3895": {
      "op": "ADD"
    },
    "3896": {
      "op": "SLT"
    },
    "3897": {
      "op": "PUSH2",
      "value": "0xF41"
    },
    "3900": {
      "op": "JUMPI"
    },
    "3901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3903": {
      "op": "DUP1"
    },
    "3904": {
      "op": "REVERT"
    },
    "3905": {
      "op": "JUMPDEST"
    },
    "3906": {
      "op": "DUP2"
    },
    "3907": {
      "op": "CALLDATALOAD"
    },
    "3908": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3917": {
      "op": "DUP1"
    },
    "3918": {
      "op": "DUP3"
    },
    "3919": {
      "op": "GT"
    },
    "3920": {
      "op": "ISZERO"
    },
    "3921": {
      "jump": "i",
      "op": "PUSH2",
      "value": "0xF5C"
    },
    "3924": {
      "op": "JUMPI"
    },
    "3925": {
      "op": "PUSH2",
      "value": "0xF5C"
    },
    "3928": {
      "op": "PUSH2",
      "value": "0x11C3"
    },
    "3931": {
      "op": "JUMP"
    },
    "3932": {
      "op": "JUMPDEST"
    },
    "3933": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3935": {
      "op": "MLOAD"
    },
    "3936": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3938": {
      "op": "DUP4"
    },
    "3939": {
      "op": "ADD"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3942": {
      "op": "NOT"
    },
    "3943": {
      "op": "SWAP1"
    },
    "3944": {
      "op": "DUP2"
    },
    "3945": {
      "op": "AND"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3948": {
      "op": "ADD"
    },
    "3949": {
      "op": "AND"
    },
    "3950": {
      "op": "DUP2"
    },
    "3951": {
      "op": "ADD"
    },
    "3952": {
      "op": "SWAP1"
    },
    "3953": {
      "op": "DUP3"
    },
    "3954": {
      "op": "DUP3"
    },
    "3955": {
      "op": "GT"
    },
    "3956": {
      "op": "DUP2"
    },
    "3957": {
      "op": "DUP4"
    },
    "3958": {
      "op": "LT"
    },
    "3959": {
      "op": "OR"
    },
    "3960": {
      "op": "ISZERO"
    },
    "3961": {
      "jump": "i",
      "op": "PUSH2",
      "value": "0xF84"
    },
    "3964": {
      "op": "JUMPI"
    },
    "3965": {
      "op": "PUSH2",
      "value": "0xF84"
    },
    "3968": {
      "op": "PUSH2",
      "value": "0x11C3"
    },
    "3971": {
      "op": "JUMP"
    },
    "3972": {
      "op": "JUMPDEST"
    },
    "3973": {
      "op": "DUP2"
    },
    "3974": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3976": {
      "op": "MSTORE"
    },
    "3977": {
      "op": "DUP4"
    },
    "3978": {
      "op": "DUP2"
    },
    "3979": {
      "op": "MSTORE"
    },
    "3980": {
      "op": "DUP7"
    },
    "3981": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3983": {
      "op": "DUP6"
    },
    "3984": {
      "op": "DUP9"
    },
    "3985": {
      "op": "ADD"
    },
    "3986": {
      "op": "ADD"
    },
    "3987": {
      "op": "GT"
    },
    "3988": {
      "op": "ISZERO"
    },
    "3989": {
      "op": "PUSH2",
      "value": "0xF9D"
    },
    "3992": {
      "op": "JUMPI"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3995": {
      "op": "DUP1"
    },
    "3996": {
      "op": "REVERT"
    },
    "3997": {
      "op": "JUMPDEST"
    },
    "3998": {
      "op": "DUP4"
    },
    "3999": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4001": {
      "op": "DUP8"
    },
    "4002": {
      "op": "ADD"
    },
    "4003": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4005": {
      "op": "DUP4"
    },
    "4006": {
      "op": "ADD"
    },
    "4007": {
      "op": "CALLDATACOPY"
    },
    "4008": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4010": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4012": {
      "op": "DUP6"
    },
    "4013": {
      "op": "DUP4"
    },
    "4014": {
      "op": "ADD"
    },
    "4015": {
      "op": "ADD"
    },
    "4016": {
      "op": "MSTORE"
    },
    "4017": {
      "op": "DUP1"
    },
    "4018": {
      "op": "SWAP5"
    },
    "4019": {
      "op": "POP"
    },
    "4020": {
      "op": "POP"
    },
    "4021": {
      "op": "POP"
    },
    "4022": {
      "op": "POP"
    },
    "4023": {
      "op": "POP"
    },
    "4024": {
      "jump": "o",
      "op": "SWAP3"
    },
    "4025": {
      "op": "SWAP2"
    },
    "4026": {
      "op": "POP"
    },
    "4027": {
      "op": "POP"
    },
    "4028": {
      "op": "JUMP"
    },
    "4029": {
      "op": "JUMPDEST"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4034": {
      "op": "DUP3"
    },
    "4035": {
      "op": "DUP5"
    },
    "4036": {
      "op": "SUB"
    },
    "4037": {
      "op": "SLT"
    },
    "4038": {
      "op": "ISZERO"
    },
    "4039": {
      "op": "PUSH2",
      "value": "0xFCF"
    },
    "4042": {
      "op": "JUMPI"
    },
    "4043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4045": {
      "op": "DUP1"
    },
    "4046": {
      "op": "REVERT"
    },
    "4047": {
      "op": "JUMPDEST"
    },
    "4048": {
      "op": "DUP2"
    },
    "4049": {
      "jump": "i",
      "op": "CALLDATALOAD"
    },
    "4050": {
      "op": "PUSH2",
      "value": "0xF29"
    },
    "4053": {
      "op": "DUP2"
    },
    "4054": {
      "op": "PUSH2",
      "value": "0x11D9"
    },
    "4057": {
      "op": "JUMP"
    },
    "4058": {
      "op": "JUMPDEST"
    },
    "4059": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4061": {
      "op": "DUP1"
    },
    "4062": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4064": {
      "op": "DUP4"
    },
    "4065": {
      "op": "DUP6"
    },
    "4066": {
      "op": "SUB"
    },
    "4067": {
      "op": "SLT"
    },
    "4068": {
      "op": "ISZERO"
    },
    "4069": {
      "op": "PUSH2",
      "value": "0xFED"
    },
    "4072": {
      "op": "JUMPI"
    },
    "4073": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4075": {
      "op": "DUP1"
    },
    "4076": {
      "op": "REVERT"
    },
    "4077": {
      "op": "JUMPDEST"
    },
    "4078": {
      "op": "DUP3"
    },
    "4079": {
      "jump": "i",
      "op": "CALLDATALOAD"
    },
    "4080": {
      "op": "PUSH2",
      "value": "0xFF8"
    },
    "4083": {
      "op": "DUP2"
    },
    "4084": {
      "op": "PUSH2",
      "value": "0x11D9"
    },
    "4087": {
      "op": "JUMP"
    },
    "4088": {
      "op": "JUMPDEST"
    },
    "4089": {
      "op": "SWAP5"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4092": {
      "op": "SWAP4"
    },
    "4093": {
      "op": "SWAP1"
    },
    "4094": {
      "op": "SWAP4"
    },
    "4095": {
      "op": "ADD"
    },
    "4096": {
      "op": "CALLDATALOAD"
    },
    "4097": {
      "jump": "o",
      "op": "SWAP4"
    },
    "4098": {
      "op": "POP"
    },
    "4099": {
      "op": "POP"
    },
    "4100": {
      "op": "POP"
    },
    "4101": {
      "op": "JUMP"
    },
    "4102": {
      "op": "JUMPDEST"
    },
    "4103": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4105": {
      "op": "DUP1"
    },
    "4106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4108": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4110": {
      "op": "DUP5"
    },
    "4111": {
      "op": "DUP7"
    },
    "4112": {
      "op": "SUB"
    },
    "4113": {
      "op": "SLT"
    },
    "4114": {
      "op": "ISZERO"
    },
    "4115": {
      "op": "PUSH2",
      "value": "0x101B"
    },
    "4118": {
      "op": "JUMPI"
    },
    "4119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4121": {
      "op": "DUP1"
    },
    "4122": {
      "op": "REVERT"
    },
    "4123": {
      "op": "JUMPDEST"
    },
    "4124": {
      "op": "DUP4"
    },
    "4125": {
      "jump": "i",
      "op": "CALLDATALOAD"
    },
    "4126": {
      "op": "PUSH2",
      "value": "0x1026"
    },
    "4129": {
      "op": "DUP2"
    },
    "4130": {
      "op": "PUSH2",
      "value": "0x11D9"
    },
    "4133": {
      "op": "JUMP"
    },
    "4134": {
      "op": "JUMPDEST"
    },
    "4135": {
      "op": "SWAP3"
    },
    "4136": {
      "op": "POP"
    },
    "4137": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4139": {
      "op": "DUP5"
    },
    "4140": {
      "op": "ADD"
    },
    "4141": {
      "jump": "i",
      "op": "CALLDATALOAD"
    },
    "4142": {
      "op": "PUSH2",
      "value": "0x1036"
    },
    "4145": {
      "op": "DUP2"
    },
    "4146": {
      "op": "PUSH2",
      "value": "0x11D9"
    },
    "4149": {
      "op": "JUMP"
    },
    "4150": {
      "op": "JUMPDEST"
    },
    "4151": {
      "op": "SWAP3"
    },
    "4152": {
      "op": "SWAP6"
    },
    "4153": {
      "op": "SWAP3"
    },
    "4154": {
      "op": "SWAP5"
    },
    "4155": {
      "op": "POP"
    },
    "4156": {
      "op": "POP"
    },
    "4157": {
      "op": "POP"
    },
    "4158": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4160": {
      "op": "SWAP2"
    },
    "4161": {
      "op": "SWAP1"
    },
    "4162": {
      "jump": "o",
      "op": "SWAP2"
    },
    "4163": {
      "op": "ADD"
    },
    "4164": {
      "op": "CALLDATALOAD"
    },
    "4165": {
      "op": "SWAP1"
    },
    "4166": {
      "op": "JUMP"
    },
    "4167": {
      "op": "JUMPDEST"
    },
    "4168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4170": {
      "op": "DUP1"
    },
    "4171": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4173": {
      "op": "DUP4"
    },
    "4174": {
      "op": "DUP6"
    },
    "4175": {
      "op": "SUB"
    },
    "4176": {
      "op": "SLT"
    },
    "4177": {
      "op": "ISZERO"
    },
    "4178": {
      "op": "PUSH2",
      "value": "0x105A"
    },
    "4181": {
      "op": "JUMPI"
    },
    "4182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4184": {
      "op": "DUP1"
    },
    "4185": {
      "op": "REVERT"
    },
    "4186": {
      "op": "JUMPDEST"
    },
    "4187": {
      "op": "DUP3"
    },
    "4188": {
      "jump": "i",
      "op": "CALLDATALOAD"
    },
    "4189": {
      "op": "PUSH2",
      "value": "0x1065"
    },
    "4192": {
      "op": "DUP2"
    },
    "4193": {
      "op": "PUSH2",
      "value": "0x11D9"
    },
    "4196": {
      "op": "JUMP"
    },
    "4197": {
      "op": "JUMPDEST"
    },
    "4198": {
      "op": "SWAP2"
    },
    "4199": {
      "op": "POP"
    },
    "4200": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4202": {
      "op": "DUP4"
    },
    "4203": {
      "op": "ADD"
    },
    "4204": {
      "op": "CALLDATALOAD"
    },
    "4205": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4214": {
      "op": "DUP2"
    },
    "4215": {
      "op": "GT"
    },
    "4216": {
      "op": "ISZERO"
    },
    "4217": {
      "op": "PUSH2",
      "value": "0x1081"
    },
    "4220": {
      "op": "JUMPI"
    },
    "4221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4223": {
      "op": "DUP1"
    },
    "4224": {
      "op": "REVERT"
    },
    "4225": {
      "op": "JUMPDEST"
    },
    "4226": {
      "op": "PUSH2",
      "value": "0x108D"
    },
    "4229": {
      "op": "DUP6"
    },
    "4230": {
      "jump": "i",
      "op": "DUP3"
    },
    "4231": {
      "op": "DUP7"
    },
    "4232": {
      "op": "ADD"
    },
    "4233": {
      "op": "PUSH2",
      "value": "0xF30"
    },
    "4236": {
      "op": "JUMP"
    },
    "4237": {
      "op": "JUMPDEST"
    },
    "4238": {
      "op": "SWAP2"
    },
    "4239": {
      "op": "POP"
    },
    "4240": {
      "op": "POP"
    },
    "4241": {
      "op": "SWAP3"
    },
    "4242": {
      "jump": "o",
      "op": "POP"
    },
    "4243": {
      "op": "SWAP3"
    },
    "4244": {
      "op": "SWAP1"
    },
    "4245": {
      "op": "POP"
    },
    "4246": {
      "op": "JUMP"
    },
    "4247": {
      "op": "JUMPDEST"
    },
    "4248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4250": {
      "op": "DUP1"
    },
    "4251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4253": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4255": {
      "op": "DUP5"
    },
    "4256": {
      "op": "DUP7"
    },
    "4257": {
      "op": "SUB"
    },
    "4258": {
      "op": "SLT"
    },
    "4259": {
      "op": "ISZERO"
    },
    "4260": {
      "op": "PUSH2",
      "value": "0x10AC"
    },
    "4263": {
      "op": "JUMPI"
    },
    "4264": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4266": {
      "op": "DUP1"
    },
    "4267": {
      "op": "REVERT"
    },
    "4268": {
      "op": "JUMPDEST"
    },
    "4269": {
      "op": "DUP4"
    },
    "4270": {
      "jump": "i",
      "op": "CALLDATALOAD"
    },
    "4271": {
      "op": "PUSH2",
      "value": "0x10B7"
    },
    "4274": {
      "op": "DUP2"
    },
    "4275": {
      "op": "PUSH2",
      "value": "0x11D9"
    },
    "4278": {
      "op": "JUMP"
    },
    "4279": {
      "op": "JUMPDEST"
    },
    "4280": {
      "op": "SWAP3"
    },
    "4281": {
      "op": "POP"
    },
    "4282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4284": {
      "op": "DUP5"
    },
    "4285": {
      "op": "ADD"
    },
    "4286": {
      "op": "CALLDATALOAD"
    },
    "4287": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4296": {
      "op": "DUP2"
    },
    "4297": {
      "op": "GT"
    },
    "4298": {
      "op": "ISZERO"
    },
    "4299": {
      "op": "PUSH2",
      "value": "0x10D3"
    },
    "4302": {
      "op": "JUMPI"
    },
    "4303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4305": {
      "op": "DUP1"
    },
    "4306": {
      "op": "REVERT"
    },
    "4307": {
      "op": "JUMPDEST"
    },
    "4308": {
      "op": "PUSH2",
      "value": "0x10DF"
    },
    "4311": {
      "op": "DUP7"
    },
    "4312": {
      "jump": "i",
      "op": "DUP3"
    },
    "4313": {
      "op": "DUP8"
    },
    "4314": {
      "op": "ADD"
    },
    "4315": {
      "op": "PUSH2",
      "value": "0xF30"
    },
    "4318": {
      "op": "JUMP"
    },
    "4319": {
      "op": "JUMPDEST"
    },
    "4320": {
      "op": "SWAP3"
    },
    "4321": {
      "op": "POP"
    },
    "4322": {
      "op": "POP"
    },
    "4323": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4325": {
      "op": "DUP5"
    },
    "4326": {
      "op": "ADD"
    },
    "4327": {
      "op": "CALLDATALOAD"
    },
    "4328": {
      "op": "SWAP1"
    },
    "4329": {
      "op": "POP"
    },
    "4330": {
      "op": "SWAP3"
    },
    "4331": {
      "jump": "o",
      "op": "POP"
    },
    "4332": {
      "op": "SWAP3"
    },
    "4333": {
      "op": "POP"
    },
    "4334": {
      "op": "SWAP3"
    },
    "4335": {
      "op": "JUMP"
    },
    "4336": {
      "op": "JUMPDEST"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4339": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4341": {
      "op": "DUP3"
    },
    "4342": {
      "op": "DUP5"
    },
    "4343": {
      "op": "SUB"
    },
    "4344": {
      "op": "SLT"
    },
    "4345": {
      "op": "ISZERO"
    },
    "4346": {
      "op": "PUSH2",
      "value": "0x1102"
    },
    "4349": {
      "op": "JUMPI"
    },
    "4350": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4352": {
      "op": "DUP1"
    },
    "4353": {
      "op": "REVERT"
    },
    "4354": {
      "op": "JUMPDEST"
    },
    "4355": {
      "op": "DUP2"
    },
    "4356": {
      "op": "MLOAD"
    },
    "4357": {
      "op": "DUP1"
    },
    "4358": {
      "op": "ISZERO"
    },
    "4359": {
      "op": "ISZERO"
    },
    "4360": {
      "op": "DUP2"
    },
    "4361": {
      "op": "EQ"
    },
    "4362": {
      "op": "PUSH2",
      "value": "0xF29"
    },
    "4365": {
      "op": "JUMPI"
    },
    "4366": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4368": {
      "op": "DUP1"
    },
    "4369": {
      "op": "REVERT"
    },
    "4370": {
      "op": "JUMPDEST"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4375": {
      "op": "DUP3"
    },
    "4376": {
      "op": "DUP5"
    },
    "4377": {
      "op": "SUB"
    },
    "4378": {
      "op": "SLT"
    },
    "4379": {
      "op": "ISZERO"
    },
    "4380": {
      "op": "PUSH2",
      "value": "0x1124"
    },
    "4383": {
      "op": "JUMPI"
    },
    "4384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4386": {
      "op": "DUP1"
    },
    "4387": {
      "op": "REVERT"
    },
    "4388": {
      "op": "JUMPDEST"
    },
    "4389": {
      "op": "POP"
    },
    "4390": {
      "jump": "o",
      "op": "CALLDATALOAD"
    },
    "4391": {
      "op": "SWAP2"
    },
    "4392": {
      "op": "SWAP1"
    },
    "4393": {
      "op": "POP"
    },
    "4394": {
      "op": "JUMP"
    },
    "4395": {
      "op": "JUMPDEST"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4400": {
      "op": "DUP3"
    },
    "4401": {
      "op": "DUP5"
    },
    "4402": {
      "op": "SUB"
    },
    "4403": {
      "op": "SLT"
    },
    "4404": {
      "op": "ISZERO"
    },
    "4405": {
      "op": "PUSH2",
      "value": "0x113D"
    },
    "4408": {
      "op": "JUMPI"
    },
    "4409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4411": {
      "op": "DUP1"
    },
    "4412": {
      "op": "REVERT"
    },
    "4413": {
      "op": "JUMPDEST"
    },
    "4414": {
      "op": "POP"
    },
    "4415": {
      "jump": "o",
      "op": "MLOAD"
    },
    "4416": {
      "op": "SWAP2"
    },
    "4417": {
      "op": "SWAP1"
    },
    "4418": {
      "op": "POP"
    },
    "4419": {
      "op": "JUMP"
    },
    "4420": {
      "op": "JUMPDEST"
    },
    "4421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4423": {
      "op": "DUP3"
    },
    "4424": {
      "op": "MLOAD"
    },
    "4425": {
      "op": "PUSH2",
      "value": "0x1156"
    },
    "4428": {
      "op": "DUP2"
    },
    "4429": {
      "op": "DUP5"
    },
    "4430": {
      "jump": "i",
      "op": "PUSH1",
      "value": "0x20"
    },
    "4432": {
      "op": "DUP8"
    },
    "4433": {
      "op": "ADD"
    },
    "4434": {
      "op": "PUSH2",
      "value": "0x1193"
    },
    "4437": {
      "op": "JUMP"
    },
    "4438": {
      "op": "JUMPDEST"
    },
    "4439": {
      "op": "SWAP2"
    },
    "4440": {
      "op": "SWAP1"
    },
    "4441": {
      "op": "SWAP2"
    },
    "4442": {
      "op": "ADD"
    },
    "4443": {
      "jump": "o",
      "op": "SWAP3"
    },
    "4444": {
      "op": "SWAP2"
    },
    "4445": {
      "op": "POP"
    },
    "4446": {
      "op": "POP"
    },
    "4447": {
      "op": "JUMP"
    },
    "4448": {
      "op": "JUMPDEST"
    },
    "4449": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4451": {
      "op": "DUP2"
    },
    "4452": {
      "op": "MSTORE"
    },
    "4453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4455": {
      "op": "DUP3"
    },
    "4456": {
      "op": "MLOAD"
    },
    "4457": {
      "op": "DUP1"
    },
    "4458": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4460": {
      "op": "DUP5"
    },
    "4461": {
      "op": "ADD"
    },
    "4462": {
      "op": "MSTORE"
    },
    "4463": {
      "op": "PUSH2",
      "value": "0x117F"
    },
    "4466": {
      "op": "DUP2"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4469": {
      "op": "DUP6"
    },
    "4470": {
      "op": "ADD"
    },
    "4471": {
      "jump": "i",
      "op": "PUSH1",
      "value": "0x20"
    },
    "4473": {
      "op": "DUP8"
    },
    "4474": {
      "op": "ADD"
    },
    "4475": {
      "op": "PUSH2",
      "value": "0x1193"
    },
    "4478": {
      "op": "JUMP"
    },
    "4479": {
      "op": "JUMPDEST"
    },
    "4480": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4482": {
      "op": "ADD"
    },
    "4483": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4485": {
      "op": "NOT"
    },
    "4486": {
      "op": "AND"
    },
    "4487": {
      "op": "SWAP2"
    },
    "4488": {
      "op": "SWAP1"
    },
    "4489": {
      "op": "SWAP2"
    },
    "4490": {
      "op": "ADD"
    },
    "4491": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4493": {
      "op": "ADD"
    },
    "4494": {
      "jump": "o",
      "op": "SWAP3"
    },
    "4495": {
      "op": "SWAP2"
    },
    "4496": {
      "op": "POP"
    },
    "4497": {
      "op": "POP"
    },
    "4498": {
      "op": "JUMP"
    },
    "4499": {
      "op": "JUMPDEST"
    },
    "4500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4502": {
      "op": "JUMPDEST"
    },
    "4503": {
      "op": "DUP4"
    },
    "4504": {
      "op": "DUP2"
    },
    "4505": {
      "op": "LT"
    },
    "4506": {
      "op": "ISZERO"
    },
    "4507": {
      "op": "PUSH2",
      "value": "0x11AE"
    },
    "4510": {
      "op": "JUMPI"
    },
    "4511": {
      "op": "DUP2"
    },
    "4512": {
      "op": "DUP2"
    },
    "4513": {
      "op": "ADD"
    },
    "4514": {
      "op": "MLOAD"
    },
    "4515": {
      "op": "DUP4"
    },
    "4516": {
      "op": "DUP3"
    },
    "4517": {
      "op": "ADD"
    },
    "4518": {
      "op": "MSTORE"
    },
    "4519": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4521": {
      "op": "ADD"
    },
    "4522": {
      "op": "PUSH2",
      "value": "0x1196"
    },
    "4525": {
      "op": "JUMP"
    },
    "4526": {
      "op": "JUMPDEST"
    },
    "4527": {
      "op": "DUP4"
    },
    "4528": {
      "op": "DUP2"
    },
    "4529": {
      "op": "GT"
    },
    "4530": {
      "op": "ISZERO"
    },
    "4531": {
      "op": "PUSH2",
      "value": "0x11BD"
    },
    "4534": {
      "op": "JUMPI"
    },
    "4535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4537": {
      "op": "DUP5"
    },
    "4538": {
      "op": "DUP5"
    },
    "4539": {
      "op": "ADD"
    },
    "4540": {
      "op": "MSTORE"
    },
    "4541": {
      "op": "JUMPDEST"
    },
    "4542": {
      "jump": "o",
      "op": "POP"
    },
    "4543": {
      "op": "POP"
    },
    "4544": {
      "op": "POP"
    },
    "4545": {
      "op": "POP"
    },
    "4546": {
      "op": "JUMP"
    },
    "4547": {
      "op": "JUMPDEST"
    },
    "4548": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4553": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4555": {
      "op": "SHL"
    },
    "4556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4558": {
      "op": "MSTORE"
    },
    "4559": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4563": {
      "op": "MSTORE"
    },
    "4564": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4566": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4568": {
      "op": "REVERT"
    },
    "4569": {
      "op": "JUMPDEST"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4574": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4576": {
      "op": "SHL"
    },
    "4577": {
      "op": "SUB"
    },
    "4578": {
      "op": "DUP2"
    },
    "4579": {
      "op": "AND"
    },
    "4580": {
      "op": "DUP2"
    },
    "4581": {
      "op": "EQ"
    },
    "4582": {
      "op": "PUSH2",
      "value": "0x961"
    },
    "4585": {
      "op": "JUMPI"
    },
    "4586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4588": {
      "op": "DUP1"
    },
    "4589": {
      "op": "REVERT"
    }
  },
  "sha1": "49f694b5fc0e2d4de2df1a34803e5e9b743f6579",
  "source": "//SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\nimport {Address} from \"@openzeppelin/contracts/utils/Address.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\n\n\n//Pausable.sol - https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/security/Pausable.sol\n//Address.sol - https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\n\ncontract SEGA_v112 is Pausable {\n    \n    address payable private parentVault;\n    address private trader;\n\n    uint256 constant public version = 10102;\n\n    string constant noAccess = \"User not Authorized\";\n    string constant txnFail = \"Transaction Failed\";\n\n    //Events\n        \n    event Received(address indexed _from, uint amount);\n    \n    event SentOutAssets(address indexed _to, address indexed _token, uint256 _amount);\n    event ApprovedTokensOut(address indexed _to, address indexed _token, uint256 _amount);\n\n    event SmartContractCall(address indexed _SC, bytes4 indexed _method, uint256 _value);\n    event SegaTraderChanged(address newTrader);\n    \n    /*********************************************\n    Modifiers\n    *********************************************/\n\n   modifier isParentVault() {\n        _isParentVault();\n        _;\n    }    \n        \n    modifier isTrader() {\n        _isTrader();\n        _;\n    } \n    \n    modifier isVaultOrTrader() {\n        _isVaultOrTrader();\n        _;\n    }\n\n    function _isParentVault() internal view {\n        require(msg.sender == parentVault, noAccess);\n    }    \n        \n    function _isTrader() whenNotPaused internal view {\n        require(msg.sender == trader, noAccess);\n    } \n    \n    function _isVaultOrTrader() internal view {\n        require( msg.sender == parentVault ||\n                (!paused() && msg.sender == trader),\n         noAccess\n        );\n    }\n\n    function _notZero(address _address) internal pure {\n        require (_address != address(0), \"Zero Address Not Allowed\");\n    }\n\n    function _enoughBalance(IERC20 _token, uint256 _amount) internal view {\n        require(_token.balanceOf(address(this)) >= _amount, \"Insufficient balance\");\n    }\n       \n    /*******************************************\n     Constructor, Recieve, Fallback\n     *******************************************/\n     \n    constructor(address _parentVault, address _owner) {\n        parentVault = payable(_parentVault);\n        trader = _owner;\n    }\n    \n    receive() external payable {\n        emit Received(msg.sender, msg.value);\n    }\n    \n    fallback() external payable {\n        if (msg.value > 0) {\n            emit Received(msg.sender, msg.value);\n        }\n    }\n    \n    /*------------------------------------------\n    Functions called by ParentVault - Owner/ROs\n    ------------------------------------------*/\n      \n    /***************************\n    Vault Issued Admin Functions\n    ***************************/\n    \n    //-----To Pause & Unpause Account Transfers-----//\n\n    function pauseTransfers() external isParentVault {\n        _pause();\n    }\n    function unpauseTransfers() external isParentVault {\n        _unpause();\n    }\n\n    //-----To Change Prime Trader & AMs-----//\n\n    function changeTrader (address _newTrader) external isParentVault {\n        trader = _newTrader;\n        emit SegaTraderChanged(_newTrader);\n    }\n    \n    /*--------------------------------------------\n    Return of Account Balances to Parent Vault\n    ----------------------------------------------*/\n    \n    // to withdraw ETH back to Parent Vault\n    function returnToVault(uint256 _amount) public isVaultOrTrader {\n        Address.sendValue(parentVault, _amount);\n        emit SentOutAssets(parentVault, address(0), _amount);\n    }\n    \n    // to withdraw Tokens back to Parent Vault\n    function returnToVault(address _token, uint256 _amount) public isVaultOrTrader {\n        _notZero(_token);\n        IERC20 Token = IERC20(_token);\n        _enoughBalance(Token, _amount);\n        bool success = Token.transfer(parentVault,_amount);\n        require(success, txnFail);\n        emit SentOutAssets(parentVault, _token, _amount);\n    }\n\n\n    /*------------------------------------------\n     Trader Execution Functions\n     ------------------------------------------*/\n    \n    /*********************************************\n    Simple Transfer of ETH && Transfer-Approve of ERC20\n    *********************************************/\n    \n    //Transfering Eth to allowed counterparties\n    function sendNativeAssets(address payable receiver, uint256 amount) public isTrader {\n        _notZero(receiver);\n        Address.sendValue(receiver, amount);\n        emit SentOutAssets(receiver, address(0), amount);\n    }\n    \n    // Transferring & Approving allowed Tokens to allowed Counterparties\n    \n    function sendTokenAssets(address receiver, address _token, uint256 amount) public isTrader {\n        _notZero(_token);\n        _notZero(receiver);\n        IERC20 Token = IERC20(_token);\n        _enoughBalance(Token, amount);\n        bool success = Token.transfer(receiver, amount);\n        require(success, txnFail);\n        emit SentOutAssets(receiver, _token, amount);\n    }\n    \n    function tokenApprove(address spender, address _token, uint256 amount) public isTrader {\n        _notZero(_token);\n        _notZero(spender);\n        IERC20 Token = IERC20(_token);\n        bool success = Token.approve(spender, amount);\n        require(success, txnFail);\n        emit ApprovedTokensOut(spender, _token, amount);\n    }\n\n    /*********************************************\n    Smart Contract Interactions by trader\n    *********************************************/\n    \n    function callSC(address smartContract, bytes memory data) public isTrader {\n        Address.functionCallWithValue(smartContract, data, 0, txnFail);\n        bytes4 method = getMethod(data);\n        emit SmartContractCall(smartContract, method, 0);\n    }\n    \n    function callSC(address smartContract, bytes memory data, uint256 _value) public isTrader {\n        Address.functionCallWithValue(smartContract, data, _value, txnFail);\n        bytes4 method = getMethod(data);\n        emit SmartContractCall(smartContract, method, _value);\n    }\n\n    /*********************************************\n    Internal Utilities\n    *********************************************/\n\n    function getMethod(bytes memory _data) internal pure returns (bytes4 M) {\n        assembly {\n            let a := add(_data,32)\n            M := mload(a)\n        }\n    }\n\n    function getInfo() public view returns (address, address, bool) {\n        return (parentVault, trader, !(paused()));\n    }\n\n}",
  "sourceMap": "484:6415:9:-:0;;;2439:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;934:5:0;924:15;;-1:-1:-1;;;;;;2500:35:9;924:15:0;-1:-1:-1;;;;;2500:35:9;;;;;;;-1:-1:-1;2546:15:9;;-1:-1:-1;;;;;;2546:15:9;;;;;;;;484:6415;;14:177:14;93:13;;-1:-1:-1;;;;;135:31:14;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:2;;;352:1;349;342:12;304:2;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;294:195;;;;;:::o;:::-;484:6415:9;;;;;;",
  "sourcePath": "contracts/4_Sega_v112.sol",
  "type": "contract"
}