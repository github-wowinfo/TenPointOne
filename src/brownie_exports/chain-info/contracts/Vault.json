{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_RCU",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_segaFact",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_backup",
          "type": "address"
        }
      ],
      "name": "ChangedBackup",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ChangedInactiveTime",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newSega",
          "type": "address"
        }
      ],
      "name": "NewSegaCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "OwnerIsActive",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_new",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_old",
          "type": "address"
        }
      ],
      "name": "OwnershipTransfered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Received",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_sega",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "onOff",
          "type": "uint8"
        }
      ],
      "name": "SegaFrozen",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_sega",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "SegaRecall",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_sega",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newTrader",
          "type": "address"
        }
      ],
      "name": "SegaTraderChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "SentOutAssets",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "RCU",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sega",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "RecallFromSega",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sega",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "RecallFromSega",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sega",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_newTrader",
          "type": "address"
        }
      ],
      "name": "changeTrader",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_segaFactory",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "createCustomSega",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createNewSega",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRecoveryInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sega",
          "type": "address"
        }
      ],
      "name": "pauseSega",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "segaFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sendAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sendAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_backup",
          "type": "address"
        }
      ],
      "name": "setBackup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_unlockTime",
          "type": "uint256"
        }
      ],
      "name": "setUnlockPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sega",
          "type": "address"
        }
      ],
      "name": "unpauseSega",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "viewSegaList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/Tushar Sharma/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
    "2": "contracts/2_VaultP.sol",
    "3": "interfaces/ISegaFactP.sol",
    "4": "interfaces/ISegaP.sol"
  },
  "ast": {
    "absolutePath": "contracts/2_VaultP.sol",
    "exportedSymbols": {
      "IERC20": [
        1013
      ],
      "IRCU": [
        935
      ],
      "ISega": [
        1145
      ],
      "ISegaFactP": [
        1048
      ],
      "Vault": [
        927
      ]
    },
    "id": 936,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 103,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:2"
      },
      {
        "absolutePath": "interfaces/ISegaP.sol",
        "file": "../interfaces/ISegaP.sol",
        "id": 104,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 936,
        "sourceUnit": 1146,
        "src": "64:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ISegaFactP.sol",
        "file": "../interfaces/ISegaFactP.sol",
        "id": 105,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 936,
        "sourceUnit": 1049,
        "src": "100:38:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Tushar Sharma/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 106,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 936,
        "sourceUnit": 1014,
        "src": "140:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 927,
        "linearizedBaseContracts": [
          927
        ],
        "name": "Vault",
        "nameLocation": "209:5:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "91f21da5",
            "id": 108,
            "mutability": "immutable",
            "name": "segaFactory",
            "nameLocation": "253:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 927,
            "src": "228:36:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 107,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "228:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3709d6ba",
            "id": 110,
            "mutability": "immutable",
            "name": "RCU",
            "nameLocation": "296:3:2",
            "nodeType": "VariableDeclaration",
            "scope": 927,
            "src": "271:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 109,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "271:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 117,
            "mutability": "constant",
            "name": "oneDay",
            "nameLocation": "325:6:2",
            "nodeType": "VariableDeclaration",
            "scope": 927,
            "src": "308:34:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 111,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "308:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "id": 116,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1440_by_1",
                  "typeString": "int_const 1440"
                },
                "id": 114,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3234",
                  "id": 112,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "334:2:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_24_by_1",
                    "typeString": "int_const 24"
                  },
                  "value": "24"
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "hexValue": "3630",
                  "id": 113,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "337:2:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_60_by_1",
                    "typeString": "int_const 60"
                  },
                  "value": "60"
                },
                "src": "334:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1440_by_1",
                  "typeString": "int_const 1440"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3630",
                "id": 115,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "340:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_60_by_1",
                  "typeString": "int_const 60"
                },
                "value": "60"
              },
              "src": "334:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 120,
            "mutability": "constant",
            "name": "noAccess",
            "nameLocation": "423:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 927,
            "src": "407:48:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 118,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "407:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "55736572206e6f7420417574686f72697a6564",
              "id": 119,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "434:21:2",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_33d7feb102e605ab866b1adf26ec6ed9276d2742839ea4a4b2ae987004275b78",
                "typeString": "literal_string \"User not Authorized\""
              },
              "value": "User not Authorized"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 123,
            "mutability": "constant",
            "name": "txnFail",
            "nameLocation": "479:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 927,
            "src": "463:46:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 121,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "463:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "5472616e73616374696f6e204661696c6564",
              "id": 122,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "489:20:2",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_f49bab5693f8c67a6b906bdcc8c0fbaa6df8951336f67051f176c0232fe9f578",
                "typeString": "literal_string \"Transaction Failed\""
              },
              "value": "Transaction Failed"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 126,
            "mutability": "constant",
            "name": "lowBalance",
            "nameLocation": "532:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 927,
            "src": "516:51:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 124,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "516:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "496e73756666696369656e742042616c616e6365",
              "id": 125,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "545:22:2",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
                "typeString": "literal_string \"Insufficient Balance\""
              },
              "value": "Insufficient Balance"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 129,
            "mutability": "constant",
            "name": "badReceiver",
            "nameLocation": "590:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 927,
            "src": "574:61:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 127,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "574:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "5265636569766572206973206e6f74204f776e6572206f722053454741",
              "id": 128,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "604:31:2",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b72eea37943a7b6b840cc4dae2da8aced8ea6fef0974b4060be063d2ad8e664e",
                "typeString": "literal_string \"Receiver is not Owner or SEGA\""
              },
              "value": "Receiver is not Owner or SEGA"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 131,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "668:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 927,
            "src": "644:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 130,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "644:15:2",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 133,
            "mutability": "mutable",
            "name": "backupAccount",
            "nameLocation": "696:13:2",
            "nodeType": "VariableDeclaration",
            "scope": 927,
            "src": "680:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 132,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "680:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 135,
            "mutability": "mutable",
            "name": "releaseTime",
            "nameLocation": "732:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 927,
            "src": "716:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 134,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "716:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 137,
            "mutability": "mutable",
            "name": "unlockDays",
            "nameLocation": "766:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 927,
            "src": "750:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 136,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "750:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 141,
            "mutability": "mutable",
            "name": "SegaMap",
            "nameLocation": "822:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 927,
            "src": "785:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 140,
              "keyType": {
                "id": 138,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "794:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "785:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 139,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "805:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 144,
            "mutability": "mutable",
            "name": "SegaList",
            "nameLocation": "854:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 927,
            "src": "836:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 142,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "836:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 143,
              "nodeType": "ArrayTypeName",
              "src": "836:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 150,
            "name": "Received",
            "nameLocation": "877:8:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 146,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "886:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "886:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 148,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "895:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "895:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "885:15:2"
            },
            "src": "871:30:2"
          },
          {
            "anonymous": false,
            "id": 152,
            "name": "OwnerIsActive",
            "nameLocation": "913:13:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "926:2:2"
            },
            "src": "907:22:2"
          },
          {
            "anonymous": false,
            "id": 156,
            "name": "ChangedBackup",
            "nameLocation": "943:13:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_backup",
                  "nameLocation": "965:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "957:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "957:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "956:17:2"
            },
            "src": "937:37:2"
          },
          {
            "anonymous": false,
            "id": 160,
            "name": "ChangedInactiveTime",
            "nameLocation": "986:19:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "1006:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1005:6:2"
            },
            "src": "980:32:2"
          },
          {
            "anonymous": false,
            "id": 166,
            "name": "OwnershipTransfered",
            "nameLocation": "1024:19:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_new",
                  "nameLocation": "1060:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "1044:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1044:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 164,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_old",
                  "nameLocation": "1082:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "1066:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1066:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1043:44:2"
            },
            "src": "1018:70:2"
          },
          {
            "anonymous": false,
            "id": 170,
            "name": "NewSegaCreated",
            "nameLocation": "1102:14:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 168,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newSega",
                  "nameLocation": "1125:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "1117:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1117:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1116:17:2"
            },
            "src": "1096:38:2"
          },
          {
            "anonymous": false,
            "id": 178,
            "name": "SentOutAssets",
            "nameLocation": "1146:13:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 172,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1176:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "1160:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1160:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 174,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1197:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "1181:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1181:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 176,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1213:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "1205:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1159:62:2"
            },
            "src": "1140:82:2"
          },
          {
            "anonymous": false,
            "id": 184,
            "name": "SegaFrozen",
            "nameLocation": "1236:10:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_sega",
                  "nameLocation": "1263:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1247:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1247:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 182,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "onOff",
                  "nameLocation": "1283:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1269:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1269:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1246:43:2"
            },
            "src": "1230:60:2"
          },
          {
            "anonymous": false,
            "id": 192,
            "name": "SegaRecall",
            "nameLocation": "1302:10:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 186,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_sega",
                  "nameLocation": "1329:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1313:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1313:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 188,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1352:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1336:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1336:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 190,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1368:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1360:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1360:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1312:64:2"
            },
            "src": "1296:81:2"
          },
          {
            "anonymous": false,
            "id": 198,
            "name": "SegaTraderChanged",
            "nameLocation": "1389:17:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_sega",
                  "nameLocation": "1423:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "1407:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1407:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 196,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newTrader",
                  "nameLocation": "1438:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "1430:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1430:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1406:42:2"
            },
            "src": "1383:66:2"
          },
          {
            "body": {
              "id": 204,
              "nodeType": "Block",
              "src": "1597:41:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 200,
                      "name": "_isOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 237,
                      "src": "1608:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1608:10:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "1608:10:2"
                },
                {
                  "id": 203,
                  "nodeType": "PlaceholderStatement",
                  "src": "1629:1:2"
                }
              ]
            },
            "id": 205,
            "name": "isOwner",
            "nameLocation": "1587:7:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1594:2:2"
            },
            "src": "1578:60:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 214,
              "nodeType": "Block",
              "src": "1677:45:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 210,
                        "name": "_sega",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 207,
                        "src": "1696:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 209,
                      "name": "_isSega",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 257,
                      "src": "1688:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1688:14:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "1688:14:2"
                },
                {
                  "id": 213,
                  "nodeType": "PlaceholderStatement",
                  "src": "1713:1:2"
                }
              ]
            },
            "id": 215,
            "name": "isSega",
            "nameLocation": "1655:6:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 207,
                  "mutability": "mutable",
                  "name": "_sega",
                  "nameLocation": "1670:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 215,
                  "src": "1662:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 206,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1662:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1661:15:2"
            },
            "src": "1646:76:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 221,
              "nodeType": "Block",
              "src": "1751:43:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 217,
                      "name": "_viewByORB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "1762:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1762:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "1762:12:2"
                },
                {
                  "id": 220,
                  "nodeType": "PlaceholderStatement",
                  "src": "1785:1:2"
                }
              ]
            },
            "id": 222,
            "name": "viewByORB",
            "nameLocation": "1739:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1748:2:2"
            },
            "src": "1730:64:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 236,
              "nodeType": "Block",
              "src": "1831:82:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 226,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1851:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1851:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 228,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 131,
                          "src": "1865:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1851:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 230,
                        "name": "noAccess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "1872:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 225,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1842:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1842:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "1842:39:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 233,
                      "name": "ownerActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "1892:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1892:13:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "1892:13:2"
                }
              ]
            },
            "id": 237,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isOwner",
            "nameLocation": "1811:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1819:2:2"
            },
            "returnParameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1831:0:2"
            },
            "scope": 927,
            "src": "1802:111:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 256,
              "nodeType": "Block",
              "src": "1971:116:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 243,
                            "name": "SegaList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 144,
                            "src": "1991:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 247,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 244,
                              "name": "SegaMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 141,
                              "src": "2001:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 246,
                            "indexExpression": {
                              "id": 245,
                              "name": "_sega",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 239,
                              "src": "2009:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2001:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1991:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2029:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2021:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 248,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2021:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2021:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1991:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5365676120556e6b6f776e20746f2074686973205661756c74",
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2051:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e6e4a2f58261cf6cbc30ab8beb2e57d7eed3709407e54930ed5d1cda9fefb74",
                          "typeString": "literal_string \"Sega Unkown to this Vault\""
                        },
                        "value": "Sega Unkown to this Vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e6e4a2f58261cf6cbc30ab8beb2e57d7eed3709407e54930ed5d1cda9fefb74",
                          "typeString": "literal_string \"Sega Unkown to this Vault\""
                        }
                      ],
                      "id": 242,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1982:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1982:97:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 255,
                  "nodeType": "ExpressionStatement",
                  "src": "1982:97:2"
                }
              ]
            },
            "id": 257,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isSega",
            "nameLocation": "1934:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 239,
                  "mutability": "mutable",
                  "name": "_sega",
                  "nameLocation": "1950:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 257,
                  "src": "1942:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 238,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1942:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1941:15:2"
            },
            "returnParameters": {
              "id": 241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1971:0:2"
            },
            "scope": 927,
            "src": "1925:162:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 272,
              "nodeType": "Block",
              "src": "2127:101:2",
              "statements": [
                {
                  "expression": {
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 260,
                      "name": "releaseTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "2138:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 261,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2152:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2152:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 263,
                          "name": "unlockDays",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 137,
                          "src": "2170:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 264,
                          "name": "oneDay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "2183:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2170:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2152:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2138:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "2138:51:2"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 269,
                      "name": "OwnerIsActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152,
                      "src": "2205:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2205:15:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 271,
                  "nodeType": "EmitStatement",
                  "src": "2200:20:2"
                }
              ]
            },
            "id": 273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerActive",
            "nameLocation": "2104:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2115:2:2"
            },
            "returnParameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2127:0:2"
            },
            "scope": 927,
            "src": "2095:133:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 289,
              "nodeType": "Block",
              "src": "2272:138:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 277,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2305:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2305:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 279,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 131,
                            "src": "2319:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "2305:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 281,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2341:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2341:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 283,
                            "name": "backupAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 133,
                            "src": "2355:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2341:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2305:63:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 286,
                        "name": "noAccess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "2383:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2283:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2283:119:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 288,
                  "nodeType": "ExpressionStatement",
                  "src": "2283:119:2"
                }
              ]
            },
            "id": 290,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_viewByORB",
            "nameLocation": "2245:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2255:2:2"
            },
            "returnParameters": {
              "id": 275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2272:0:2"
            },
            "scope": 927,
            "src": "2236:174:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 305,
              "nodeType": "Block",
              "src": "2468:79:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 296,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 292,
                          "src": "2488:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2508:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2500:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 297,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2500:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2500:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2488:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5a65726f2041646472657373204e6f7420416c6c6f776564",
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2512:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38af8dc8d870d5c15a2a4a83c8c2cd646e99c527c13b2d0d868792bf7f2eeffa",
                          "typeString": "literal_string \"Zero Address Not Allowed\""
                        },
                        "value": "Zero Address Not Allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38af8dc8d870d5c15a2a4a83c8c2cd646e99c527c13b2d0d868792bf7f2eeffa",
                          "typeString": "literal_string \"Zero Address Not Allowed\""
                        }
                      ],
                      "id": 295,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2479:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2479:60:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "2479:60:2"
                }
              ]
            },
            "id": 306,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_notZero",
            "nameLocation": "2427:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 292,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2444:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 306,
                  "src": "2436:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 291,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2436:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2435:18:2"
            },
            "returnParameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2468:0:2"
            },
            "scope": 927,
            "src": "2418:129:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 327,
              "nodeType": "Block",
              "src": "2624:82:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 319,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2668:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Vault_$927",
                                    "typeString": "contract Vault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Vault_$927",
                                    "typeString": "contract Vault"
                                  }
                                ],
                                "id": 318,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2660:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 317,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2660:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 320,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2660:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 315,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "2643:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1013",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 952,
                            "src": "2643:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2643:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 322,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "2678:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2643:42:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 324,
                        "name": "lowBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "2687:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 314,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2635:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2635:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 326,
                  "nodeType": "ExpressionStatement",
                  "src": "2635:63:2"
                }
              ]
            },
            "id": 328,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_enoughBalance",
            "nameLocation": "2564:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 309,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2586:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 328,
                  "src": "2579:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1013",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 308,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 307,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1013,
                      "src": "2579:6:2"
                    },
                    "referencedDeclaration": 1013,
                    "src": "2579:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1013",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 311,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2602:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 328,
                  "src": "2594:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2594:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2578:32:2"
            },
            "returnParameters": {
              "id": 313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2624:0:2"
            },
            "scope": 927,
            "src": "2555:151:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 355,
              "nodeType": "Block",
              "src": "2770:169:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 334,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 330,
                        "src": "2790:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 333,
                      "name": "_notZero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 306,
                      "src": "2781:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2781:18:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "2781:18:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 338,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 330,
                            "src": "2818:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 339,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 131,
                            "src": "2830:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "2818:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 341,
                              "name": "SegaList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 144,
                              "src": "2856:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 345,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 342,
                                "name": "SegaMap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 141,
                                "src": "2866:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 344,
                              "indexExpression": {
                                "id": 343,
                                "name": "receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 330,
                                "src": "2874:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2866:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2856:29:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 348,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2897:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2889:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 346,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2889:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2889:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2856:43:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2818:81:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 352,
                        "name": "badReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "2919:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 337,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2810:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2810:121:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 354,
                  "nodeType": "ExpressionStatement",
                  "src": "2810:121:2"
                }
              ]
            },
            "id": 356,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkReceiver",
            "nameLocation": "2723:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 330,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "2746:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 356,
                  "src": "2738:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2738:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2737:18:2"
            },
            "returnParameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2770:0:2"
            },
            "scope": 927,
            "src": "2714:225:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 406,
              "nodeType": "Block",
              "src": "3152:277:2",
              "statements": [
                {
                  "expression": {
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 365,
                      "name": "RCU",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "3173:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 366,
                      "name": "_RCU",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 358,
                      "src": "3179:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3173:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 368,
                  "nodeType": "ExpressionStatement",
                  "src": "3173:10:2"
                },
                {
                  "expression": {
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 369,
                      "name": "segaFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "3194:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 370,
                      "name": "_segaFact",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 362,
                      "src": "3208:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3194:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "3194:23:2"
                },
                {
                  "expression": {
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 373,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "3230:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 376,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 360,
                          "src": "3246:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3238:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 374,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3238:8:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3238:15:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3230:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 379,
                  "nodeType": "ExpressionStatement",
                  "src": "3230:23:2"
                },
                {
                  "expression": {
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 380,
                      "name": "backupAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "3264:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 381,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 360,
                      "src": "3280:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3264:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "3264:22:2"
                },
                {
                  "expression": {
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 384,
                      "name": "unlockDays",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "3297:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "333635",
                      "id": 385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3310:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_365_by_1",
                        "typeString": "int_const 365"
                      },
                      "value": "365"
                    },
                    "src": "3297:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 387,
                  "nodeType": "ExpressionStatement",
                  "src": "3297:16:2"
                },
                {
                  "expression": {
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 388,
                      "name": "releaseTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "3324:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 389,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3338:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3338:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 391,
                          "name": "unlockDays",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 137,
                          "src": "3356:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 392,
                          "name": "oneDay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "3369:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3356:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3338:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3324:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 396,
                  "nodeType": "ExpressionStatement",
                  "src": "3324:51:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3418:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3410:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 400,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3410:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3410:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 397,
                        "name": "SegaList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "3396:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3396:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3396:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 405,
                  "nodeType": "ExpressionStatement",
                  "src": "3396:25:2"
                }
              ]
            },
            "id": 407,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 358,
                  "mutability": "mutable",
                  "name": "_RCU",
                  "nameLocation": "3111:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 407,
                  "src": "3103:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3103:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 360,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "3125:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 407,
                  "src": "3117:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3117:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 362,
                  "mutability": "mutable",
                  "name": "_segaFact",
                  "nameLocation": "3141:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 407,
                  "src": "3133:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3133:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3102:49:2"
            },
            "returnParameters": {
              "id": 364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3152:0:2"
            },
            "scope": 927,
            "src": "3091:338:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 417,
              "nodeType": "Block",
              "src": "3464:55:2",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 411,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3489:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3489:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 413,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3501:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "3501:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 410,
                      "name": "Received",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "3480:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3480:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 416,
                  "nodeType": "EmitStatement",
                  "src": "3475:36:2"
                }
              ]
            },
            "id": 418,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3444:2:2"
            },
            "returnParameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3464:0:2"
            },
            "scope": 927,
            "src": "3437:82:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 434,
              "nodeType": "Block",
              "src": "3559:101:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 421,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3574:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "3574:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3586:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3574:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 433,
                  "nodeType": "IfStatement",
                  "src": "3570:83:2",
                  "trueBody": {
                    "id": 432,
                    "nodeType": "Block",
                    "src": "3589:64:2",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 426,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3619:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3619:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 428,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3631:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "3631:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 425,
                            "name": "Received",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 150,
                            "src": "3610:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3610:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 431,
                        "nodeType": "EmitStatement",
                        "src": "3605:36:2"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 435,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3539:2:2"
            },
            "returnParameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3559:0:2"
            },
            "scope": 927,
            "src": "3531:129:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 454,
              "nodeType": "Block",
              "src": "3923:108:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 443,
                        "name": "_backup",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 437,
                        "src": "3943:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 442,
                      "name": "_notZero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 306,
                      "src": "3934:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3934:17:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "3934:17:2"
                },
                {
                  "expression": {
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 446,
                      "name": "backupAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "3962:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 447,
                      "name": "_backup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 437,
                      "src": "3978:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3962:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "3962:23:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 451,
                        "name": "_backup",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 437,
                        "src": "4015:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 450,
                      "name": "ChangedBackup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "4001:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4001:22:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "EmitStatement",
                  "src": "3996:27:2"
                }
              ]
            },
            "functionSelector": "b7dacbf1",
            "id": 455,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 440,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 439,
                  "name": "isOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 205,
                  "src": "3915:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3915:7:2"
              }
            ],
            "name": "setBackup",
            "nameLocation": "3881:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 437,
                  "mutability": "mutable",
                  "name": "_backup",
                  "nameLocation": "3899:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 455,
                  "src": "3891:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3891:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3890:17:2"
            },
            "returnParameters": {
              "id": 441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3923:0:2"
            },
            "scope": 927,
            "src": "3872:159:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 473,
              "nodeType": "Block",
              "src": "4177:115:2",
              "statements": [
                {
                  "expression": {
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 462,
                      "name": "unlockDays",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "4188:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 463,
                      "name": "_unlockTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 457,
                      "src": "4201:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4188:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 465,
                  "nodeType": "ExpressionStatement",
                  "src": "4188:24:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 466,
                      "name": "ownerActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "4223:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4223:13:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "4223:13:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 470,
                        "name": "_unlockTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 457,
                        "src": "4272:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 469,
                      "name": "ChangedInactiveTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "4252:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4252:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 472,
                  "nodeType": "EmitStatement",
                  "src": "4247:37:2"
                }
              ]
            },
            "functionSelector": "3d0ddf84",
            "id": 474,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 460,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 459,
                  "name": "isOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 205,
                  "src": "4169:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4169:7:2"
              }
            ],
            "name": "setUnlockPeriod",
            "nameLocation": "4125:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 457,
                  "mutability": "mutable",
                  "name": "_unlockTime",
                  "nameLocation": "4149:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 474,
                  "src": "4141:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4141:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4140:21:2"
            },
            "returnParameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4177:0:2"
            },
            "scope": 927,
            "src": "4116:176:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 512,
              "nodeType": "Block",
              "src": "4386:293:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 478,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4405:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4405:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 480,
                          "name": "backupAccount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "4419:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4405:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 482,
                        "name": "noAccess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "4433:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 477,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4397:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4397:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 484,
                  "nodeType": "ExpressionStatement",
                  "src": "4397:45:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 486,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4461:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4461:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 488,
                          "name": "releaseTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "4480:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4461:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e6572206973206e6f74206465636c6172656420696e616374697665",
                        "id": 490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4492:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ef6078e31a48ff3f95ae2a7ba663802ae1895c44178030d69906df62107c4f0",
                          "typeString": "literal_string \"Owner is not declared inactive\""
                        },
                        "value": "Owner is not declared inactive"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ef6078e31a48ff3f95ae2a7ba663802ae1895c44178030d69906df62107c4f0",
                          "typeString": "literal_string \"Owner is not declared inactive\""
                        }
                      ],
                      "id": 485,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4453:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4453:72:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 492,
                  "nodeType": "ExpressionStatement",
                  "src": "4453:72:2"
                },
                {
                  "assignments": [
                    494
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 494,
                      "mutability": "mutable",
                      "name": "oldAc",
                      "nameLocation": "4544:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 512,
                      "src": "4536:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 493,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4536:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 496,
                  "initialValue": {
                    "id": 495,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 131,
                    "src": "4552:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4536:21:2"
                },
                {
                  "expression": {
                    "id": 502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 497,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "4568:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 500,
                          "name": "backupAccount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "4584:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4576:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 498,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4576:8:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4576:22:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4568:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 503,
                  "nodeType": "ExpressionStatement",
                  "src": "4568:30:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 505,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "4634:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 506,
                        "name": "oldAc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 494,
                        "src": "4641:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 504,
                      "name": "OwnershipTransfered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "4614:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4614:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 508,
                  "nodeType": "EmitStatement",
                  "src": "4609:38:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 509,
                      "name": "ownerActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "4658:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4658:13:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 511,
                  "nodeType": "ExpressionStatement",
                  "src": "4658:13:2"
                }
              ]
            },
            "functionSelector": "ab518e6e",
            "id": 513,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimVault",
            "nameLocation": "4366:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4376:2:2"
            },
            "returnParameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4386:0:2"
            },
            "scope": 927,
            "src": "4357:322:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 560,
              "nodeType": "Block",
              "src": "5130:263:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 523,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 515,
                        "src": "5156:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 522,
                      "name": "_checkReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 356,
                      "src": "5141:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5141:24:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 525,
                  "nodeType": "ExpressionStatement",
                  "src": "5141:24:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 529,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5192:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vault_$927",
                                  "typeString": "contract Vault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Vault_$927",
                                  "typeString": "contract Vault"
                                }
                              ],
                              "id": 528,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5184:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 527,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5184:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5184:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "5184:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 532,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 517,
                          "src": "5209:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5184:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 534,
                        "name": "lowBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "5217:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 526,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5176:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5176:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 536,
                  "nodeType": "ExpressionStatement",
                  "src": "5176:52:2"
                },
                {
                  "assignments": [
                    538,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 538,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "5245:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 560,
                      "src": "5240:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 537,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5240:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 545,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5287:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 539,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 515,
                          "src": "5258:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "5258:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 541,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 517,
                          "src": "5279:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "5258:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5258:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5239:51:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 547,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 538,
                        "src": "5309:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 548,
                        "name": "txnFail",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "5318:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 546,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5301:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5301:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 550,
                  "nodeType": "ExpressionStatement",
                  "src": "5301:25:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 552,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 515,
                        "src": "5356:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5374:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5366:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 553,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5366:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5366:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 557,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 517,
                        "src": "5378:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 551,
                      "name": "SentOutAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 178,
                      "src": "5342:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5342:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 559,
                  "nodeType": "EmitStatement",
                  "src": "5337:48:2"
                }
              ]
            },
            "functionSelector": "d9b83c71",
            "id": 561,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 520,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 519,
                  "name": "isOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 205,
                  "src": "5122:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "5122:7:2"
              }
            ],
            "name": "sendAssets",
            "nameLocation": "5062:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 515,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "5089:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 561,
                  "src": "5073:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 514,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5073:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 517,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5107:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 561,
                  "src": "5099:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5099:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5072:42:2"
            },
            "returnParameters": {
              "id": 521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5130:0:2"
            },
            "scope": 927,
            "src": "5053:340:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 611,
              "nodeType": "Block",
              "src": "5555:299:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 573,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 565,
                        "src": "5575:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 572,
                      "name": "_notZero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 306,
                      "src": "5566:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5566:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "5566:16:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 577,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 563,
                        "src": "5608:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 576,
                      "name": "_checkReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 356,
                      "src": "5593:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5593:24:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 579,
                  "nodeType": "ExpressionStatement",
                  "src": "5593:24:2"
                },
                {
                  "assignments": [
                    582
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 582,
                      "mutability": "mutable",
                      "name": "Token",
                      "nameLocation": "5635:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 611,
                      "src": "5628:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1013",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 581,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 580,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1013,
                          "src": "5628:6:2"
                        },
                        "referencedDeclaration": 1013,
                        "src": "5628:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1013",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 586,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 584,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 565,
                        "src": "5650:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 583,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1013,
                      "src": "5643:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1013_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5643:14:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1013",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5628:29:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 588,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 582,
                        "src": "5683:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1013",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 589,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 567,
                        "src": "5690:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1013",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 587,
                      "name": "_enoughBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 328,
                      "src": "5668:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$1013_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) view"
                      }
                    },
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5668:29:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 591,
                  "nodeType": "ExpressionStatement",
                  "src": "5668:29:2"
                },
                {
                  "assignments": [
                    593
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 593,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "5713:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 611,
                      "src": "5708:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 592,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5708:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 599,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 596,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 563,
                        "src": "5738:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 597,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 567,
                        "src": "5748:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 594,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 582,
                        "src": "5723:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1013",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 962,
                      "src": "5723:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5723:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5708:47:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 601,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 593,
                        "src": "5774:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 602,
                        "name": "txnFail",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "5783:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 600,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5766:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5766:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 604,
                  "nodeType": "ExpressionStatement",
                  "src": "5766:25:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 606,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 563,
                        "src": "5821:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 607,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 565,
                        "src": "5831:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 608,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 567,
                        "src": "5839:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 605,
                      "name": "SentOutAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 178,
                      "src": "5807:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5807:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 610,
                  "nodeType": "EmitStatement",
                  "src": "5802:44:2"
                }
              ]
            },
            "functionSelector": "664365aa",
            "id": 612,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 570,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 569,
                  "name": "isOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 205,
                  "src": "5547:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "5547:7:2"
              }
            ],
            "name": "sendAssets",
            "nameLocation": "5479:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 563,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "5498:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 612,
                  "src": "5490:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5490:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 565,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5516:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 612,
                  "src": "5508:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5508:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 567,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5532:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 612,
                  "src": "5524:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 566,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5524:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5489:50:2"
            },
            "returnParameters": {
              "id": 571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5555:0:2"
            },
            "scope": 927,
            "src": "5470:384:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 653,
              "nodeType": "Block",
              "src": "6199:245:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 624,
                            "name": "segaFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 108,
                            "src": "6237:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 621,
                                "name": "RCU",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 110,
                                "src": "6223:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 620,
                              "name": "IRCU",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 935,
                              "src": "6218:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRCU_$935_$",
                                "typeString": "type(contract IRCU)"
                              }
                            },
                            "id": 622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6218:9:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRCU_$935",
                              "typeString": "contract IRCU"
                            }
                          },
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifySF",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 934,
                          "src": "6218:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) external returns (bool)"
                          }
                        },
                        "id": 625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6218:31:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 619,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6210:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6210:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 627,
                  "nodeType": "ExpressionStatement",
                  "src": "6210:40:2"
                },
                {
                  "assignments": [
                    629
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 629,
                      "mutability": "mutable",
                      "name": "_sega",
                      "nameLocation": "6269:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 653,
                      "src": "6261:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 628,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6261:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 640,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 636,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6320:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vault_$927",
                              "typeString": "contract Vault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Vault_$927",
                              "typeString": "contract Vault"
                            }
                          ],
                          "id": 635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6312:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 634,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6312:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6312:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 638,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "6327:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 631,
                            "name": "segaFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 108,
                            "src": "6288:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 630,
                          "name": "ISegaFactP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1048,
                          "src": "6277:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISegaFactP_$1048_$",
                            "typeString": "type(contract ISegaFactP)"
                          }
                        },
                        "id": 632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6277:23:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISegaFactP_$1048",
                          "typeString": "contract ISegaFactP"
                        }
                      },
                      "id": 633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createSega",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1035,
                      "src": "6277:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
                        "typeString": "function (address,address) external returns (address)"
                      }
                    },
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6277:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6261:72:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 642,
                        "name": "_sega",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 629,
                        "src": "6351:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 643,
                        "name": "SegaList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "6358:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      {
                        "id": 644,
                        "name": "SegaMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "6368:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      ],
                      "id": 641,
                      "name": "itemIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 888,
                      "src": "6344:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_address_$dyn_storage_ptr_$_t_mapping$_t_address_$_t_uint256_$_$returns$__$",
                        "typeString": "function (address,address[] storage pointer,mapping(address => uint256))"
                      }
                    },
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6344:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 646,
                  "nodeType": "ExpressionStatement",
                  "src": "6344:32:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 648,
                        "name": "_sega",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 629,
                        "src": "6407:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 647,
                      "name": "NewSegaCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "6392:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6392:21:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 650,
                  "nodeType": "EmitStatement",
                  "src": "6387:26:2"
                },
                {
                  "expression": {
                    "id": 651,
                    "name": "_sega",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 629,
                    "src": "6431:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 618,
                  "id": 652,
                  "nodeType": "Return",
                  "src": "6424:12:2"
                }
              ]
            },
            "functionSelector": "aaaeba9e",
            "id": 654,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 615,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 614,
                  "name": "isOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 205,
                  "src": "6173:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "6173:7:2"
              }
            ],
            "name": "createNewSega",
            "nameLocation": "6150:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6163:2:2"
            },
            "returnParameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 617,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 654,
                  "src": "6190:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 616,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6190:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6189:9:2"
            },
            "scope": 927,
            "src": "6141:303:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 700,
              "nodeType": "Block",
              "src": "6588:254:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 670,
                            "name": "_segaFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 656,
                            "src": "6626:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 667,
                                "name": "RCU",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 110,
                                "src": "6612:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 666,
                              "name": "IRCU",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 935,
                              "src": "6607:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRCU_$935_$",
                                "typeString": "type(contract IRCU)"
                              }
                            },
                            "id": 668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6607:9:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRCU_$935",
                              "typeString": "contract IRCU"
                            }
                          },
                          "id": 669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifySF",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 934,
                          "src": "6607:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) external returns (bool)"
                          }
                        },
                        "id": 671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6607:32:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 665,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6599:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6599:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 673,
                  "nodeType": "ExpressionStatement",
                  "src": "6599:41:2"
                },
                {
                  "assignments": [
                    675
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 675,
                      "mutability": "mutable",
                      "name": "_sega",
                      "nameLocation": "6659:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 700,
                      "src": "6651:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 674,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6651:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 687,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 682,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6711:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vault_$927",
                              "typeString": "contract Vault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Vault_$927",
                              "typeString": "contract Vault"
                            }
                          ],
                          "id": 681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6703:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 680,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6703:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6703:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 684,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "6718:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 685,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 658,
                        "src": "6725:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 677,
                            "name": "_segaFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 656,
                            "src": "6678:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 676,
                          "name": "ISegaFactP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1048,
                          "src": "6667:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISegaFactP_$1048_$",
                            "typeString": "type(contract ISegaFactP)"
                          }
                        },
                        "id": 678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6667:24:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISegaFactP_$1048",
                          "typeString": "contract ISegaFactP"
                        }
                      },
                      "id": 679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createSega",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1026,
                      "src": "6667:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (address,address,uint256) external returns (address)"
                      }
                    },
                    "id": 686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6667:64:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6651:80:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 689,
                        "name": "_sega",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "6749:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 690,
                        "name": "SegaList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "6756:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      {
                        "id": 691,
                        "name": "SegaMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "6766:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      ],
                      "id": 688,
                      "name": "itemIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 888,
                      "src": "6742:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_address_$dyn_storage_ptr_$_t_mapping$_t_address_$_t_uint256_$_$returns$__$",
                        "typeString": "function (address,address[] storage pointer,mapping(address => uint256))"
                      }
                    },
                    "id": 692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6742:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 693,
                  "nodeType": "ExpressionStatement",
                  "src": "6742:32:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 695,
                        "name": "_sega",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "6805:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 694,
                      "name": "NewSegaCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "6790:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6790:21:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 697,
                  "nodeType": "EmitStatement",
                  "src": "6785:26:2"
                },
                {
                  "expression": {
                    "id": 698,
                    "name": "_sega",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 675,
                    "src": "6829:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 664,
                  "id": 699,
                  "nodeType": "Return",
                  "src": "6822:12:2"
                }
              ]
            },
            "functionSelector": "0dc38d51",
            "id": 701,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 661,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 660,
                  "name": "isOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 205,
                  "src": "6562:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "6562:7:2"
              }
            ],
            "name": "createCustomSega",
            "nameLocation": "6501:16:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 656,
                  "mutability": "mutable",
                  "name": "_segaFactory",
                  "nameLocation": "6526:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 701,
                  "src": "6518:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6518:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 658,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "6548:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 701,
                  "src": "6540:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 657,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6540:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6517:37:2"
            },
            "returnParameters": {
              "id": 664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 663,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 701,
                  "src": "6579:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6579:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6578:9:2"
            },
            "scope": 927,
            "src": "6492:350:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 722,
              "nodeType": "Block",
              "src": "7055:84:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 712,
                            "name": "_sega",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 703,
                            "src": "7072:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 711,
                          "name": "ISega",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1145,
                          "src": "7066:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISega_$1145_$",
                            "typeString": "type(contract ISega)"
                          }
                        },
                        "id": 713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7066:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISega_$1145",
                          "typeString": "contract ISega"
                        }
                      },
                      "id": 714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pauseTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1053,
                      "src": "7066:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7066:29:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 716,
                  "nodeType": "ExpressionStatement",
                  "src": "7066:29:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 718,
                        "name": "_sega",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 703,
                        "src": "7122:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7129:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 717,
                      "name": "SegaFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "7111:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$returns$__$",
                        "typeString": "function (address,uint8)"
                      }
                    },
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7111:20:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 721,
                  "nodeType": "EmitStatement",
                  "src": "7106:25:2"
                }
              ]
            },
            "functionSelector": "1f132e33",
            "id": 723,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 706,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 705,
                  "name": "isOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 205,
                  "src": "7033:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "7033:7:2"
              },
              {
                "arguments": [
                  {
                    "id": 708,
                    "name": "_sega",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 703,
                    "src": "7048:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 709,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 707,
                  "name": "isSega",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 215,
                  "src": "7041:6:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "7041:13:2"
              }
            ],
            "name": "pauseSega",
            "nameLocation": "7001:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 703,
                  "mutability": "mutable",
                  "name": "_sega",
                  "nameLocation": "7019:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 723,
                  "src": "7011:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 702,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7011:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7010:15:2"
            },
            "returnParameters": {
              "id": 710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7055:0:2"
            },
            "scope": 927,
            "src": "6992:147:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 744,
              "nodeType": "Block",
              "src": "7210:86:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 734,
                            "name": "_sega",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 725,
                            "src": "7227:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 733,
                          "name": "ISega",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1145,
                          "src": "7221:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISega_$1145_$",
                            "typeString": "type(contract ISega)"
                          }
                        },
                        "id": 735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7221:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISega_$1145",
                          "typeString": "contract ISega"
                        }
                      },
                      "id": 736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unpauseTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1056,
                      "src": "7221:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7221:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 738,
                  "nodeType": "ExpressionStatement",
                  "src": "7221:31:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 740,
                        "name": "_sega",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 725,
                        "src": "7279:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7286:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 739,
                      "name": "SegaFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "7268:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$returns$__$",
                        "typeString": "function (address,uint8)"
                      }
                    },
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7268:20:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 743,
                  "nodeType": "EmitStatement",
                  "src": "7263:25:2"
                }
              ]
            },
            "functionSelector": "4011f00f",
            "id": 745,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 728,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 727,
                  "name": "isOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 205,
                  "src": "7188:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "7188:7:2"
              },
              {
                "arguments": [
                  {
                    "id": 730,
                    "name": "_sega",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 725,
                    "src": "7203:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 731,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 729,
                  "name": "isSega",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 215,
                  "src": "7196:6:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "7196:13:2"
              }
            ],
            "name": "unpauseSega",
            "nameLocation": "7154:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 725,
                  "mutability": "mutable",
                  "name": "_sega",
                  "nameLocation": "7174:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 745,
                  "src": "7166:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7166:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7165:15:2"
            },
            "returnParameters": {
              "id": 732,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7210:0:2"
            },
            "scope": 927,
            "src": "7145:151:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 769,
              "nodeType": "Block",
              "src": "7390:108:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 761,
                        "name": "_newTrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 749,
                        "src": "7427:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 758,
                            "name": "_sega",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 747,
                            "src": "7407:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 757,
                          "name": "ISega",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1145,
                          "src": "7401:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISega_$1145_$",
                            "typeString": "type(contract ISega)"
                          }
                        },
                        "id": 759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7401:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISega_$1145",
                          "typeString": "contract ISega"
                        }
                      },
                      "id": 760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeTrader",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1061,
                      "src": "7401:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7401:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 763,
                  "nodeType": "ExpressionStatement",
                  "src": "7401:37:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 765,
                        "name": "_sega",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "7472:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 766,
                        "name": "_newTrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 749,
                        "src": "7479:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 764,
                      "name": "SegaTraderChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 198,
                      "src": "7454:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7454:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 768,
                  "nodeType": "EmitStatement",
                  "src": "7449:41:2"
                }
              ]
            },
            "functionSelector": "18024bec",
            "id": 770,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 752,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 751,
                  "name": "isOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 205,
                  "src": "7368:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "7368:7:2"
              },
              {
                "arguments": [
                  {
                    "id": 754,
                    "name": "_sega",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 747,
                    "src": "7383:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 755,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 753,
                  "name": "isSega",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 215,
                  "src": "7376:6:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "7376:13:2"
              }
            ],
            "name": "changeTrader",
            "nameLocation": "7313:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 747,
                  "mutability": "mutable",
                  "name": "_sega",
                  "nameLocation": "7334:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 770,
                  "src": "7326:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 746,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7326:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 749,
                  "mutability": "mutable",
                  "name": "_newTrader",
                  "nameLocation": "7349:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 770,
                  "src": "7341:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7341:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7325:35:2"
            },
            "returnParameters": {
              "id": 756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7390:0:2"
            },
            "scope": 927,
            "src": "7304:194:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 798,
              "nodeType": "Block",
              "src": "7703:108:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 786,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 774,
                        "src": "7741:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 783,
                            "name": "_sega",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 772,
                            "src": "7720:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 782,
                          "name": "ISega",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1145,
                          "src": "7714:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISega_$1145_$",
                            "typeString": "type(contract ISega)"
                          }
                        },
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7714:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISega_$1145",
                          "typeString": "contract ISega"
                        }
                      },
                      "id": 785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "returnToVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1066,
                      "src": "7714:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7714:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 788,
                  "nodeType": "ExpressionStatement",
                  "src": "7714:35:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 790,
                        "name": "_sega",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 772,
                        "src": "7776:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7791:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7783:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 791,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7783:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7783:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 795,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 774,
                        "src": "7795:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 789,
                      "name": "SegaRecall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 192,
                      "src": "7765:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7765:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 797,
                  "nodeType": "EmitStatement",
                  "src": "7760:43:2"
                }
              ]
            },
            "functionSelector": "00219c17",
            "id": 799,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 777,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 776,
                  "name": "isOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 205,
                  "src": "7681:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "7681:7:2"
              },
              {
                "arguments": [
                  {
                    "id": 779,
                    "name": "_sega",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 772,
                    "src": "7696:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 780,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 778,
                  "name": "isSega",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 215,
                  "src": "7689:6:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "7689:13:2"
              }
            ],
            "name": "RecallFromSega",
            "nameLocation": "7627:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 772,
                  "mutability": "mutable",
                  "name": "_sega",
                  "nameLocation": "7650:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "7642:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7642:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 774,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "7665:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "7657:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 773,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7657:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7641:32:2"
            },
            "returnParameters": {
              "id": 781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7703:0:2"
            },
            "scope": 927,
            "src": "7618:193:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 831,
              "nodeType": "Block",
              "src": "7924:139:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 814,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 803,
                        "src": "7944:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 813,
                      "name": "_notZero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 306,
                      "src": "7935:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7935:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 816,
                  "nodeType": "ExpressionStatement",
                  "src": "7935:16:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 821,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 803,
                        "src": "7989:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 822,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 805,
                        "src": "7997:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 818,
                            "name": "_sega",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 801,
                            "src": "7968:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 817,
                          "name": "ISega",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1145,
                          "src": "7962:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISega_$1145_$",
                            "typeString": "type(contract ISega)"
                          }
                        },
                        "id": 819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7962:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISega_$1145",
                          "typeString": "contract ISega"
                        }
                      },
                      "id": 820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "returnToVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1073,
                      "src": "7962:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7962:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 824,
                  "nodeType": "ExpressionStatement",
                  "src": "7962:43:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 826,
                        "name": "_sega",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 801,
                        "src": "8032:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 827,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 803,
                        "src": "8039:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 828,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 805,
                        "src": "8047:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 825,
                      "name": "SegaRecall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 192,
                      "src": "8021:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8021:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 830,
                  "nodeType": "EmitStatement",
                  "src": "8016:39:2"
                }
              ]
            },
            "functionSelector": "e5001d7f",
            "id": 832,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 808,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 807,
                  "name": "isOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 205,
                  "src": "7902:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "7902:7:2"
              },
              {
                "arguments": [
                  {
                    "id": 810,
                    "name": "_sega",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 801,
                    "src": "7917:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 811,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 809,
                  "name": "isSega",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 215,
                  "src": "7910:6:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "7910:13:2"
              }
            ],
            "name": "RecallFromSega",
            "nameLocation": "7832:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 801,
                  "mutability": "mutable",
                  "name": "_sega",
                  "nameLocation": "7855:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "7847:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 800,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7847:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 803,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "7870:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "7862:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7862:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 805,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "7886:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "7878:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 804,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7878:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7846:48:2"
            },
            "returnParameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7924:0:2"
            },
            "scope": 927,
            "src": "7823:240:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 887,
              "nodeType": "Block",
              "src": "8310:255:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 844,
                        "name": "_map",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 841,
                        "src": "8325:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 846,
                      "indexExpression": {
                        "id": 845,
                        "name": "_item",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 834,
                        "src": "8330:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8325:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8340:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8325:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 885,
                    "nodeType": "Block",
                    "src": "8481:77:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 872,
                              "name": "_map",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 841,
                              "src": "8492:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 874,
                            "indexExpression": {
                              "id": 873,
                              "name": "_item",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 834,
                              "src": "8497:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8492:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 875,
                              "name": "_list",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 837,
                              "src": "8506:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[] storage pointer"
                              }
                            },
                            "id": 876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "8506:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8492:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 878,
                        "nodeType": "ExpressionStatement",
                        "src": "8492:26:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 882,
                              "name": "_item",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 834,
                              "src": "8540:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 879,
                              "name": "_list",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 837,
                              "src": "8529:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[] storage pointer"
                              }
                            },
                            "id": 881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "8529:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8529:17:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 884,
                        "nodeType": "ExpressionStatement",
                        "src": "8529:17:2"
                      }
                    ]
                  },
                  "id": 886,
                  "nodeType": "IfStatement",
                  "src": "8321:237:2",
                  "trueBody": {
                    "id": 871,
                    "nodeType": "Block",
                    "src": "8344:131:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 859,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 850,
                                  "name": "_list",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 837,
                                  "src": "8368:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                    "typeString": "address[] storage pointer"
                                  }
                                },
                                "id": 854,
                                "indexExpression": {
                                  "baseExpression": {
                                    "id": 851,
                                    "name": "_map",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 841,
                                    "src": "8374:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 853,
                                  "indexExpression": {
                                    "id": 852,
                                    "name": "_item",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 834,
                                    "src": "8379:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8374:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8368:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 857,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8398:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 856,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8390:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 855,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8390:7:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 858,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8390:10:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "8368:32:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416c726561647920456e61626c6564",
                              "id": 860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8402:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6f5d1591292bb55735df3c7222bc45ae554fb1e6167cf40377e6d5d41d815254",
                                "typeString": "literal_string \"Already Enabled\""
                              },
                              "value": "Already Enabled"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6f5d1591292bb55735df3c7222bc45ae554fb1e6167cf40377e6d5d41d815254",
                                "typeString": "literal_string \"Already Enabled\""
                              }
                            ],
                            "id": 849,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8359:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8359:61:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 862,
                        "nodeType": "ExpressionStatement",
                        "src": "8359:61:2"
                      },
                      {
                        "expression": {
                          "id": 869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 863,
                              "name": "_list",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 837,
                              "src": "8435:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[] storage pointer"
                              }
                            },
                            "id": 867,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 864,
                                "name": "_map",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 841,
                                "src": "8442:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 866,
                              "indexExpression": {
                                "id": 865,
                                "name": "_item",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 834,
                                "src": "8447:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8442:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8435:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 868,
                            "name": "_item",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 834,
                            "src": "8458:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8435:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 870,
                        "nodeType": "ExpressionStatement",
                        "src": "8435:28:2"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 888,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "itemIn",
            "nameLocation": "8217:6:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 834,
                  "mutability": "mutable",
                  "name": "_item",
                  "nameLocation": "8232:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "8224:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8224:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 837,
                  "mutability": "mutable",
                  "name": "_list",
                  "nameLocation": "8257:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "8239:23:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 835,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8239:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 836,
                    "nodeType": "ArrayTypeName",
                    "src": "8239:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 841,
                  "mutability": "mutable",
                  "name": "_map",
                  "nameLocation": "8295:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "8264:35:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 840,
                    "keyType": {
                      "id": 838,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8272:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "8264:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 839,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "8281:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8223:77:2"
            },
            "returnParameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8310:0:2"
            },
            "scope": 927,
            "src": "8208:357:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 898,
              "nodeType": "Block",
              "src": "8619:59:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 894,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 890,
                        "src": "8638:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e7366657220556e73756363657366756c",
                        "id": 895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8647:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62e3ec8917b28d81d081500df60df625b8e67bdd1039aa06f5ff0cfd6fcde839",
                          "typeString": "literal_string \"Transfer Unsuccesful\""
                        },
                        "value": "Transfer Unsuccesful"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62e3ec8917b28d81d081500df60df625b8e67bdd1039aa06f5ff0cfd6fcde839",
                          "typeString": "literal_string \"Transfer Unsuccesful\""
                        }
                      ],
                      "id": 893,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8630:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8630:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 897,
                  "nodeType": "ExpressionStatement",
                  "src": "8630:40:2"
                }
              ]
            },
            "id": 899,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkTxn",
            "nameLocation": "8582:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 890,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "8596:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 899,
                  "src": "8591:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8591:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8590:14:2"
            },
            "returnParameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8619:0:2"
            },
            "scope": 927,
            "src": "8573:105:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 916,
              "nodeType": "Block",
              "src": "8974:73:2",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 910,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "8993:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 911,
                        "name": "backupAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "9000:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 912,
                        "name": "releaseTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "9015:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 913,
                        "name": "unlockDays",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "9028:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 914,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8992:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(address payable,address,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 909,
                  "id": 915,
                  "nodeType": "Return",
                  "src": "8985:54:2"
                }
              ]
            },
            "functionSelector": "89ab6fb4",
            "id": 917,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRecoveryInfo",
            "nameLocation": "8899:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8914:2:2"
            },
            "returnParameters": {
              "id": 909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 902,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 917,
                  "src": "8938:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8938:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 904,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 917,
                  "src": "8947:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 903,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8947:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 906,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 917,
                  "src": "8956:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8956:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 908,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 917,
                  "src": "8965:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8965:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8937:36:2"
            },
            "scope": 927,
            "src": "8890:157:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 925,
              "nodeType": "Block",
              "src": "9166:34:2",
              "statements": [
                {
                  "expression": {
                    "id": 923,
                    "name": "SegaList",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 144,
                    "src": "9184:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 922,
                  "id": 924,
                  "nodeType": "Return",
                  "src": "9177:15:2"
                }
              ]
            },
            "functionSelector": "04abfe7c",
            "id": 926,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "viewSegaList",
            "nameLocation": "9112:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9124:2:2"
            },
            "returnParameters": {
              "id": 922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 921,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 926,
                  "src": "9148:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 919,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9148:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 920,
                    "nodeType": "ArrayTypeName",
                    "src": "9148:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9147:18:2"
            },
            "scope": 927,
            "src": "9103:97:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 936,
        "src": "200:9005:2",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 935,
        "linearizedBaseContracts": [
          935
        ],
        "name": "IRCU",
        "nameLocation": "9219:4:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "13d1c771",
            "id": 934,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "verifySF",
            "nameLocation": "9239:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 929,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "9248:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 928,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9248:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9247:9:2"
            },
            "returnParameters": {
              "id": 933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 932,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "9275:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 931,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9275:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9274:6:2"
            },
            "scope": 935,
            "src": "9230:51:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 936,
        "src": "9209:75:2",
        "usedErrors": []
      }
    ],
    "src": "37:9247:2"
  },
  "bytecode": "",
  "bytecodeSha1": "51de0fa2e7a144dbfc8b029a02f2510c650d929f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "Vault",
  "coverageMap": {
    "branches": {
      "0": {},
      "2": {
        "Vault.<fallback>": {
          "56": [
            3574,
            3587,
            false
          ]
        },
        "Vault._checkReceiver": {
          "67": [
            2818,
            2835,
            true
          ],
          "68": [
            2856,
            2899,
            true
          ]
        },
        "Vault._enoughBalance": {
          "69": [
            2643,
            2685,
            true
          ]
        },
        "Vault._isOwner": {
          "62": [
            1851,
            1870,
            true
          ]
        },
        "Vault._isSega": {
          "63": [
            1991,
            2031,
            true
          ]
        },
        "Vault._notZero": {
          "66": [
            2488,
            2510,
            true
          ]
        },
        "Vault.claimVault": {
          "59": [
            4405,
            4432,
            true
          ],
          "60": [
            4461,
            4491,
            true
          ]
        },
        "Vault.createCustomSega": {
          "57": [
            6607,
            6639,
            true
          ]
        },
        "Vault.createNewSega": {
          "58": [
            6218,
            6249,
            true
          ]
        },
        "Vault.itemIn": {
          "64": [
            8325,
            8341,
            false
          ],
          "65": [
            8368,
            8400,
            true
          ]
        },
        "Vault.sendAssets": {
          "61": [
            5184,
            5215,
            true
          ]
        }
      },
      "3": {},
      "4": {}
    },
    "statements": {
      "0": {},
      "2": {
        "Vault.<fallback>": {
          "1": [
            3605,
            3641
          ]
        },
        "Vault.<receive>": {
          "0": [
            3475,
            3511
          ]
        },
        "Vault.RecallFromSega": {
          "3": [
            7714,
            7749
          ],
          "4": [
            7760,
            7803
          ],
          "40": [
            7935,
            7951
          ],
          "41": [
            7962,
            8005
          ],
          "42": [
            8016,
            8055
          ]
        },
        "Vault._checkReceiver": {
          "53": [
            2781,
            2799
          ],
          "54": [
            2810,
            2931
          ]
        },
        "Vault._enoughBalance": {
          "55": [
            2635,
            2698
          ]
        },
        "Vault._isOwner": {
          "43": [
            1842,
            1881
          ],
          "44": [
            1892,
            1905
          ]
        },
        "Vault._isSega": {
          "45": [
            1982,
            2079
          ]
        },
        "Vault._notZero": {
          "52": [
            2479,
            2539
          ]
        },
        "Vault.changeTrader": {
          "10": [
            7401,
            7438
          ],
          "11": [
            7449,
            7490
          ]
        },
        "Vault.claimVault": {
          "28": [
            4397,
            4442
          ],
          "29": [
            4453,
            4525
          ],
          "30": [
            4568,
            4598
          ],
          "31": [
            4609,
            4647
          ],
          "32": [
            4658,
            4671
          ]
        },
        "Vault.createCustomSega": {
          "6": [
            6599,
            6640
          ],
          "7": [
            6742,
            6774
          ],
          "8": [
            6785,
            6811
          ],
          "9": [
            6822,
            6834
          ]
        },
        "Vault.createNewSega": {
          "24": [
            6210,
            6250
          ],
          "25": [
            6344,
            6376
          ],
          "26": [
            6387,
            6413
          ],
          "27": [
            6424,
            6436
          ]
        },
        "Vault.getRecoveryInfo": {
          "2": [
            8985,
            9039
          ]
        },
        "Vault.itemIn": {
          "46": [
            8359,
            8420
          ],
          "47": [
            8435,
            8463
          ],
          "48": [
            8492,
            8518
          ],
          "49": [
            8529,
            8546
          ]
        },
        "Vault.ownerActive": {
          "50": [
            2138,
            2189
          ],
          "51": [
            2200,
            2220
          ]
        },
        "Vault.pauseSega": {
          "12": [
            7066,
            7095
          ],
          "13": [
            7106,
            7131
          ]
        },
        "Vault.sendAssets": {
          "19": [
            5566,
            5582
          ],
          "20": [
            5593,
            5617
          ],
          "21": [
            5668,
            5697
          ],
          "22": [
            5766,
            5791
          ],
          "23": [
            5802,
            5846
          ],
          "36": [
            5141,
            5165
          ],
          "37": [
            5176,
            5228
          ],
          "38": [
            5301,
            5326
          ],
          "39": [
            5337,
            5385
          ]
        },
        "Vault.setBackup": {
          "33": [
            3934,
            3951
          ],
          "34": [
            3962,
            3985
          ],
          "35": [
            3996,
            4023
          ]
        },
        "Vault.setUnlockPeriod": {
          "14": [
            4188,
            4212
          ],
          "15": [
            4223,
            4236
          ],
          "16": [
            4247,
            4284
          ]
        },
        "Vault.unpauseSega": {
          "17": [
            7221,
            7252
          ],
          "18": [
            7263,
            7288
          ]
        },
        "Vault.viewSegaList": {
          "5": [
            9177,
            9192
          ]
        }
      },
      "3": {},
      "4": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20",
    "IRCU",
    "ISega",
    "ISegaFactP"
  ],
  "deployedBytecode": "6080604052600436106100f65760003560e01c8063664365aa1161008a578063ab518e6e11610059578063ab518e6e14610357578063b7dacbf11461036c578063d9b83c711461038c578063e5001d7f146103ac57610136565b8063664365aa146102aa57806389ab6fb4146102ca57806391f21da51461030e578063aaaeba9e1461034257610136565b80631f132e33116100c65780631f132e33146102165780633709d6ba146102365780633d0ddf841461026a5780634011f00f1461028a57610136565b8062219c171461017357806304abfe7c146101935780630dc38d51146101be57806318024bec146101f657610136565b3661013657604080513381523460208201527f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f8852587491015b60405180910390a1005b341561017157604080513381523460208201527f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874910161012c565b005b34801561017f57600080fd5b5061017161018e3660046113ce565b6103cc565b34801561019f57600080fd5b506101a861047f565b6040516101b591906114c8565b60405180910390f35b3480156101ca57600080fd5b506101de6101d93660046113ce565b6104e1565b6040516001600160a01b0390911681526020016101b5565b34801561020257600080fd5b506101716102113660046113fa565b61066e565b34801561022257600080fd5b5061017161023136600461138d565b610720565b34801561024257600080fd5b506101de7f000000000000000000000000000000000000000000000000000000000000000081565b34801561027657600080fd5b50610171610285366004611496565b6107c0565b34801561029657600080fd5b506101716102a536600461138d565b61080c565b3480156102b657600080fd5b506101716102c5366004611433565b6108ab565b3480156102d657600080fd5b50600054600154600254600354604080516001600160a01b0395861681529490931660208501529183015260608201526080016101b5565b34801561031a57600080fd5b506101de7f000000000000000000000000000000000000000000000000000000000000000081565b34801561034e57600080fd5b506101de610a00565b34801561036357600080fd5b50610171610bc5565b34801561037857600080fd5b5061017161038736600461138d565b610cc9565b34801561039857600080fd5b506101716103a73660046113ce565b610d28565b3480156103b857600080fd5b506101716103c7366004611433565b610e68565b6103d4610f38565b816103de81610f99565b6040516317d85bbf60e11b8152600481018390526001600160a01b03841690632fb0b77e90602401600060405180830381600087803b15801561042057600080fd5b505af1158015610434573d6000803e3d6000fd5b5050604051848152600092506001600160a01b03861691507fbe457ce8b7bcaa491415def88f108b025525279936ee1dd9ec4dc7debffcee04906020015b60405180910390a3505050565b606060058054806020026020016040519081016040528092919081815260200182805480156104d757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116104b9575b5050505050905090565b60006104eb610f38565b6040516313d1c77160e01b81526001600160a01b0384811660048301527f000000000000000000000000000000000000000000000000000000000000000016906313d1c77190602401602060405180830381600087803b15801561054e57600080fd5b505af1158015610562573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105869190611474565b61058f57600080fd5b60008054604051638d42974360e01b81523060048201526001600160a01b0391821660248201526044810185905290851690638d42974390606401602060405180830381600087803b1580156105e457600080fd5b505af11580156105f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061c91906113b1565b905061062b816005600461102a565b6040516001600160a01b03821681527fb6ef1215893bd60ffeb9e97981aa41b2819605f61f7848a06db1f8c3aefc961b9060200160405180910390a19392505050565b610676610f38565b8161068081610f99565b6040516303fa141760e01b81526001600160a01b0383811660048301528416906303fa141790602401600060405180830381600087803b1580156106c357600080fd5b505af11580156106d7573d6000803e3d6000fd5b50506040516001600160a01b038581168252861692507f204ff20e2ccebc7aa7e2a38214aa8e974b36e1922b3588a7ff6dc21744bef4b6915060200160405180910390a2505050565b610728610f38565b8061073281610f99565b816001600160a01b03166347af99576040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561076d57600080fd5b505af1158015610781573d6000803e3d6000fd5b5050604051600192506001600160a01b03851691507fa0868fabaeea3e340199d1f6fa323ec391fdb4fbdbea37a7e7194fb16930d6c690600090a35050565b6107c8610f38565b60038190556107d561116a565b6040518181527f782f38ea18a9e9e96e953be34b91022668f3809452782a1ac80d0765fe597a35906020015b60405180910390a150565b610814610f38565b8061081e81610f99565b816001600160a01b0316638936a91f6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561085957600080fd5b505af115801561086d573d6000803e3d6000fd5b5050604051600092506001600160a01b03851691507fa0868fabaeea3e340199d1f6fa323ec391fdb4fbdbea37a7e7194fb16930d6c6908390a35050565b6108b3610f38565b6108bc826111b3565b6108c583611209565b816108d081836112c7565b60405163a9059cbb60e01b81526001600160a01b038581166004830152602482018490526000919083169063a9059cbb90604401602060405180830381600087803b15801561091e57600080fd5b505af1158015610932573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109569190611474565b90508060405180604001604052806012815260200171151c985b9cd858dd1a5bdb8811985a5b195960721b815250906109ab5760405162461bcd60e51b81526004016109a29190611515565b60405180910390fd5b50836001600160a01b0316856001600160a01b03167f8f7184268eabc3e5f95d42873237e44e84d2cb27baa7358ac4fe098d4dfba2ed856040516109f191815260200190565b60405180910390a35050505050565b6000610a0a610f38565b6040516313d1c77160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301527f000000000000000000000000000000000000000000000000000000000000000016906313d1c77190602401602060405180830381600087803b158015610a8d57600080fd5b505af1158015610aa1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac59190611474565b610ace57600080fd5b60008054604051631937878760e31b81523060048201526001600160a01b0391821660248201527f00000000000000000000000000000000000000000000000000000000000000009091169063c9bc3c3890604401602060405180830381600087803b158015610b3d57600080fd5b505af1158015610b51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7591906113b1565b9050610b84816005600461102a565b6040516001600160a01b03821681527fb6ef1215893bd60ffeb9e97981aa41b2819605f61f7848a06db1f8c3aefc961b9060200160405180910390a1905090565b600154604080518082019091526013815272155cd95c881b9bdd08105d5d1a1bdc9a5e9959606a1b6020820152906001600160a01b03163314610c1b5760405162461bcd60e51b81526004016109a29190611515565b50600254421015610c6e5760405162461bcd60e51b815260206004820152601e60248201527f4f776e6572206973206e6f74206465636c6172656420696e616374697665000060448201526064016109a2565b600080546001546001600160a01b039081166001600160a01b031983168117845560405191909216928392917f0d18b5fd22306e373229b9439188228edca81207d1667f604daf6cef8aa3ee679190a3610cc661116a565b50565b610cd1610f38565b610cda816111b3565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f0adacb637d17de7895e9c7fc75f36437fd5c36d5e6e9cc83b95380f10a052f4a90602001610801565b610d30610f38565b610d3982611209565b8047101560405180604001604052806014815260200173496e73756666696369656e742042616c616e636560601b81525090610d885760405162461bcd60e51b81526004016109a29190611515565b506000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610dd6576040519150601f19603f3d011682016040523d82523d6000602084013e610ddb565b606091505b505090508060405180604001604052806012815260200171151c985b9cd858dd1a5bdb8811985a5b195960721b81525090610e295760405162461bcd60e51b81526004016109a29190611515565b506040518281526000906001600160a01b038516907f8f7184268eabc3e5f95d42873237e44e84d2cb27baa7358ac4fe098d4dfba2ed90602001610472565b610e70610f38565b82610e7a81610f99565b610e83836111b3565b60405163d0f108eb60e01b81526001600160a01b0384811660048301526024820184905285169063d0f108eb90604401600060405180830381600087803b158015610ecd57600080fd5b505af1158015610ee1573d6000803e3d6000fd5b50505050826001600160a01b0316846001600160a01b03167fbe457ce8b7bcaa491415def88f108b025525279936ee1dd9ec4dc7debffcee0484604051610f2a91815260200190565b60405180910390a350505050565b600054604080518082019091526013815272155cd95c881b9bdd08105d5d1a1bdc9a5e9959606a1b6020820152906001600160a01b03163314610f8e5760405162461bcd60e51b81526004016109a29190611515565b50610f9761116a565b565b6001600160a01b038116600090815260046020526040812054600580549091908110610fc757610fc76115b7565b6000918252602090912001546001600160a01b03161415610cc65760405162461bcd60e51b815260206004820152601960248201527f5365676120556e6b6f776e20746f2074686973205661756c740000000000000060448201526064016109a2565b6001600160a01b03831660009081526020829052604090205415611128576001600160a01b03831660009081526020829052604081205483548491908110611074576110746115b7565b6000918252602090912001546001600160a01b0316146110c85760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e48115b98589b1959608a1b60448201526064016109a2565b6001600160a01b03831660009081526020829052604090205482548491849181106110f5576110f56115b7565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505050565b81546001600160a01b0384166000818152602084815260408220849055600184018655858252902090910180546001600160a01b03191690911790555b505050565b6201518060035461117b9190611582565b611185904261156a565b6002556040517f7aa982a4520d96ed188d1997cb8420198dbfd349076824ed797a3fd39a7728a190600090a1565b6001600160a01b038116610cc65760405162461bcd60e51b815260206004820152601860248201527f5a65726f2041646472657373204e6f7420416c6c6f776564000000000000000060448201526064016109a2565b611212816111b3565b6000546001600160a01b038281169116148061126f57506001600160a01b038116600090815260046020526040812054600580549091908110611257576112576115b7565b6000918252602090912001546001600160a01b031614155b6040518060400160405280601d81526020017f5265636569766572206973206e6f74204f776e6572206f722053454741000000815250906112c35760405162461bcd60e51b81526004016109a29190611515565b5050565b6040516370a0823160e01b815230600482015281906001600160a01b038416906370a082319060240160206040518083038186803b15801561130857600080fd5b505afa15801561131c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134091906114af565b101560405180604001604052806014815260200173496e73756666696369656e742042616c616e636560601b815250906111655760405162461bcd60e51b81526004016109a29190611515565b60006020828403121561139f57600080fd5b81356113aa816115cd565b9392505050565b6000602082840312156113c357600080fd5b81516113aa816115cd565b600080604083850312156113e157600080fd5b82356113ec816115cd565b946020939093013593505050565b6000806040838503121561140d57600080fd5b8235611418816115cd565b91506020830135611428816115cd565b809150509250929050565b60008060006060848603121561144857600080fd5b8335611453816115cd565b92506020840135611463816115cd565b929592945050506040919091013590565b60006020828403121561148657600080fd5b815180151581146113aa57600080fd5b6000602082840312156114a857600080fd5b5035919050565b6000602082840312156114c157600080fd5b5051919050565b6020808252825182820181905260009190848201906040850190845b818110156115095783516001600160a01b0316835292840192918401916001016114e4565b50909695505050505050565b600060208083528351808285015260005b8181101561154257858101830151858201604001528201611526565b81811115611554576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561157d5761157d6115a1565b500190565b600081600019048311821515161561159c5761159c6115a1565b500290565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0381168114610cc657600080fdfea2646970667358221220e89954e386e7cfd8661f7492a88815c26b6c0e036da4dc4a073d0596de39deae64736f6c63430008060033",
  "deployedSourceMap": "200:9005:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3480:31;;;3489:10;4429:51:5;;3501:9:2;4511:2:5;4496:18;;4489:34;3480:31:2;;4402:18:5;3480:31:2;;;;;;;;200:9005;;3574:9;:13;3570:83;;3610:31;;;3619:10;4429:51:5;;3631:9:2;4511:2:5;4496:18;;4489:34;3610:31:2;;4402:18:5;3610:31:2;4384:145:5;3570:83:2;200:9005;7618:193;;;;;;;;;;-1:-1:-1;7618:193:2;;;;;:::i;:::-;;:::i;9103:97::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6492:350;;;;;;;;;;-1:-1:-1;6492:350:2;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3054:32:5;;;;3036:51;;3024:2;3009:18;6492:350:2;2991:102:5;7304:194:2;;;;;;;;;;-1:-1:-1;7304:194:2;;;;;:::i;:::-;;:::i;6992:147::-;;;;;;;;;;-1:-1:-1;6992:147:2;;;;;:::i;:::-;;:::i;271:28::-;;;;;;;;;;;;;;;4116:176;;;;;;;;;;-1:-1:-1;4116:176:2;;;;;:::i;:::-;;:::i;7145:151::-;;;;;;;;;;-1:-1:-1;7145:151:2;;;;;:::i;:::-;;:::i;5470:384::-;;;;;;;;;;-1:-1:-1;5470:384:2;;;;;:::i;:::-;;:::i;8890:157::-;;;;;;;;;;-1:-1:-1;8938:7:2;8993:5;;9000:13;9015:11;;9028:10;;8890:157;;;-1:-1:-1;;;;;8993:5:2;;;4072:34:5;;9000:13:2;;;;4137:2:5;4122:18;;4115:43;4174:18;;;4167:34;4232:2;4217:18;;4210:34;4021:3;4006:19;8890:157:2;3988:262:5;228:36:2;;;;;;;;;;;;;;;6141:303;;;;;;;;;;;;;:::i;4357:322::-;;;;;;;;;;;;;:::i;3872:159::-;;;;;;;;;;-1:-1:-1;3872:159:2;;;;;:::i;:::-;;:::i;5053:340::-;;;;;;;;;;-1:-1:-1;5053:340:2;;;;;:::i;:::-;;:::i;7823:240::-;;;;;;;;;;-1:-1:-1;7823:240:2;;;;;:::i;:::-;;:::i;7618:193::-;1608:10;:8;:10::i;:::-;7696:5:::1;1688:14;1696:5;1688:7;:14::i;:::-;7714:35:::2;::::0;-1:-1:-1;;;7714:35:2;;::::2;::::0;::::2;7355:25:5::0;;;-1:-1:-1;;;;;7714:26:2;::::2;::::0;::::2;::::0;7328:18:5;;7714:35:2::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;7765:38:2::2;::::0;7355:25:5;;;7791:1:2::2;::::0;-1:-1:-1;;;;;;7765:38:2;::::2;::::0;-1:-1:-1;7765:38:2::2;::::0;7343:2:5;7328:18;7765:38:2::2;;;;;;;;1629:1:::1;7618:193:::0;;:::o;9103:97::-;9148:16;9184:8;9177:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9177:15:2;;;-1:-1:-1;9177:15:2;;;;;;;;;;;;;;;;;;;9103:97;:::o;6492:350::-;6579:7;1608:10;:8;:10::i;:::-;6607:32:::1;::::0;-1:-1:-1;;;6607:32:2;;-1:-1:-1;;;;;3054:32:5;;;6607::2::1;::::0;::::1;3036:51:5::0;6612:3:2::1;6607:18;::::0;::::1;::::0;3009::5;;6607:32:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6599:41;;;::::0;::::1;;6651:13;6718:5:::0;;6667:64:::1;::::0;-1:-1:-1;;;6667:64:2;;6711:4:::1;6667:64;::::0;::::1;3663:34:5::0;-1:-1:-1;;;;;6718:5:2;;::::1;3713:18:5::0;;;3706:43;3765:18;;;3758:34;;;6667:35:2;;::::1;::::0;::::1;::::0;3598:18:5;;6667:64:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6651:80;;6742:32;6749:5;6756:8;6766:7;6742:6;:32::i;:::-;6790:21;::::0;;-1:-1:-1;;;;;3054:32:5;;3036:51;;6790:21:2;;::::1;::::0;;;;3024:2:5;6790:21:2;;::::1;6829:5:::0;6492:350;-1:-1:-1;;;6492:350:2:o;7304:194::-;1608:10;:8;:10::i;:::-;7383:5:::1;1688:14;1696:5;1688:7;:14::i;:::-;7401:37:::2;::::0;-1:-1:-1;;;7401:37:2;;-1:-1:-1;;;;;3054:32:5;;;7401:37:2::2;::::0;::::2;3036:51:5::0;7401:25:2;::::2;::::0;::::2;::::0;3009:18:5;;7401:37:2::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;7454:36:2::2;::::0;;-1:-1:-1;;;;;3054:32:5;;;3036:51;;7454:36:2;;;;::::2;::::0;-1:-1:-1;7454:36:2::2;::::0;-1:-1:-1;7454:36:2;;;3024:2:5;7454:36:2;;::::2;1629:1:::1;7304:194:::0;;:::o;6992:147::-;1608:10;:8;:10::i;:::-;7048:5:::1;1688:14;1696:5;1688:7;:14::i;:::-;7072:5:::2;-1:-1:-1::0;;;;;7066:27:2::2;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;7111:20:2::2;::::0;7129:1:::2;::::0;-1:-1:-1;;;;;;7111:20:2;::::2;::::0;-1:-1:-1;7111:20:2::2;::::0;;;::::2;1629:1:::1;6992:147:::0;:::o;4116:176::-;1608:10;:8;:10::i;:::-;4188::::1;:24:::0;;;4223:13:::1;:11;:13::i;:::-;4252:32;::::0;7355:25:5;;;4252:32:2::1;::::0;7343:2:5;7328:18;4252:32:2::1;;;;;;;;4116:176:::0;:::o;7145:151::-;1608:10;:8;:10::i;:::-;7203:5:::1;1688:14;1696:5;1688:7;:14::i;:::-;7227:5:::2;-1:-1:-1::0;;;;;7221:29:2::2;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;7268:20:2::2;::::0;7286:1:::2;::::0;-1:-1:-1;;;;;;7268:20:2;::::2;::::0;-1:-1:-1;7268:20:2::2;::::0;7286:1;;7268:20:::2;1629:1:::1;7145:151:::0;:::o;5470:384::-;1608:10;:8;:10::i;:::-;5566:16:::1;5575:6;5566:8;:16::i;:::-;5593:24;5608:8;5593:14;:24::i;:::-;5650:6:::0;5668:29:::1;5650:6:::0;5690;5668:14:::1;:29::i;:::-;5723:32;::::0;-1:-1:-1;;;5723:32:2;;-1:-1:-1;;;;;4447:32:5;;;5723::2::1;::::0;::::1;4429:51:5::0;4496:18;;;4489:34;;;5708:12:2::1;::::0;5723:14;;::::1;::::0;::::1;::::0;4402:18:5;;5723:32:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5783:7;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;5783:7:2::1;::::0;::::1;::::0;5708:47;;-1:-1:-1;5708:47:2;5766:25:::1;;;::::0;-1:-1:-1;;;5766:25:2;;::::1;::::0;;::::1;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;5807:39:2::1;::::0;7355:25:5;;;-1:-1:-1;;;;;5807:39:2;;::::1;::::0;;;::::1;::::0;::::1;::::0;7343:2:5;7328:18;5807:39:2::1;;;;;;;5555:299;;5470:384:::0;;;:::o;6141:303::-;6190:7;1608:10;:8;:10::i;:::-;6218:31:::1;::::0;-1:-1:-1;;;6218:31:2;;-1:-1:-1;;;;;6237:11:2::1;3054:32:5::0;;6218:31:2::1;::::0;::::1;3036:51:5::0;6223:3:2::1;6218:18;::::0;::::1;::::0;3009::5;;6218:31:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6210:40;;;::::0;::::1;;6261:13;6327:5:::0;;6277:56:::1;::::0;-1:-1:-1;;;6277:56:2;;6320:4:::1;6277:56;::::0;::::1;3318:34:5::0;-1:-1:-1;;;;;6327:5:2;;::::1;3368:18:5::0;;;3361:43;6288:11:2::1;6277:34:::0;;::::1;::::0;::::1;::::0;3253:18:5;;6277:56:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6261:72;;6344:32;6351:5;6358:8;6368:7;6344:6;:32::i;:::-;6392:21;::::0;;-1:-1:-1;;;;;3054:32:5;;3036:51;;6392:21:2;;::::1;::::0;;;;3024:2:5;6392:21:2;;::::1;6431:5:::0;-1:-1:-1;6141:303:2;:::o;4357:322::-;4419:13;;4433:8;;;;;;;;;;;;-1:-1:-1;;;4433:8:2;;;;;-1:-1:-1;;;;;4419:13:2;4405:10;:27;4397:45;;;;-1:-1:-1;;;4397:45:2;;;;;;;;:::i;:::-;;4480:11;;4461:15;:30;;4453:72;;;;-1:-1:-1;;;4453:72:2;;7052:2:5;4453:72:2;;;7034:21:5;7091:2;7071:18;;;7064:30;7130:32;7110:18;;;7103:60;7180:18;;4453:72:2;7024:180:5;4453:72:2;4536:13;4552:5;;;4584:13;-1:-1:-1;;;;;4584:13:2;;;-1:-1:-1;;;;;;4568:30:2;;;;;;4614:33;;4552:5;;;;;;;4584:13;4614:33;;4536:13;4614:33;4658:13;:11;:13::i;:::-;4386:293;4357:322::o;3872:159::-;1608:10;:8;:10::i;:::-;3934:17:::1;3943:7;3934:8;:17::i;:::-;3962:13;:23:::0;;-1:-1:-1;;;;;;3962:23:2::1;-1:-1:-1::0;;;;;3962:23:2;::::1;::::0;;::::1;::::0;;;4001:22:::1;::::0;3036:51:5;;;4001:22:2::1;::::0;3024:2:5;3009:18;4001:22:2::1;2991:102:5::0;5053:340:2;1608:10;:8;:10::i;:::-;5141:24:::1;5156:8;5141:14;:24::i;:::-;5217:10;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;5217:10:2::1;::::0;::::1;::::0;5184:21:::1;:31:::0;-1:-1:-1;5184:31:2::1;5176:52;;;::::0;-1:-1:-1;;;5176:52:2;;::::1;::::0;;::::1;;;:::i;:::-;-1:-1:-1::0;5258:32:2::1;::::0;5240:12:::1;::::0;-1:-1:-1;;;;;5258:13:2;::::1;::::0;5279:6;;5240:12;5258:32;5240:12;5258:32;5279:6;5258:13;:32:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;5318:7:2::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;5318:7:2::1;::::0;::::1;::::0;5239:51;;-1:-1:-1;5239:51:2;5301:25:::1;;;::::0;-1:-1:-1;;;5301:25:2;;::::1;::::0;;::::1;;;:::i;:::-;-1:-1:-1::0;5342:43:2::1;::::0;7355:25:5;;;5374:1:2::1;::::0;-1:-1:-1;;;;;5342:43:2;::::1;::::0;::::1;::::0;7343:2:5;7328:18;5342:43:2::1;7310:76:5::0;7823:240:2;1608:10;:8;:10::i;:::-;7917:5:::1;1688:14;1696:5;1688:7;:14::i;:::-;7935:16:::2;7944:6;7935:8;:16::i;:::-;7962:43;::::0;-1:-1:-1;;;7962:43:2;;-1:-1:-1;;;;;4447:32:5;;;7962:43:2::2;::::0;::::2;4429:51:5::0;4496:18;;;4489:34;;;7962:26:2;::::2;::::0;::::2;::::0;4402:18:5;;7962:43:2::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;8021:34:2::2;::::0;7355:25:5;;;-1:-1:-1;;;;;8021:34:2;;::::2;::::0;-1:-1:-1;8021:34:2;::::2;::::0;-1:-1:-1;8021:34:2::2;::::0;7343:2:5;7328:18;8021:34:2::2;;;;;;;1629:1:::1;7823:240:::0;;;:::o;1802:111::-;1865:5;;1872:8;;;;;;;;;;;;-1:-1:-1;;;1872:8:2;;;;;-1:-1:-1;;;;;1865:5:2;1851:10;:19;1842:39;;;;-1:-1:-1;;;1842:39:2;;;;;;;;:::i;:::-;;1892:13;:11;:13::i;:::-;1802:111::o;1925:162::-;-1:-1:-1;;;;;2001:14:2;;2029:1;2001:14;;;:7;:14;;;;;;1991:8;:26;;:8;;2001:14;1991:26;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;1991:26:2;:40;;1982:97;;;;-1:-1:-1;;;1982:97:2;;6354:2:5;1982:97:2;;;6336:21:5;6393:2;6373:18;;;6366:30;6432:27;6412:18;;;6405:55;6477:18;;1982:97:2;6326:175:5;8208:357:2;-1:-1:-1;;;;;8325:11:2;;;;;;;;;;;;;;:16;8321:237;;-1:-1:-1;;;;;8374:11:2;;8398:1;8374:11;;;;;;;;;;;8368:18;;;;8374:11;8368:18;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;8368:18:2;:32;8359:61;;;;-1:-1:-1;;;8359:61:2;;6708:2:5;8359:61:2;;;6690:21:5;6747:2;6727:18;;;6720:30;-1:-1:-1;;;6766:18:5;;;6759:45;6821:18;;8359:61:2;6680:165:5;8359:61:2;-1:-1:-1;;;;;8442:11:2;;;;;;;;;;;;;;8435:20;;8442:11;;8435:20;;;;;;;;:::i;:::-;;;;;;;;;;:28;;-1:-1:-1;;;;;;8435:28:2;-1:-1:-1;;;;;8435:28:2;;;;;;;;;;-1:-1:-1;;;8208:357:2:o;8321:237::-;8506:12;;-1:-1:-1;;;;;8492:11:2;;;;;;;;;;;;;:26;;;-1:-1:-1;8529:17:2;;;;;;;;;;;;;;-1:-1:-1;;;;;;8529:17:2;;;;;;8321:237;8208:357;;;:::o;2095:133::-;334:8;2170:10;;:19;;;;:::i;:::-;2152:37;;:15;:37;:::i;:::-;2138:11;:51;2205:15;;;;;;;2095:133::o;2418:129::-;-1:-1:-1;;;;;2488:22:2;;2479:60;;;;-1:-1:-1;;;2479:60:2;;6001:2:5;2479:60:2;;;5983:21:5;6040:2;6020:18;;;6013:30;6079:26;6059:18;;;6052:54;6123:18;;2479:60:2;5973:174:5;2714:225:2;2781:18;2790:8;2781;:18::i;:::-;2830:5;;-1:-1:-1;;;;;2818:17:2;;;2830:5;;2818:17;;:81;;-1:-1:-1;;;;;;2866:17:2;;2897:1;2866:17;;;:7;:17;;;;;;2856:8;:29;;:8;;2866:17;2856:29;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2856:29:2;:43;;2818:81;2919:11;;;;;;;;;;;;;;;;;2810:121;;;;;-1:-1:-1;;;2810:121:2;;;;;;;;:::i;:::-;;2714:225;:::o;2555:151::-;2643:31;;-1:-1:-1;;;2643:31:2;;2668:4;2643:31;;;3036:51:5;2678:7:2;;-1:-1:-1;;;;;2643:16:2;;;;;3009:18:5;;2643:31:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2687:10;;;;;;;;;;;;-1:-1:-1;;;2687:10:2;;;;;-1:-1:-1;2643:42:2;2635:63;;;;-1:-1:-1;;;2635:63:2;;;;;;;;:::i;14:247:5:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;142:1;139;132:12;94:2;181:9;168:23;200:31;225:5;200:31;:::i;:::-;250:5;84:177;-1:-1:-1;;;84:177:5:o;266:251::-;336:6;389:2;377:9;368:7;364:23;360:32;357:2;;;405:1;402;395:12;357:2;437:9;431:16;456:31;481:5;456:31;:::i;522:323::-;598:6;606;659:2;647:9;638:7;634:23;630:32;627:2;;;675:1;672;665:12;627:2;714:9;701:23;733:31;758:5;733:31;:::i;:::-;783:5;835:2;820:18;;;;807:32;;-1:-1:-1;;;617:228:5:o;850:388::-;918:6;926;979:2;967:9;958:7;954:23;950:32;947:2;;;995:1;992;985:12;947:2;1034:9;1021:23;1053:31;1078:5;1053:31;:::i;:::-;1103:5;-1:-1:-1;1160:2:5;1145:18;;1132:32;1173:33;1132:32;1173:33;:::i;:::-;1225:7;1215:17;;;937:301;;;;;:::o;1243:456::-;1320:6;1328;1336;1389:2;1377:9;1368:7;1364:23;1360:32;1357:2;;;1405:1;1402;1395:12;1357:2;1444:9;1431:23;1463:31;1488:5;1463:31;:::i;:::-;1513:5;-1:-1:-1;1570:2:5;1555:18;;1542:32;1583:33;1542:32;1583:33;:::i;:::-;1347:352;;1635:7;;-1:-1:-1;;;1689:2:5;1674:18;;;;1661:32;;1347:352::o;2024:277::-;2091:6;2144:2;2132:9;2123:7;2119:23;2115:32;2112:2;;;2160:1;2157;2150:12;2112:2;2192:9;2186:16;2245:5;2238:13;2231:21;2224:5;2221:32;2211:2;;2267:1;2264;2257:12;2306:180;2365:6;2418:2;2406:9;2397:7;2393:23;2389:32;2386:2;;;2434:1;2431;2424:12;2386:2;-1:-1:-1;2457:23:5;;2376:110;-1:-1:-1;2376:110:5:o;2491:184::-;2561:6;2614:2;2602:9;2593:7;2589:23;2585:32;2582:2;;;2630:1;2627;2620:12;2582:2;-1:-1:-1;2653:16:5;;2572:103;-1:-1:-1;2572:103:5:o;4534:658::-;4705:2;4757:21;;;4827:13;;4730:18;;;4849:22;;;4676:4;;4705:2;4928:15;;;;4902:2;4887:18;;;4676:4;4971:195;4985:6;4982:1;4979:13;4971:195;;;5050:13;;-1:-1:-1;;;;;5046:39:5;5034:52;;5141:15;;;;5106:12;;;;-1:-1:-1;5000:9:5;4971:195;;;-1:-1:-1;5183:3:5;;4685:507;-1:-1:-1;;;;;;4685:507:5:o;5197:597::-;5309:4;5338:2;5367;5356:9;5349:21;5399:6;5393:13;5442:6;5437:2;5426:9;5422:18;5415:34;5467:1;5477:140;5491:6;5488:1;5485:13;5477:140;;;5586:14;;;5582:23;;5576:30;5552:17;;;5571:2;5548:26;5541:66;5506:10;;5477:140;;;5635:6;5632:1;5629:13;5626:2;;;5705:1;5700:2;5691:6;5680:9;5676:22;5672:31;5665:42;5626:2;-1:-1:-1;5778:2:5;5757:15;-1:-1:-1;;5753:29:5;5738:45;;;;5785:2;5734:54;;5318:476;-1:-1:-1;;;5318:476:5:o;7391:128::-;7431:3;7462:1;7458:6;7455:1;7452:13;7449:2;;;7468:18;;:::i;:::-;-1:-1:-1;7504:9:5;;7439:80::o;7524:168::-;7564:7;7630:1;7626;7622:6;7618:14;7615:1;7612:21;7607:1;7600:9;7593:17;7589:45;7586:2;;;7637:18;;:::i;:::-;-1:-1:-1;7677:9:5;;7576:116::o;7697:127::-;7758:10;7753:3;7749:20;7746:1;7739:31;7789:4;7786:1;7779:15;7813:4;7810:1;7803:15;7829:127;7890:10;7885:3;7881:20;7878:1;7871:31;7921:4;7918:1;7911:15;7945:4;7942:1;7935:15;7961:131;-1:-1:-1;;;;;8036:31:5;;8026:42;;8016:2;;8082:1;8079;8072:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    200,
    9205
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x664365AA GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xAB518E6E GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xAB518E6E EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0xB7DACBF1 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xD9B83C71 EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xE5001D7F EQ PUSH2 0x3AC JUMPI PUSH2 0x136 JUMP JUMPDEST DUP1 PUSH4 0x664365AA EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x89AB6FB4 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x91F21DA5 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xAAAEBA9E EQ PUSH2 0x342 JUMPI PUSH2 0x136 JUMP JUMPDEST DUP1 PUSH4 0x1F132E33 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x1F132E33 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x3709D6BA EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x3D0DDF84 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x4011F00F EQ PUSH2 0x28A JUMPI PUSH2 0x136 JUMP JUMPDEST DUP1 PUSH3 0x219C17 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x4ABFE7C EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xDC38D51 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x18024BEC EQ PUSH2 0x1F6 JUMPI PUSH2 0x136 JUMP JUMPDEST CALLDATASIZE PUSH2 0x136 JUMPI PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x171 JUMPI PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 SWAP2 ADD PUSH2 0x12C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0x13CE JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DE PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x13CE JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FA JUMP JUMPDEST PUSH2 0x66E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0x138D JUMP JUMPDEST PUSH2 0x720 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DE PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x1496 JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x2A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x138D JUMP JUMPDEST PUSH2 0x80C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x8AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x1B5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DE PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DE PUSH2 0xA00 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0xBC5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0x138D JUMP JUMPDEST PUSH2 0xCC9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x3A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x13CE JUMP JUMPDEST PUSH2 0xD28 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x3C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0xE68 JUMP JUMPDEST PUSH2 0x3D4 PUSH2 0xF38 JUMP JUMPDEST DUP2 PUSH2 0x3DE DUP2 PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x17D85BBF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x2FB0B77E SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x434 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH1 0x0 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 POP PUSH32 0xBE457CE8B7BCAA491415DEF88F108B025525279936EE1DD9EC4DC7DEBFFCEE04 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x4D7 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4B9 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EB PUSH2 0xF38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x13D1C771 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x13D1C771 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x562 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x586 SWAP2 SWAP1 PUSH2 0x1474 JUMP JUMPDEST PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x8D429743 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP6 AND SWAP1 PUSH4 0x8D429743 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x61C SWAP2 SWAP1 PUSH2 0x13B1 JUMP JUMPDEST SWAP1 POP PUSH2 0x62B DUP2 PUSH1 0x5 PUSH1 0x4 PUSH2 0x102A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 MSTORE PUSH32 0xB6EF1215893BD60FFEB9E97981AA41B2819605F61F7848A06DB1F8C3AEFC961B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x676 PUSH2 0xF38 JUMP JUMPDEST DUP2 PUSH2 0x680 DUP2 PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3FA1417 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 AND SWAP1 PUSH4 0x3FA1417 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP7 AND SWAP3 POP PUSH32 0x204FF20E2CCEBC7AA7E2A38214AA8E974B36E1922B3588A7FF6DC21744BEF4B6 SWAP2 POP PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x728 PUSH2 0xF38 JUMP JUMPDEST DUP1 PUSH2 0x732 DUP2 PUSH2 0xF99 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x47AF9957 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x76D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x781 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 POP PUSH32 0xA0868FABAEEA3E340199D1F6FA323EC391FDB4FBDBEA37A7E7194FB16930D6C6 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x7C8 PUSH2 0xF38 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH2 0x7D5 PUSH2 0x116A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x782F38EA18A9E9E96E953BE34B91022668F3809452782A1AC80D0765FE597A35 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x814 PUSH2 0xF38 JUMP JUMPDEST DUP1 PUSH2 0x81E DUP2 PUSH2 0xF99 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8936A91F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x859 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x86D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 POP PUSH32 0xA0868FABAEEA3E340199D1F6FA323EC391FDB4FBDBEA37A7E7194FB16930D6C6 SWAP1 DUP4 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x8B3 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x8BC DUP3 PUSH2 0x11B3 JUMP JUMPDEST PUSH2 0x8C5 DUP4 PUSH2 0x1209 JUMP JUMPDEST DUP2 PUSH2 0x8D0 DUP2 DUP4 PUSH2 0x12C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x91E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x932 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x956 SWAP2 SWAP1 PUSH2 0x1474 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x151C985B9CD858DD1A5BDB8811985A5B1959 PUSH1 0x72 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x9AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A2 SWAP2 SWAP1 PUSH2 0x1515 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8F7184268EABC3E5F95D42873237E44E84D2CB27BAA7358AC4FE098D4DFBA2ED DUP6 PUSH1 0x40 MLOAD PUSH2 0x9F1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA0A PUSH2 0xF38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x13D1C771 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x13D1C771 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAA1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAC5 SWAP2 SWAP1 PUSH2 0x1474 JUMP JUMPDEST PUSH2 0xACE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x19378787 PUSH1 0xE3 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xC9BC3C38 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB51 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB75 SWAP2 SWAP1 PUSH2 0x13B1 JUMP JUMPDEST SWAP1 POP PUSH2 0xB84 DUP2 PUSH1 0x5 PUSH1 0x4 PUSH2 0x102A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 MSTORE PUSH32 0xB6EF1215893BD60FFEB9E97981AA41B2819605F61F7848A06DB1F8C3AEFC961B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH19 0x155CD95C881B9BDD08105D5D1A1BDC9A5E9959 PUSH1 0x6A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A2 SWAP2 SWAP1 PUSH2 0x1515 JUMP JUMPDEST POP PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0xC6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E6572206973206E6F74206465636C6172656420696E6163746976650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP3 SWAP2 PUSH32 0xD18B5FD22306E373229B9439188228EDCA81207D1667F604DAF6CEF8AA3EE67 SWAP2 SWAP1 LOG3 PUSH2 0xCC6 PUSH2 0x116A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xCD1 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0xCDA DUP2 PUSH2 0x11B3 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xADACB637D17DE7895E9C7FC75F36437FD5C36D5E6E9CC83B95380F10A052F4A SWAP1 PUSH1 0x20 ADD PUSH2 0x801 JUMP JUMPDEST PUSH2 0xD30 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0xD39 DUP3 PUSH2 0x1209 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0x496E73756666696369656E742042616C616E6365 PUSH1 0x60 SHL DUP2 MSTORE POP SWAP1 PUSH2 0xD88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A2 SWAP2 SWAP1 PUSH2 0x1515 JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDD6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDDB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x151C985B9CD858DD1A5BDB8811985A5B1959 PUSH1 0x72 SHL DUP2 MSTORE POP SWAP1 PUSH2 0xE29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A2 SWAP2 SWAP1 PUSH2 0x1515 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0x8F7184268EABC3E5F95D42873237E44E84D2CB27BAA7358AC4FE098D4DFBA2ED SWAP1 PUSH1 0x20 ADD PUSH2 0x472 JUMP JUMPDEST PUSH2 0xE70 PUSH2 0xF38 JUMP JUMPDEST DUP3 PUSH2 0xE7A DUP2 PUSH2 0xF99 JUMP JUMPDEST PUSH2 0xE83 DUP4 PUSH2 0x11B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD0F108EB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP6 AND SWAP1 PUSH4 0xD0F108EB SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xECD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEE1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xBE457CE8B7BCAA491415DEF88F108B025525279936EE1DD9EC4DC7DEBFFCEE04 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF2A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH19 0x155CD95C881B9BDD08105D5D1A1BDC9A5E9959 PUSH1 0x6A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A2 SWAP2 SWAP1 PUSH2 0x1515 JUMP JUMPDEST POP PUSH2 0xF97 PUSH2 0x116A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x5 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0xFC7 JUMPI PUSH2 0xFC7 PUSH2 0x15B7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xCC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5365676120556E6B6F776E20746F2074686973205661756C7400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1128 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP4 SLOAD DUP5 SWAP2 SWAP1 DUP2 LT PUSH2 0x1074 JUMPI PUSH2 0x1074 PUSH2 0x15B7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x10C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105B1C9958591E48115B98589B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SLOAD DUP5 SWAP2 DUP5 SWAP2 DUP2 LT PUSH2 0x10F5 JUMPI PUSH2 0x10F5 PUSH2 0x15B7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP5 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 DUP5 ADD DUP7 SSTORE DUP6 DUP3 MSTORE SWAP1 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x15180 PUSH1 0x3 SLOAD PUSH2 0x117B SWAP2 SWAP1 PUSH2 0x1582 JUMP JUMPDEST PUSH2 0x1185 SWAP1 TIMESTAMP PUSH2 0x156A JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7AA982A4520D96ED188D1997CB8420198DBFD349076824ED797A3FD39A7728A1 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A65726F2041646472657373204E6F7420416C6C6F7765640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9A2 JUMP JUMPDEST PUSH2 0x1212 DUP2 PUSH2 0x11B3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x126F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x5 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0x1257 JUMPI PUSH2 0x1257 PUSH2 0x15B7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5265636569766572206973206E6F74204F776E6572206F722053454741000000 DUP2 MSTORE POP SWAP1 PUSH2 0x12C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A2 SWAP2 SWAP1 PUSH2 0x1515 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x131C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1340 SWAP2 SWAP1 PUSH2 0x14AF JUMP JUMPDEST LT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0x496E73756666696369656E742042616C616E6365 PUSH1 0x60 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x1165 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A2 SWAP2 SWAP1 PUSH2 0x1515 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x139F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x13AA DUP2 PUSH2 0x15CD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x13AA DUP2 PUSH2 0x15CD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x13EC DUP2 PUSH2 0x15CD JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x140D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1418 DUP2 PUSH2 0x15CD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1428 DUP2 PUSH2 0x15CD JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1453 DUP2 PUSH2 0x15CD JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1463 DUP2 PUSH2 0x15CD JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x13AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1509 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x14E4 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1542 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1526 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1554 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x157D JUMPI PUSH2 0x157D PUSH2 0x15A1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x159C JUMPI PUSH2 0x159C PUSH2 0x15A1 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCC6 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 SWAP10 SLOAD 0xE3 DUP7 0xE7 0xCF 0xD8 PUSH7 0x1F7492A88815C2 PUSH12 0x6C0E036DA4DC4A073D0596DE CODECOPY 0xDE 0xAE PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        200,
        9205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "LT",
      "path": "2"
    },
    "9": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF6"
    },
    "12": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "SHR",
      "path": "2"
    },
    "19": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "20": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x664365AA"
    },
    "25": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "GT",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A"
    },
    "29": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "30": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "31": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xAB518E6E"
    },
    "36": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "GT",
      "path": "2"
    },
    "37": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x59"
    },
    "40": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "41": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "42": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xAB518E6E"
    },
    "47": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "EQ",
      "path": "2"
    },
    "48": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x357"
    },
    "51": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "52": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "53": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB7DACBF1"
    },
    "58": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "EQ",
      "path": "2"
    },
    "59": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36C"
    },
    "62": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "63": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "64": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD9B83C71"
    },
    "69": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "EQ",
      "path": "2"
    },
    "70": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38C"
    },
    "73": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "74": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "75": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE5001D7F"
    },
    "80": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "EQ",
      "path": "2"
    },
    "81": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3AC"
    },
    "84": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "85": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x136"
    },
    "88": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMP",
      "path": "2"
    },
    "89": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "90": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "91": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x664365AA"
    },
    "96": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "EQ",
      "path": "2"
    },
    "97": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AA"
    },
    "100": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "101": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "102": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x89AB6FB4"
    },
    "107": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "EQ",
      "path": "2"
    },
    "108": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CA"
    },
    "111": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "112": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "113": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x91F21DA5"
    },
    "118": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "EQ",
      "path": "2"
    },
    "119": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30E"
    },
    "122": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "123": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "124": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xAAAEBA9E"
    },
    "129": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "EQ",
      "path": "2"
    },
    "130": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x342"
    },
    "133": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "134": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x136"
    },
    "137": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMP",
      "path": "2"
    },
    "138": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "139": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "140": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1F132E33"
    },
    "145": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "GT",
      "path": "2"
    },
    "146": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC6"
    },
    "149": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "150": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "151": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1F132E33"
    },
    "156": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "EQ",
      "path": "2"
    },
    "157": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x216"
    },
    "160": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "161": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "162": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3709D6BA"
    },
    "167": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "EQ",
      "path": "2"
    },
    "168": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x236"
    },
    "171": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "172": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "173": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3D0DDF84"
    },
    "178": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "EQ",
      "path": "2"
    },
    "179": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26A"
    },
    "182": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "183": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "184": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4011F00F"
    },
    "189": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "EQ",
      "path": "2"
    },
    "190": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28A"
    },
    "193": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "194": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x136"
    },
    "197": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMP",
      "path": "2"
    },
    "198": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "199": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "200": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0x219C17"
    },
    "204": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "EQ",
      "path": "2"
    },
    "205": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x173"
    },
    "208": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "209": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "210": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4ABFE7C"
    },
    "215": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "EQ",
      "path": "2"
    },
    "216": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x193"
    },
    "219": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "220": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "221": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDC38D51"
    },
    "226": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "EQ",
      "path": "2"
    },
    "227": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BE"
    },
    "230": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "231": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "232": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x18024BEC"
    },
    "237": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "EQ",
      "path": "2"
    },
    "238": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F6"
    },
    "241": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "242": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x136"
    },
    "245": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMP",
      "path": "2"
    },
    "246": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "247": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "248": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x136"
    },
    "251": {
      "fn": null,
      "offset": [
        200,
        9205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "252": {
      "fn": "Vault.<receive>",
      "offset": [
        3480,
        3511
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x40"
    },
    "254": {
      "fn": "Vault.<receive>",
      "offset": [
        3480,
        3511
      ],
      "op": "DUP1",
      "path": "2"
    },
    "255": {
      "fn": "Vault.<receive>",
      "offset": [
        3480,
        3511
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "256": {
      "fn": "Vault.<receive>",
      "offset": [
        3489,
        3499
      ],
      "op": "CALLER",
      "path": "2"
    },
    "257": {
      "op": "DUP2"
    },
    "258": {
      "op": "MSTORE"
    },
    "259": {
      "fn": "Vault.<receive>",
      "offset": [
        3501,
        3510
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "260": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "262": {
      "op": "DUP3"
    },
    "263": {
      "op": "ADD"
    },
    "264": {
      "op": "MSTORE"
    },
    "265": {
      "fn": "Vault.<receive>",
      "offset": [
        3480,
        3511
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874"
    },
    "298": {
      "fn": "Vault.<receive>",
      "offset": [
        3480,
        3511
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "299": {
      "op": "ADD"
    },
    "300": {
      "fn": "Vault.<receive>",
      "offset": [
        3480,
        3511
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "301": {
      "fn": "Vault.<receive>",
      "offset": [
        3480,
        3511
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "303": {
      "fn": "Vault.<receive>",
      "offset": [
        3480,
        3511
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "304": {
      "fn": "Vault.<receive>",
      "offset": [
        3480,
        3511
      ],
      "op": "DUP1",
      "path": "2"
    },
    "305": {
      "fn": "Vault.<receive>",
      "offset": [
        3480,
        3511
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "306": {
      "fn": "Vault.<receive>",
      "offset": [
        3480,
        3511
      ],
      "op": "SUB",
      "path": "2"
    },
    "307": {
      "fn": "Vault.<receive>",
      "offset": [
        3480,
        3511
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "308": {
      "fn": "Vault.<receive>",
      "offset": [
        3480,
        3511
      ],
      "op": "LOG1",
      "path": "2"
    },
    "309": {
      "offset": [
        200,
        9205
      ],
      "op": "STOP",
      "path": "2"
    },
    "310": {
      "fn": "Vault.<receive>",
      "offset": [
        200,
        9205
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "311": {
      "fn": "Vault.<fallback>",
      "offset": [
        3574,
        3583
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "312": {
      "branch": 56,
      "fn": "Vault.<fallback>",
      "offset": [
        3574,
        3587
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "313": {
      "fn": "Vault.<fallback>",
      "offset": [
        3570,
        3653
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x171"
    },
    "316": {
      "branch": 56,
      "fn": "Vault.<fallback>",
      "offset": [
        3570,
        3653
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "317": {
      "fn": "Vault.<fallback>",
      "offset": [
        3610,
        3641
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 1,
      "value": "0x40"
    },
    "319": {
      "fn": "Vault.<fallback>",
      "offset": [
        3610,
        3641
      ],
      "op": "DUP1",
      "path": "2"
    },
    "320": {
      "fn": "Vault.<fallback>",
      "offset": [
        3610,
        3641
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "321": {
      "fn": "Vault.<fallback>",
      "offset": [
        3619,
        3629
      ],
      "op": "CALLER",
      "path": "2"
    },
    "322": {
      "op": "DUP2"
    },
    "323": {
      "op": "MSTORE"
    },
    "324": {
      "fn": "Vault.<fallback>",
      "offset": [
        3631,
        3640
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "327": {
      "op": "DUP3"
    },
    "328": {
      "op": "ADD"
    },
    "329": {
      "op": "MSTORE"
    },
    "330": {
      "fn": "Vault.<fallback>",
      "offset": [
        3610,
        3641
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874"
    },
    "363": {
      "fn": "Vault.<fallback>",
      "offset": [
        3610,
        3641
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "364": {
      "op": "ADD"
    },
    "365": {
      "fn": "Vault.<fallback>",
      "offset": [
        3610,
        3641
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12C"
    },
    "368": {
      "op": "JUMP"
    },
    "369": {
      "fn": "Vault.<fallback>",
      "offset": [
        3570,
        3653
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "370": {
      "offset": [
        200,
        9205
      ],
      "op": "STOP",
      "path": "2"
    },
    "371": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7618,
        7811
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "372": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7618,
        7811
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "373": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7618,
        7811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "374": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7618,
        7811
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "375": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7618,
        7811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17F"
    },
    "378": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7618,
        7811
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "379": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7618,
        7811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "381": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7618,
        7811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "382": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7618,
        7811
      ],
      "op": "REVERT",
      "path": "2"
    },
    "383": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7618,
        7811
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "384": {
      "op": "POP"
    },
    "385": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7618,
        7811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x171"
    },
    "388": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7618,
        7811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18E"
    },
    "391": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7618,
        7811
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "392": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7618,
        7811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "394": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7618,
        7811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13CE"
    },
    "397": {
      "fn": "Vault.RecallFromSega",
      "jump": "i",
      "offset": [
        7618,
        7811
      ],
      "op": "JUMP",
      "path": "2"
    },
    "398": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7618,
        7811
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "399": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7618,
        7811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CC"
    },
    "402": {
      "fn": "Vault.RecallFromSega",
      "jump": "i",
      "offset": [
        7618,
        7811
      ],
      "op": "JUMP",
      "path": "2"
    },
    "403": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "404": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "405": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "DUP1",
      "path": "2"
    },
    "406": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "407": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19F"
    },
    "410": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "411": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "413": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "DUP1",
      "path": "2"
    },
    "414": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "REVERT",
      "path": "2"
    },
    "415": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "416": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "POP",
      "path": "2"
    },
    "417": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A8"
    },
    "420": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x47F"
    },
    "423": {
      "fn": "Vault.viewSegaList",
      "jump": "i",
      "offset": [
        9103,
        9200
      ],
      "op": "JUMP",
      "path": "2"
    },
    "424": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "425": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "427": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "428": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "431": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "432": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "433": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14C8"
    },
    "436": {
      "fn": "Vault.viewSegaList",
      "jump": "i",
      "offset": [
        9103,
        9200
      ],
      "op": "JUMP",
      "path": "2"
    },
    "437": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "438": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "440": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "441": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "DUP1",
      "path": "2"
    },
    "442": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "443": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "SUB",
      "path": "2"
    },
    "444": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "445": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "RETURN",
      "path": "2"
    },
    "446": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6492,
        6842
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "447": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6492,
        6842
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "448": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6492,
        6842
      ],
      "op": "DUP1",
      "path": "2"
    },
    "449": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6492,
        6842
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "450": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6492,
        6842
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CA"
    },
    "453": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6492,
        6842
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "454": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6492,
        6842
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "456": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6492,
        6842
      ],
      "op": "DUP1",
      "path": "2"
    },
    "457": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6492,
        6842
      ],
      "op": "REVERT",
      "path": "2"
    },
    "458": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6492,
        6842
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "459": {
      "op": "POP"
    },
    "460": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6492,
        6842
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DE"
    },
    "463": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6492,
        6842
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D9"
    },
    "466": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6492,
        6842
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "467": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6492,
        6842
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "469": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6492,
        6842
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13CE"
    },
    "472": {
      "fn": "Vault.createCustomSega",
      "jump": "i",
      "offset": [
        6492,
        6842
      ],
      "op": "JUMP",
      "path": "2"
    },
    "473": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6492,
        6842
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "474": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6492,
        6842
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E1"
    },
    "477": {
      "fn": "Vault.createCustomSega",
      "jump": "i",
      "offset": [
        6492,
        6842
      ],
      "op": "JUMP",
      "path": "2"
    },
    "478": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6492,
        6842
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "479": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6492,
        6842
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "481": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6492,
        6842
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "486": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "488": {
      "op": "SHL"
    },
    "489": {
      "op": "SUB"
    },
    "490": {
      "op": "SWAP1"
    },
    "491": {
      "op": "SWAP2"
    },
    "492": {
      "op": "AND"
    },
    "493": {
      "op": "DUP2"
    },
    "494": {
      "op": "MSTORE"
    },
    "495": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "497": {
      "op": "ADD"
    },
    "498": {
      "op": "PUSH2",
      "value": "0x1B5"
    },
    "501": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6492,
        6842
      ],
      "op": "JUMP",
      "path": "2"
    },
    "502": {
      "op": "JUMPDEST"
    },
    "503": {
      "fn": "Vault.changeTrader",
      "offset": [
        7304,
        7498
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "504": {
      "fn": "Vault.changeTrader",
      "offset": [
        7304,
        7498
      ],
      "op": "DUP1",
      "path": "2"
    },
    "505": {
      "fn": "Vault.changeTrader",
      "offset": [
        7304,
        7498
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "506": {
      "fn": "Vault.changeTrader",
      "offset": [
        7304,
        7498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x202"
    },
    "509": {
      "fn": "Vault.changeTrader",
      "offset": [
        7304,
        7498
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "510": {
      "fn": "Vault.changeTrader",
      "offset": [
        7304,
        7498
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "512": {
      "fn": "Vault.changeTrader",
      "offset": [
        7304,
        7498
      ],
      "op": "DUP1",
      "path": "2"
    },
    "513": {
      "fn": "Vault.changeTrader",
      "offset": [
        7304,
        7498
      ],
      "op": "REVERT",
      "path": "2"
    },
    "514": {
      "fn": "Vault.changeTrader",
      "offset": [
        7304,
        7498
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "515": {
      "fn": "Vault.changeTrader",
      "offset": [
        7304,
        7498
      ],
      "op": "POP",
      "path": "2"
    },
    "516": {
      "op": "PUSH2",
      "value": "0x171"
    },
    "519": {
      "fn": "Vault.changeTrader",
      "offset": [
        7304,
        7498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x211"
    },
    "522": {
      "fn": "Vault.changeTrader",
      "offset": [
        7304,
        7498
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "523": {
      "fn": "Vault.changeTrader",
      "offset": [
        7304,
        7498
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "525": {
      "fn": "Vault.changeTrader",
      "offset": [
        7304,
        7498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13FA"
    },
    "528": {
      "fn": "Vault.changeTrader",
      "offset": [
        7304,
        7498
      ],
      "op": "JUMP",
      "path": "2"
    },
    "529": {
      "fn": "Vault.changeTrader",
      "jump": "i",
      "offset": [
        7304,
        7498
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "530": {
      "fn": "Vault.changeTrader",
      "offset": [
        7304,
        7498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x66E"
    },
    "533": {
      "fn": "Vault.changeTrader",
      "offset": [
        7304,
        7498
      ],
      "op": "JUMP",
      "path": "2"
    },
    "534": {
      "fn": "Vault.changeTrader",
      "jump": "i",
      "offset": [
        7304,
        7498
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "535": {
      "fn": "Vault.pauseSega",
      "offset": [
        6992,
        7139
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "536": {
      "fn": "Vault.pauseSega",
      "offset": [
        6992,
        7139
      ],
      "op": "DUP1",
      "path": "2"
    },
    "537": {
      "fn": "Vault.pauseSega",
      "offset": [
        6992,
        7139
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "538": {
      "fn": "Vault.pauseSega",
      "offset": [
        6992,
        7139
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x222"
    },
    "541": {
      "fn": "Vault.pauseSega",
      "offset": [
        6992,
        7139
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "542": {
      "fn": "Vault.pauseSega",
      "offset": [
        6992,
        7139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "544": {
      "fn": "Vault.pauseSega",
      "offset": [
        6992,
        7139
      ],
      "op": "DUP1",
      "path": "2"
    },
    "545": {
      "fn": "Vault.pauseSega",
      "offset": [
        6992,
        7139
      ],
      "op": "REVERT",
      "path": "2"
    },
    "546": {
      "fn": "Vault.pauseSega",
      "offset": [
        6992,
        7139
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "547": {
      "fn": "Vault.pauseSega",
      "offset": [
        6992,
        7139
      ],
      "op": "POP",
      "path": "2"
    },
    "548": {
      "op": "PUSH2",
      "value": "0x171"
    },
    "551": {
      "fn": "Vault.pauseSega",
      "offset": [
        6992,
        7139
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x231"
    },
    "554": {
      "fn": "Vault.pauseSega",
      "offset": [
        6992,
        7139
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "555": {
      "fn": "Vault.pauseSega",
      "offset": [
        6992,
        7139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "557": {
      "fn": "Vault.pauseSega",
      "offset": [
        6992,
        7139
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x138D"
    },
    "560": {
      "fn": "Vault.pauseSega",
      "offset": [
        6992,
        7139
      ],
      "op": "JUMP",
      "path": "2"
    },
    "561": {
      "fn": "Vault.pauseSega",
      "jump": "i",
      "offset": [
        6992,
        7139
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "562": {
      "fn": "Vault.pauseSega",
      "offset": [
        6992,
        7139
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x720"
    },
    "565": {
      "fn": "Vault.pauseSega",
      "offset": [
        6992,
        7139
      ],
      "op": "JUMP",
      "path": "2"
    },
    "566": {
      "fn": "Vault.pauseSega",
      "jump": "i",
      "offset": [
        6992,
        7139
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "567": {
      "offset": [
        271,
        299
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "568": {
      "fn": "Vault.pauseSega",
      "offset": [
        271,
        299
      ],
      "op": "DUP1",
      "path": "2"
    },
    "569": {
      "fn": "Vault.pauseSega",
      "offset": [
        271,
        299
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "570": {
      "fn": "Vault.pauseSega",
      "offset": [
        271,
        299
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x242"
    },
    "573": {
      "fn": "Vault.pauseSega",
      "offset": [
        271,
        299
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "574": {
      "fn": "Vault.pauseSega",
      "offset": [
        271,
        299
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "576": {
      "fn": "Vault.pauseSega",
      "offset": [
        271,
        299
      ],
      "op": "DUP1",
      "path": "2"
    },
    "577": {
      "fn": "Vault.pauseSega",
      "offset": [
        271,
        299
      ],
      "op": "REVERT",
      "path": "2"
    },
    "578": {
      "fn": "Vault.pauseSega",
      "offset": [
        271,
        299
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "579": {
      "fn": "Vault.pauseSega",
      "offset": [
        271,
        299
      ],
      "op": "POP",
      "path": "2"
    },
    "580": {
      "fn": "Vault.pauseSega",
      "offset": [
        271,
        299
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DE"
    },
    "583": {
      "fn": "Vault.pauseSega",
      "offset": [
        271,
        299
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "616": {
      "fn": "Vault.pauseSega",
      "offset": [
        271,
        299
      ],
      "op": "DUP2",
      "path": "2"
    },
    "617": {
      "fn": "Vault.pauseSega",
      "offset": [
        271,
        299
      ],
      "op": "JUMP",
      "path": "2"
    },
    "618": {
      "fn": "Vault.pauseSega",
      "offset": [
        271,
        299
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "619": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4116,
        4292
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "620": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4116,
        4292
      ],
      "op": "DUP1",
      "path": "2"
    },
    "621": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4116,
        4292
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "622": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4116,
        4292
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x276"
    },
    "625": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4116,
        4292
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "626": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4116,
        4292
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "628": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4116,
        4292
      ],
      "op": "DUP1",
      "path": "2"
    },
    "629": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4116,
        4292
      ],
      "op": "REVERT",
      "path": "2"
    },
    "630": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4116,
        4292
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "631": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4116,
        4292
      ],
      "op": "POP",
      "path": "2"
    },
    "632": {
      "op": "PUSH2",
      "value": "0x171"
    },
    "635": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4116,
        4292
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x285"
    },
    "638": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4116,
        4292
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "639": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4116,
        4292
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "641": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4116,
        4292
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1496"
    },
    "644": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4116,
        4292
      ],
      "op": "JUMP",
      "path": "2"
    },
    "645": {
      "fn": "Vault.setUnlockPeriod",
      "jump": "i",
      "offset": [
        4116,
        4292
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "646": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4116,
        4292
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7C0"
    },
    "649": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4116,
        4292
      ],
      "op": "JUMP",
      "path": "2"
    },
    "650": {
      "fn": "Vault.setUnlockPeriod",
      "jump": "i",
      "offset": [
        4116,
        4292
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "651": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7145,
        7296
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "652": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7145,
        7296
      ],
      "op": "DUP1",
      "path": "2"
    },
    "653": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7145,
        7296
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "654": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7145,
        7296
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x296"
    },
    "657": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7145,
        7296
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "658": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7145,
        7296
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "660": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7145,
        7296
      ],
      "op": "DUP1",
      "path": "2"
    },
    "661": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7145,
        7296
      ],
      "op": "REVERT",
      "path": "2"
    },
    "662": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7145,
        7296
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "663": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7145,
        7296
      ],
      "op": "POP",
      "path": "2"
    },
    "664": {
      "op": "PUSH2",
      "value": "0x171"
    },
    "667": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7145,
        7296
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A5"
    },
    "670": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7145,
        7296
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "671": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7145,
        7296
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "673": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7145,
        7296
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x138D"
    },
    "676": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7145,
        7296
      ],
      "op": "JUMP",
      "path": "2"
    },
    "677": {
      "fn": "Vault.unpauseSega",
      "jump": "i",
      "offset": [
        7145,
        7296
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "678": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7145,
        7296
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x80C"
    },
    "681": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7145,
        7296
      ],
      "op": "JUMP",
      "path": "2"
    },
    "682": {
      "fn": "Vault.unpauseSega",
      "jump": "i",
      "offset": [
        7145,
        7296
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "683": {
      "fn": "Vault.sendAssets",
      "offset": [
        5470,
        5854
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "684": {
      "fn": "Vault.sendAssets",
      "offset": [
        5470,
        5854
      ],
      "op": "DUP1",
      "path": "2"
    },
    "685": {
      "fn": "Vault.sendAssets",
      "offset": [
        5470,
        5854
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "686": {
      "fn": "Vault.sendAssets",
      "offset": [
        5470,
        5854
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B6"
    },
    "689": {
      "fn": "Vault.sendAssets",
      "offset": [
        5470,
        5854
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "690": {
      "fn": "Vault.sendAssets",
      "offset": [
        5470,
        5854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "692": {
      "fn": "Vault.sendAssets",
      "offset": [
        5470,
        5854
      ],
      "op": "DUP1",
      "path": "2"
    },
    "693": {
      "fn": "Vault.sendAssets",
      "offset": [
        5470,
        5854
      ],
      "op": "REVERT",
      "path": "2"
    },
    "694": {
      "fn": "Vault.sendAssets",
      "offset": [
        5470,
        5854
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "695": {
      "fn": "Vault.sendAssets",
      "offset": [
        5470,
        5854
      ],
      "op": "POP",
      "path": "2"
    },
    "696": {
      "op": "PUSH2",
      "value": "0x171"
    },
    "699": {
      "fn": "Vault.sendAssets",
      "offset": [
        5470,
        5854
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C5"
    },
    "702": {
      "fn": "Vault.sendAssets",
      "offset": [
        5470,
        5854
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "703": {
      "fn": "Vault.sendAssets",
      "offset": [
        5470,
        5854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "705": {
      "fn": "Vault.sendAssets",
      "offset": [
        5470,
        5854
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1433"
    },
    "708": {
      "fn": "Vault.sendAssets",
      "offset": [
        5470,
        5854
      ],
      "op": "JUMP",
      "path": "2"
    },
    "709": {
      "fn": "Vault.sendAssets",
      "jump": "i",
      "offset": [
        5470,
        5854
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "710": {
      "fn": "Vault.sendAssets",
      "offset": [
        5470,
        5854
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8AB"
    },
    "713": {
      "fn": "Vault.sendAssets",
      "offset": [
        5470,
        5854
      ],
      "op": "JUMP",
      "path": "2"
    },
    "714": {
      "fn": "Vault.sendAssets",
      "jump": "i",
      "offset": [
        5470,
        5854
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "715": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        8890,
        9047
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "716": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        8890,
        9047
      ],
      "op": "DUP1",
      "path": "2"
    },
    "717": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        8890,
        9047
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "718": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        8890,
        9047
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D6"
    },
    "721": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        8890,
        9047
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "722": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        8890,
        9047
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "724": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        8890,
        9047
      ],
      "op": "DUP1",
      "path": "2"
    },
    "725": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        8890,
        9047
      ],
      "op": "REVERT",
      "path": "2"
    },
    "726": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        8890,
        9047
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "727": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        8890,
        9047
      ],
      "op": "POP",
      "path": "2"
    },
    "728": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "730": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        8938,
        8945
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "731": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        8993,
        8998
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 2,
      "value": "0x1"
    },
    "733": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        8993,
        8998
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "734": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        9000,
        9013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "736": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        9015,
        9026
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "737": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        9015,
        9026
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "739": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        9028,
        9038
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "740": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        9028,
        9038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "742": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        8890,
        9047
      ],
      "op": "DUP1",
      "path": "2"
    },
    "743": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        8890,
        9047
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "744": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        8890,
        9047
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "748": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "750": {
      "op": "SHL"
    },
    "751": {
      "op": "SUB"
    },
    "752": {
      "op": "SWAP6"
    },
    "753": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        8993,
        8998
      ],
      "op": "DUP7",
      "path": "2"
    },
    "754": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        8993,
        8998
      ],
      "op": "AND",
      "path": "2"
    },
    "755": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        8993,
        8998
      ],
      "op": "DUP2",
      "path": "2"
    },
    "756": {
      "op": "MSTORE"
    },
    "757": {
      "op": "SWAP5"
    },
    "758": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        9000,
        9013
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "759": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        9000,
        9013
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "760": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        9000,
        9013
      ],
      "op": "AND",
      "path": "2"
    },
    "761": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        9000,
        9013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "763": {
      "op": "DUP6"
    },
    "764": {
      "op": "ADD"
    },
    "765": {
      "op": "MSTORE"
    },
    "766": {
      "op": "SWAP2"
    },
    "767": {
      "op": "DUP4"
    },
    "768": {
      "op": "ADD"
    },
    "769": {
      "op": "MSTORE"
    },
    "770": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "772": {
      "op": "DUP3"
    },
    "773": {
      "op": "ADD"
    },
    "774": {
      "op": "MSTORE"
    },
    "775": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "777": {
      "op": "ADD"
    },
    "778": {
      "op": "PUSH2",
      "value": "0x1B5"
    },
    "781": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        8890,
        9047
      ],
      "op": "JUMP",
      "path": "2"
    },
    "782": {
      "op": "JUMPDEST"
    },
    "783": {
      "offset": [
        228,
        264
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "784": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        228,
        264
      ],
      "op": "DUP1",
      "path": "2"
    },
    "785": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        228,
        264
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "786": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        228,
        264
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31A"
    },
    "789": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        228,
        264
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "790": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        228,
        264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "792": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        228,
        264
      ],
      "op": "DUP1",
      "path": "2"
    },
    "793": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        228,
        264
      ],
      "op": "REVERT",
      "path": "2"
    },
    "794": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        228,
        264
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "795": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        228,
        264
      ],
      "op": "POP",
      "path": "2"
    },
    "796": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        228,
        264
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DE"
    },
    "799": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        228,
        264
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "832": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        228,
        264
      ],
      "op": "DUP2",
      "path": "2"
    },
    "833": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        228,
        264
      ],
      "op": "JUMP",
      "path": "2"
    },
    "834": {
      "fn": "Vault.getRecoveryInfo",
      "offset": [
        228,
        264
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "835": {
      "fn": "Vault.createNewSega",
      "offset": [
        6141,
        6444
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "836": {
      "fn": "Vault.createNewSega",
      "offset": [
        6141,
        6444
      ],
      "op": "DUP1",
      "path": "2"
    },
    "837": {
      "fn": "Vault.createNewSega",
      "offset": [
        6141,
        6444
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "838": {
      "fn": "Vault.createNewSega",
      "offset": [
        6141,
        6444
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34E"
    },
    "841": {
      "fn": "Vault.createNewSega",
      "offset": [
        6141,
        6444
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "842": {
      "fn": "Vault.createNewSega",
      "offset": [
        6141,
        6444
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "844": {
      "fn": "Vault.createNewSega",
      "offset": [
        6141,
        6444
      ],
      "op": "DUP1",
      "path": "2"
    },
    "845": {
      "fn": "Vault.createNewSega",
      "offset": [
        6141,
        6444
      ],
      "op": "REVERT",
      "path": "2"
    },
    "846": {
      "fn": "Vault.createNewSega",
      "offset": [
        6141,
        6444
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "847": {
      "fn": "Vault.createNewSega",
      "offset": [
        6141,
        6444
      ],
      "op": "POP",
      "path": "2"
    },
    "848": {
      "fn": "Vault.createNewSega",
      "offset": [
        6141,
        6444
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DE"
    },
    "851": {
      "fn": "Vault.createNewSega",
      "offset": [
        6141,
        6444
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA00"
    },
    "854": {
      "fn": "Vault.createNewSega",
      "offset": [
        6141,
        6444
      ],
      "op": "JUMP",
      "path": "2"
    },
    "855": {
      "fn": "Vault.createNewSega",
      "jump": "i",
      "offset": [
        6141,
        6444
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "856": {
      "fn": "Vault.claimVault",
      "offset": [
        4357,
        4679
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "857": {
      "fn": "Vault.claimVault",
      "offset": [
        4357,
        4679
      ],
      "op": "DUP1",
      "path": "2"
    },
    "858": {
      "fn": "Vault.claimVault",
      "offset": [
        4357,
        4679
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "859": {
      "fn": "Vault.claimVault",
      "offset": [
        4357,
        4679
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x363"
    },
    "862": {
      "fn": "Vault.claimVault",
      "offset": [
        4357,
        4679
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "863": {
      "fn": "Vault.claimVault",
      "offset": [
        4357,
        4679
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "865": {
      "fn": "Vault.claimVault",
      "offset": [
        4357,
        4679
      ],
      "op": "DUP1",
      "path": "2"
    },
    "866": {
      "fn": "Vault.claimVault",
      "offset": [
        4357,
        4679
      ],
      "op": "REVERT",
      "path": "2"
    },
    "867": {
      "fn": "Vault.claimVault",
      "offset": [
        4357,
        4679
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "868": {
      "fn": "Vault.claimVault",
      "offset": [
        4357,
        4679
      ],
      "op": "POP",
      "path": "2"
    },
    "869": {
      "fn": "Vault.claimVault",
      "offset": [
        4357,
        4679
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x171"
    },
    "872": {
      "fn": "Vault.claimVault",
      "offset": [
        4357,
        4679
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC5"
    },
    "875": {
      "fn": "Vault.claimVault",
      "offset": [
        4357,
        4679
      ],
      "op": "JUMP",
      "path": "2"
    },
    "876": {
      "fn": "Vault.claimVault",
      "jump": "i",
      "offset": [
        4357,
        4679
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "877": {
      "fn": "Vault.setBackup",
      "offset": [
        3872,
        4031
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "878": {
      "fn": "Vault.setBackup",
      "offset": [
        3872,
        4031
      ],
      "op": "DUP1",
      "path": "2"
    },
    "879": {
      "fn": "Vault.setBackup",
      "offset": [
        3872,
        4031
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "880": {
      "fn": "Vault.setBackup",
      "offset": [
        3872,
        4031
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x378"
    },
    "883": {
      "fn": "Vault.setBackup",
      "offset": [
        3872,
        4031
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "884": {
      "fn": "Vault.setBackup",
      "offset": [
        3872,
        4031
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "886": {
      "fn": "Vault.setBackup",
      "offset": [
        3872,
        4031
      ],
      "op": "DUP1",
      "path": "2"
    },
    "887": {
      "fn": "Vault.setBackup",
      "offset": [
        3872,
        4031
      ],
      "op": "REVERT",
      "path": "2"
    },
    "888": {
      "fn": "Vault.setBackup",
      "offset": [
        3872,
        4031
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "889": {
      "fn": "Vault.setBackup",
      "offset": [
        3872,
        4031
      ],
      "op": "POP",
      "path": "2"
    },
    "890": {
      "op": "PUSH2",
      "value": "0x171"
    },
    "893": {
      "fn": "Vault.setBackup",
      "offset": [
        3872,
        4031
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x387"
    },
    "896": {
      "fn": "Vault.setBackup",
      "offset": [
        3872,
        4031
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "897": {
      "fn": "Vault.setBackup",
      "offset": [
        3872,
        4031
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "899": {
      "fn": "Vault.setBackup",
      "offset": [
        3872,
        4031
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x138D"
    },
    "902": {
      "fn": "Vault.setBackup",
      "offset": [
        3872,
        4031
      ],
      "op": "JUMP",
      "path": "2"
    },
    "903": {
      "fn": "Vault.setBackup",
      "jump": "i",
      "offset": [
        3872,
        4031
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "904": {
      "fn": "Vault.setBackup",
      "offset": [
        3872,
        4031
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC9"
    },
    "907": {
      "fn": "Vault.setBackup",
      "offset": [
        3872,
        4031
      ],
      "op": "JUMP",
      "path": "2"
    },
    "908": {
      "fn": "Vault.setBackup",
      "jump": "i",
      "offset": [
        3872,
        4031
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "909": {
      "fn": "Vault.sendAssets",
      "offset": [
        5053,
        5393
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "910": {
      "fn": "Vault.sendAssets",
      "offset": [
        5053,
        5393
      ],
      "op": "DUP1",
      "path": "2"
    },
    "911": {
      "fn": "Vault.sendAssets",
      "offset": [
        5053,
        5393
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "912": {
      "fn": "Vault.sendAssets",
      "offset": [
        5053,
        5393
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x398"
    },
    "915": {
      "fn": "Vault.sendAssets",
      "offset": [
        5053,
        5393
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "916": {
      "fn": "Vault.sendAssets",
      "offset": [
        5053,
        5393
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "918": {
      "fn": "Vault.sendAssets",
      "offset": [
        5053,
        5393
      ],
      "op": "DUP1",
      "path": "2"
    },
    "919": {
      "fn": "Vault.sendAssets",
      "offset": [
        5053,
        5393
      ],
      "op": "REVERT",
      "path": "2"
    },
    "920": {
      "fn": "Vault.sendAssets",
      "offset": [
        5053,
        5393
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "921": {
      "fn": "Vault.sendAssets",
      "offset": [
        5053,
        5393
      ],
      "op": "POP",
      "path": "2"
    },
    "922": {
      "op": "PUSH2",
      "value": "0x171"
    },
    "925": {
      "fn": "Vault.sendAssets",
      "offset": [
        5053,
        5393
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A7"
    },
    "928": {
      "fn": "Vault.sendAssets",
      "offset": [
        5053,
        5393
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "929": {
      "fn": "Vault.sendAssets",
      "offset": [
        5053,
        5393
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "931": {
      "fn": "Vault.sendAssets",
      "offset": [
        5053,
        5393
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13CE"
    },
    "934": {
      "fn": "Vault.sendAssets",
      "offset": [
        5053,
        5393
      ],
      "op": "JUMP",
      "path": "2"
    },
    "935": {
      "fn": "Vault.sendAssets",
      "jump": "i",
      "offset": [
        5053,
        5393
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "936": {
      "fn": "Vault.sendAssets",
      "offset": [
        5053,
        5393
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD28"
    },
    "939": {
      "fn": "Vault.sendAssets",
      "offset": [
        5053,
        5393
      ],
      "op": "JUMP",
      "path": "2"
    },
    "940": {
      "fn": "Vault.sendAssets",
      "jump": "i",
      "offset": [
        5053,
        5393
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "941": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7823,
        8063
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "942": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7823,
        8063
      ],
      "op": "DUP1",
      "path": "2"
    },
    "943": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7823,
        8063
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "944": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7823,
        8063
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B8"
    },
    "947": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7823,
        8063
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "948": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7823,
        8063
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "950": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7823,
        8063
      ],
      "op": "DUP1",
      "path": "2"
    },
    "951": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7823,
        8063
      ],
      "op": "REVERT",
      "path": "2"
    },
    "952": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7823,
        8063
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "953": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7823,
        8063
      ],
      "op": "POP",
      "path": "2"
    },
    "954": {
      "op": "PUSH2",
      "value": "0x171"
    },
    "957": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7823,
        8063
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C7"
    },
    "960": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7823,
        8063
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "961": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7823,
        8063
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "963": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7823,
        8063
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1433"
    },
    "966": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7823,
        8063
      ],
      "op": "JUMP",
      "path": "2"
    },
    "967": {
      "fn": "Vault.RecallFromSega",
      "jump": "i",
      "offset": [
        7823,
        8063
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "968": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7823,
        8063
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE68"
    },
    "971": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7823,
        8063
      ],
      "op": "JUMP",
      "path": "2"
    },
    "972": {
      "fn": "Vault.RecallFromSega",
      "jump": "i",
      "offset": [
        7823,
        8063
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "973": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7618,
        7811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D4"
    },
    "976": {
      "offset": [
        1608,
        1618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF38"
    },
    "979": {
      "offset": [
        1608,
        1616
      ],
      "op": "JUMP",
      "path": "2"
    },
    "980": {
      "jump": "i",
      "offset": [
        1608,
        1618
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "981": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        1608,
        1618
      ],
      "op": "DUP2",
      "path": "2"
    },
    "982": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7696,
        7701
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DE"
    },
    "985": {
      "offset": [
        1688,
        1702
      ],
      "op": "DUP2",
      "path": "2"
    },
    "986": {
      "offset": [
        1696,
        1701
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF99"
    },
    "989": {
      "offset": [
        1688,
        1695
      ],
      "op": "JUMP",
      "path": "2"
    },
    "990": {
      "jump": "i",
      "offset": [
        1688,
        1702
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "991": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        1688,
        1702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "993": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "MLOAD",
      "path": "2",
      "statement": 3
    },
    "994": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x17D85BBF"
    },
    "999": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1001": {
      "op": "SHL"
    },
    "1002": {
      "op": "DUP2"
    },
    "1003": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1004": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1006": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1007": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "ADD",
      "path": "2"
    },
    "1008": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1009": {
      "op": "SWAP1"
    },
    "1010": {
      "op": "MSTORE"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1017": {
      "op": "SHL"
    },
    "1018": {
      "op": "SUB"
    },
    "1019": {
      "op": "DUP5"
    },
    "1020": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7740
      ],
      "op": "AND",
      "path": "2"
    },
    "1021": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7740
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1022": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7740
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x2FB0B77E"
    },
    "1027": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7740
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1028": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7740
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "1030": {
      "op": "ADD"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1033": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1035": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1036": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1037": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1038": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "SUB",
      "path": "2"
    },
    "1039": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1040": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1042": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1043": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1044": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "1045": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1046": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1047": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1048": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x420"
    },
    "1051": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1052": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1054": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1055": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1056": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1057": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "POP",
      "path": "2"
    },
    "1058": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "GAS",
      "path": "2"
    },
    "1059": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "CALL",
      "path": "2"
    },
    "1060": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1061": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1062": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1063": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x434"
    },
    "1066": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1067": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1068": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1070": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1071": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1072": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1073": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1075": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1076": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1077": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7714,
        7749
      ],
      "op": "POP",
      "path": "2"
    },
    "1078": {
      "op": "POP"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1081": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7765,
        7803
      ],
      "op": "MLOAD",
      "path": "2",
      "statement": 4
    },
    "1082": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7765,
        7803
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1083": {
      "op": "DUP2"
    },
    "1084": {
      "op": "MSTORE"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1087": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7791,
        7792
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1088": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7791,
        7792
      ],
      "op": "POP",
      "path": "2"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1095": {
      "op": "SHL"
    },
    "1096": {
      "op": "SUB"
    },
    "1097": {
      "op": "DUP7"
    },
    "1098": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7765,
        7803
      ],
      "op": "AND",
      "path": "2"
    },
    "1099": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7765,
        7803
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1100": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7765,
        7803
      ],
      "op": "POP",
      "path": "2"
    },
    "1101": {
      "op": "PUSH32",
      "value": "0xBE457CE8B7BCAA491415DEF88F108B025525279936EE1DD9EC4DC7DEBFFCEE04"
    },
    "1134": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7765,
        7803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1135": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7765,
        7803
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1137": {
      "op": "ADD"
    },
    "1138": {
      "op": "JUMPDEST"
    },
    "1139": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7765,
        7803
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1141": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7765,
        7803
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1142": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7765,
        7803
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1143": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7765,
        7803
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1144": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7765,
        7803
      ],
      "op": "SUB",
      "path": "2"
    },
    "1145": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7765,
        7803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1146": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7765,
        7803
      ],
      "op": "LOG3",
      "path": "2"
    },
    "1147": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7765,
        7803
      ],
      "op": "POP",
      "path": "2"
    },
    "1148": {
      "offset": [
        1629,
        1630
      ],
      "op": "POP",
      "path": "2"
    },
    "1149": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7618,
        7811
      ],
      "op": "POP",
      "path": "2"
    },
    "1150": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7618,
        7811
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1151": {
      "fn": "Vault.RecallFromSega",
      "jump": "o",
      "offset": [
        7618,
        7811
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1152": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1154": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9148,
        9164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1156": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9184,
        9192
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 5
    },
    "1157": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1158": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1159": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1161": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "MUL",
      "path": "2"
    },
    "1162": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1164": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "ADD",
      "path": "2"
    },
    "1165": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1167": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1168": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1169": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1170": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "ADD",
      "path": "2"
    },
    "1171": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1173": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1174": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1175": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1176": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1177": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1178": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1179": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1180": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1181": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1183": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "ADD",
      "path": "2"
    },
    "1184": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1185": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1186": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1187": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1188": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1189": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D7"
    },
    "1192": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1193": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1195": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "MUL",
      "path": "2"
    },
    "1196": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1197": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "ADD",
      "path": "2"
    },
    "1198": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1199": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1200": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1202": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1203": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1205": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1207": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1208": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1209": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1210": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1211": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1212": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1218": {
      "op": "SHL"
    },
    "1219": {
      "op": "SUB"
    },
    "1220": {
      "op": "AND"
    },
    "1221": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1222": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1223": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1225": {
      "op": "SWAP1"
    },
    "1226": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1227": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "ADD",
      "path": "2"
    },
    "1228": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1229": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1231": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "ADD",
      "path": "2"
    },
    "1232": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1233": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1234": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "GT",
      "path": "2"
    },
    "1235": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4B9"
    },
    "1238": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1239": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1240": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "POP",
      "path": "2"
    },
    "1241": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "POP",
      "path": "2"
    },
    "1242": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "POP",
      "path": "2"
    },
    "1243": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "POP",
      "path": "2"
    },
    "1244": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "POP",
      "path": "2"
    },
    "1245": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1246": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "POP",
      "path": "2"
    },
    "1247": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9177,
        9192
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1248": {
      "fn": "Vault.viewSegaList",
      "offset": [
        9103,
        9200
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1249": {
      "fn": "Vault.viewSegaList",
      "jump": "o",
      "offset": [
        9103,
        9200
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1250": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6492,
        6842
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1252": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6579,
        6586
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4EB"
    },
    "1255": {
      "offset": [
        1608,
        1618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF38"
    },
    "1258": {
      "offset": [
        1608,
        1616
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1259": {
      "jump": "i",
      "offset": [
        1608,
        1618
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1260": {
      "fn": "Vault.createCustomSega",
      "offset": [
        1608,
        1618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1262": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "MLOAD",
      "path": "2",
      "statement": 6
    },
    "1263": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x13D1C771"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1270": {
      "op": "SHL"
    },
    "1271": {
      "op": "DUP2"
    },
    "1272": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1273": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1279": {
      "op": "SHL"
    },
    "1280": {
      "op": "SUB"
    },
    "1281": {
      "op": "DUP5"
    },
    "1282": {
      "op": "DUP2"
    },
    "1283": {
      "op": "AND"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1286": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1287": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "ADD",
      "path": "2"
    },
    "1288": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1289": {
      "op": "PUSH32",
      "value": "0x0"
    },
    "1322": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6612,
        6615
      ],
      "op": "AND",
      "path": "2"
    },
    "1323": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6625
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1324": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6625
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x13D1C771"
    },
    "1329": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6625
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1330": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6625
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "1332": {
      "op": "ADD"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1335": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1337": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1338": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1339": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1340": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "SUB",
      "path": "2"
    },
    "1341": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1342": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1344": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1345": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1346": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "1347": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1348": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1349": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1350": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x54E"
    },
    "1353": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1354": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1356": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1357": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1358": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1359": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "POP",
      "path": "2"
    },
    "1360": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "GAS",
      "path": "2"
    },
    "1361": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "CALL",
      "path": "2"
    },
    "1362": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1363": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1364": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1365": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x562"
    },
    "1368": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1369": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1370": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1372": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1373": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1374": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1375": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1377": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1378": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1379": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "POP",
      "path": "2"
    },
    "1380": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "POP",
      "path": "2"
    },
    "1381": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "POP",
      "path": "2"
    },
    "1382": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "POP",
      "path": "2"
    },
    "1383": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1385": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1386": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1387": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1389": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "NOT",
      "path": "2"
    },
    "1390": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1392": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1393": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "ADD",
      "path": "2"
    },
    "1394": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "AND",
      "path": "2"
    },
    "1395": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1396": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "ADD",
      "path": "2"
    },
    "1397": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1398": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1400": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1401": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "POP",
      "path": "2"
    },
    "1402": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1403": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "ADD",
      "path": "2"
    },
    "1404": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1405": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x586"
    },
    "1408": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1409": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1410": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1474"
    },
    "1413": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1414": {
      "fn": "Vault.createCustomSega",
      "jump": "i",
      "offset": [
        6607,
        6639
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1415": {
      "branch": 57,
      "fn": "Vault.createCustomSega",
      "offset": [
        6607,
        6639
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x58F"
    },
    "1418": {
      "branch": 57,
      "fn": "Vault.createCustomSega",
      "offset": [
        6599,
        6640
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1419": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6599,
        6640
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1421": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6599,
        6640
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1422": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6599,
        6640
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1423": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6599,
        6640
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1424": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6599,
        6640
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1426": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6651,
        6664
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1427": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6718,
        6723
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1428": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6718,
        6723
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1430": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1431": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8D429743"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1438": {
      "op": "SHL"
    },
    "1439": {
      "op": "DUP2"
    },
    "1440": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1441": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "1442": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6711,
        6715
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1444": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1445": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "ADD",
      "path": "2"
    },
    "1446": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1453": {
      "op": "SHL"
    },
    "1454": {
      "op": "SUB"
    },
    "1455": {
      "op": "SWAP2"
    },
    "1456": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6718,
        6723
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1457": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6718,
        6723
      ],
      "op": "AND",
      "path": "2"
    },
    "1458": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6718,
        6723
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "1460": {
      "op": "DUP3"
    },
    "1461": {
      "op": "ADD"
    },
    "1462": {
      "op": "MSTORE"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1465": {
      "op": "DUP2"
    },
    "1466": {
      "op": "ADD"
    },
    "1467": {
      "op": "DUP6"
    },
    "1468": {
      "op": "SWAP1"
    },
    "1469": {
      "op": "MSTORE"
    },
    "1470": {
      "op": "SWAP1"
    },
    "1471": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6702
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1472": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6702
      ],
      "op": "AND",
      "path": "2"
    },
    "1473": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6702
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1474": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6702
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8D429743"
    },
    "1479": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6702
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1480": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "1482": {
      "op": "ADD"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1485": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1487": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1488": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1489": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1490": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "SUB",
      "path": "2"
    },
    "1491": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1492": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1494": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1495": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1496": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "1497": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1498": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1499": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1500": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5E4"
    },
    "1503": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1504": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1506": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1507": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1508": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1509": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "POP",
      "path": "2"
    },
    "1510": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "GAS",
      "path": "2"
    },
    "1511": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "CALL",
      "path": "2"
    },
    "1512": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1513": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1514": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1515": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5F8"
    },
    "1518": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1519": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1520": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1522": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1523": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1524": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1525": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1527": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1528": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1529": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "POP",
      "path": "2"
    },
    "1530": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "POP",
      "path": "2"
    },
    "1531": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "POP",
      "path": "2"
    },
    "1532": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "POP",
      "path": "2"
    },
    "1533": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1535": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1536": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1537": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1539": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "NOT",
      "path": "2"
    },
    "1540": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1542": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1543": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "ADD",
      "path": "2"
    },
    "1544": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "AND",
      "path": "2"
    },
    "1545": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1546": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "ADD",
      "path": "2"
    },
    "1547": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1548": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1550": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1551": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "POP",
      "path": "2"
    },
    "1552": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1553": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "ADD",
      "path": "2"
    },
    "1554": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1555": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x61C"
    },
    "1558": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1559": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1560": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13B1"
    },
    "1563": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1564": {
      "fn": "Vault.createCustomSega",
      "jump": "i",
      "offset": [
        6667,
        6731
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1565": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6667,
        6731
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1566": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6651,
        6731
      ],
      "op": "POP",
      "path": "2"
    },
    "1567": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6651,
        6731
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x62B"
    },
    "1570": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6742,
        6774
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 7
    },
    "1571": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6749,
        6754
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1573": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6756,
        6764
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1575": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6766,
        6773
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x102A"
    },
    "1578": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6742,
        6748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1579": {
      "fn": "Vault.createCustomSega",
      "jump": "i",
      "offset": [
        6742,
        6774
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1580": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6742,
        6774
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1582": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6790,
        6811
      ],
      "op": "MLOAD",
      "path": "2",
      "statement": 8
    },
    "1583": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6790,
        6811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1585": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6790,
        6811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1589": {
      "op": "SHL"
    },
    "1590": {
      "op": "SUB"
    },
    "1591": {
      "op": "DUP3"
    },
    "1592": {
      "op": "AND"
    },
    "1593": {
      "op": "DUP2"
    },
    "1594": {
      "op": "MSTORE"
    },
    "1595": {
      "op": "PUSH32",
      "value": "0xB6EF1215893BD60FFEB9E97981AA41B2819605F61F7848A06DB1F8C3AEFC961B"
    },
    "1628": {
      "op": "SWAP1"
    },
    "1629": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6790,
        6811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1631": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6790,
        6811
      ],
      "op": "ADD",
      "path": "2"
    },
    "1632": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6790,
        6811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1634": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6790,
        6811
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1635": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6790,
        6811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1636": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6790,
        6811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1637": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6790,
        6811
      ],
      "op": "SUB",
      "path": "2"
    },
    "1638": {
      "op": "SWAP1"
    },
    "1639": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6790,
        6811
      ],
      "op": "LOG1",
      "path": "2"
    },
    "1640": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6790,
        6811
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1641": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6790,
        6811
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1642": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6829,
        6834
      ],
      "op": "POP",
      "path": "2",
      "statement": 9
    },
    "1643": {
      "fn": "Vault.createCustomSega",
      "offset": [
        6492,
        6842
      ],
      "op": "POP",
      "path": "2"
    },
    "1644": {
      "op": "POP"
    },
    "1645": {
      "op": "JUMP"
    },
    "1646": {
      "op": "JUMPDEST"
    },
    "1647": {
      "fn": "Vault.createCustomSega",
      "jump": "o",
      "offset": [
        6492,
        6842
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x676"
    },
    "1650": {
      "fn": "Vault.changeTrader",
      "offset": [
        7304,
        7498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF38"
    },
    "1653": {
      "offset": [
        1608,
        1618
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1654": {
      "offset": [
        1608,
        1616
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1655": {
      "jump": "i",
      "offset": [
        1608,
        1618
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1656": {
      "fn": "Vault.changeTrader",
      "offset": [
        1608,
        1618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x680"
    },
    "1659": {
      "fn": "Vault.changeTrader",
      "offset": [
        7383,
        7388
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1660": {
      "offset": [
        1688,
        1702
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF99"
    },
    "1663": {
      "offset": [
        1696,
        1701
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1664": {
      "offset": [
        1688,
        1695
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1665": {
      "jump": "i",
      "offset": [
        1688,
        1702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1667": {
      "fn": "Vault.changeTrader",
      "offset": [
        1688,
        1702
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1668": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 10,
      "value": "0x3FA1417"
    },
    "1673": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "1675": {
      "op": "SHL"
    },
    "1676": {
      "op": "DUP2"
    },
    "1677": {
      "op": "MSTORE"
    },
    "1678": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1680": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1682": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1684": {
      "op": "SHL"
    },
    "1685": {
      "op": "SUB"
    },
    "1686": {
      "op": "DUP4"
    },
    "1687": {
      "op": "DUP2"
    },
    "1688": {
      "op": "AND"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1691": {
      "op": "DUP4"
    },
    "1692": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "ADD",
      "path": "2"
    },
    "1693": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1694": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1695": {
      "op": "AND"
    },
    "1696": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7426
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1697": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7426
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3FA1417"
    },
    "1702": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7426
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1703": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "1705": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7426
      ],
      "op": "ADD",
      "path": "2"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1708": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1710": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1711": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1712": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1713": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "SUB",
      "path": "2"
    },
    "1714": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1715": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1717": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1718": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1719": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "1720": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1721": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1722": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1723": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6C3"
    },
    "1726": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1727": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1729": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1730": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1731": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1732": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "POP",
      "path": "2"
    },
    "1733": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "GAS",
      "path": "2"
    },
    "1734": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "CALL",
      "path": "2"
    },
    "1735": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1736": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1737": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1738": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6D7"
    },
    "1741": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1742": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1743": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1745": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1746": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1747": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1748": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1750": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1751": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1752": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "POP",
      "path": "2"
    },
    "1753": {
      "fn": "Vault.changeTrader",
      "offset": [
        7401,
        7438
      ],
      "op": "POP",
      "path": "2"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1756": {
      "op": "MLOAD"
    },
    "1757": {
      "fn": "Vault.changeTrader",
      "offset": [
        7454,
        7490
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 11,
      "value": "0x1"
    },
    "1759": {
      "fn": "Vault.changeTrader",
      "offset": [
        7454,
        7490
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1761": {
      "fn": "Vault.changeTrader",
      "offset": [
        7454,
        7490
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "1763": {
      "op": "SHL"
    },
    "1764": {
      "op": "SUB"
    },
    "1765": {
      "op": "DUP6"
    },
    "1766": {
      "op": "DUP2"
    },
    "1767": {
      "op": "AND"
    },
    "1768": {
      "op": "DUP3"
    },
    "1769": {
      "op": "MSTORE"
    },
    "1770": {
      "op": "DUP7"
    },
    "1771": {
      "op": "AND"
    },
    "1772": {
      "op": "SWAP3"
    },
    "1773": {
      "fn": "Vault.changeTrader",
      "offset": [
        7454,
        7490
      ],
      "op": "POP",
      "path": "2"
    },
    "1774": {
      "fn": "Vault.changeTrader",
      "offset": [
        7454,
        7490
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x204FF20E2CCEBC7AA7E2A38214AA8E974B36E1922B3588A7FF6DC21744BEF4B6"
    },
    "1807": {
      "fn": "Vault.changeTrader",
      "offset": [
        7454,
        7490
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1808": {
      "fn": "Vault.changeTrader",
      "offset": [
        7454,
        7490
      ],
      "op": "POP",
      "path": "2"
    },
    "1809": {
      "fn": "Vault.changeTrader",
      "offset": [
        7454,
        7490
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1811": {
      "fn": "Vault.changeTrader",
      "offset": [
        7454,
        7490
      ],
      "op": "ADD",
      "path": "2"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1814": {
      "fn": "Vault.changeTrader",
      "offset": [
        7454,
        7490
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1815": {
      "fn": "Vault.changeTrader",
      "offset": [
        7454,
        7490
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1816": {
      "op": "SWAP2"
    },
    "1817": {
      "fn": "Vault.changeTrader",
      "offset": [
        7454,
        7490
      ],
      "op": "SUB",
      "path": "2"
    },
    "1818": {
      "fn": "Vault.changeTrader",
      "offset": [
        7454,
        7490
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1819": {
      "fn": "Vault.changeTrader",
      "offset": [
        7454,
        7490
      ],
      "op": "LOG2",
      "path": "2"
    },
    "1820": {
      "op": "POP"
    },
    "1821": {
      "fn": "Vault.changeTrader",
      "offset": [
        7454,
        7490
      ],
      "op": "POP",
      "path": "2"
    },
    "1822": {
      "fn": "Vault.changeTrader",
      "offset": [
        7454,
        7490
      ],
      "op": "POP",
      "path": "2"
    },
    "1823": {
      "fn": "Vault.changeTrader",
      "offset": [
        7454,
        7490
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1824": {
      "offset": [
        1629,
        1630
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1825": {
      "fn": "Vault.changeTrader",
      "offset": [
        7304,
        7498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x728"
    },
    "1828": {
      "fn": "Vault.changeTrader",
      "offset": [
        7304,
        7498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF38"
    },
    "1831": {
      "fn": "Vault.changeTrader",
      "jump": "o",
      "offset": [
        7304,
        7498
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1832": {
      "fn": "Vault.pauseSega",
      "offset": [
        6992,
        7139
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1833": {
      "offset": [
        1608,
        1618
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1834": {
      "offset": [
        1608,
        1616
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x732"
    },
    "1837": {
      "jump": "i",
      "offset": [
        1608,
        1618
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1838": {
      "fn": "Vault.pauseSega",
      "offset": [
        1608,
        1618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF99"
    },
    "1841": {
      "fn": "Vault.pauseSega",
      "offset": [
        7048,
        7053
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1842": {
      "offset": [
        1688,
        1702
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1843": {
      "offset": [
        1696,
        1701
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1844": {
      "offset": [
        1688,
        1695
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1846": {
      "jump": "i",
      "offset": [
        1688,
        1702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1848": {
      "fn": "Vault.pauseSega",
      "offset": [
        1688,
        1702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "1850": {
      "fn": "Vault.pauseSega",
      "offset": [
        7072,
        7077
      ],
      "op": "SHL",
      "path": "2",
      "statement": 12
    },
    "1851": {
      "op": "SUB"
    },
    "1852": {
      "op": "AND"
    },
    "1853": {
      "op": "PUSH4",
      "value": "0x47AF9957"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1860": {
      "op": "MLOAD"
    },
    "1861": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7093
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1862": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7093
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "1867": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "AND",
      "path": "2"
    },
    "1868": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "1870": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "SHL",
      "path": "2"
    },
    "1871": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1872": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1873": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1875": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "ADD",
      "path": "2"
    },
    "1876": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1878": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1880": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1881": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1882": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1883": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "SUB",
      "path": "2"
    },
    "1884": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1885": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1887": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1888": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1889": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "1890": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1891": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1892": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1893": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x76D"
    },
    "1896": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1897": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1899": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1900": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1901": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1902": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "POP",
      "path": "2"
    },
    "1903": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "GAS",
      "path": "2"
    },
    "1904": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "CALL",
      "path": "2"
    },
    "1905": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1906": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1907": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1908": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x781"
    },
    "1911": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1912": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1913": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1915": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1916": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1917": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1918": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1920": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1921": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1922": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "POP",
      "path": "2"
    },
    "1923": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "POP",
      "path": "2"
    },
    "1924": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1926": {
      "fn": "Vault.pauseSega",
      "offset": [
        7066,
        7095
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1929": {
      "op": "SWAP3"
    },
    "1930": {
      "fn": "Vault.pauseSega",
      "offset": [
        7111,
        7131
      ],
      "op": "POP",
      "path": "2",
      "statement": 13
    },
    "1931": {
      "fn": "Vault.pauseSega",
      "offset": [
        7111,
        7131
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1933": {
      "fn": "Vault.pauseSega",
      "offset": [
        7129,
        7130
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1935": {
      "fn": "Vault.pauseSega",
      "offset": [
        7129,
        7130
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "1937": {
      "op": "SHL"
    },
    "1938": {
      "op": "SUB"
    },
    "1939": {
      "op": "DUP6"
    },
    "1940": {
      "op": "AND"
    },
    "1941": {
      "op": "SWAP2"
    },
    "1942": {
      "op": "POP"
    },
    "1943": {
      "fn": "Vault.pauseSega",
      "offset": [
        7111,
        7131
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xA0868FABAEEA3E340199D1F6FA323EC391FDB4FBDBEA37A7E7194FB16930D6C6"
    },
    "1976": {
      "fn": "Vault.pauseSega",
      "offset": [
        7111,
        7131
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1977": {
      "fn": "Vault.pauseSega",
      "offset": [
        7111,
        7131
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1979": {
      "op": "SWAP1"
    },
    "1980": {
      "fn": "Vault.pauseSega",
      "offset": [
        7111,
        7131
      ],
      "op": "LOG3",
      "path": "2"
    },
    "1981": {
      "fn": "Vault.pauseSega",
      "offset": [
        7111,
        7131
      ],
      "op": "POP",
      "path": "2"
    },
    "1982": {
      "fn": "Vault.pauseSega",
      "offset": [
        7111,
        7131
      ],
      "op": "POP",
      "path": "2"
    },
    "1983": {
      "fn": "Vault.pauseSega",
      "offset": [
        7111,
        7131
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1984": {
      "fn": "Vault.pauseSega",
      "offset": [
        7111,
        7131
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1985": {
      "offset": [
        1629,
        1630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7C8"
    },
    "1988": {
      "fn": "Vault.pauseSega",
      "offset": [
        6992,
        7139
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF38"
    },
    "1991": {
      "fn": "Vault.pauseSega",
      "jump": "o",
      "offset": [
        6992,
        7139
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1992": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4116,
        4292
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1993": {
      "offset": [
        1608,
        1618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1995": {
      "offset": [
        1608,
        1616
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1996": {
      "jump": "i",
      "offset": [
        1608,
        1618
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1997": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        1608,
        1618
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1998": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4188,
        4198
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 14,
      "value": "0x7D5"
    },
    "2001": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4188,
        4212
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x116A"
    },
    "2004": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4188,
        4212
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2005": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4188,
        4212
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2006": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4223,
        4236
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 15,
      "value": "0x40"
    },
    "2008": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4223,
        4234
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2009": {
      "fn": "Vault.setUnlockPeriod",
      "jump": "i",
      "offset": [
        4223,
        4236
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2010": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4223,
        4236
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2011": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4252,
        4284
      ],
      "op": "MSTORE",
      "path": "2",
      "statement": 16
    },
    "2012": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4252,
        4284
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x782F38EA18A9E9E96E953BE34B91022668F3809452782A1AC80D0765FE597A35"
    },
    "2045": {
      "op": "SWAP1"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2048": {
      "op": "ADD"
    },
    "2049": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4252,
        4284
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2050": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4252,
        4284
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2052": {
      "op": "MLOAD"
    },
    "2053": {
      "op": "DUP1"
    },
    "2054": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4252,
        4284
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2055": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4252,
        4284
      ],
      "op": "SUB",
      "path": "2"
    },
    "2056": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4252,
        4284
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2057": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4252,
        4284
      ],
      "op": "LOG1",
      "path": "2"
    },
    "2058": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4252,
        4284
      ],
      "op": "POP",
      "path": "2"
    },
    "2059": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4252,
        4284
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2060": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4252,
        4284
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2061": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4252,
        4284
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x814"
    },
    "2064": {
      "fn": "Vault.setUnlockPeriod",
      "offset": [
        4116,
        4292
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF38"
    },
    "2067": {
      "fn": "Vault.setUnlockPeriod",
      "jump": "o",
      "offset": [
        4116,
        4292
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2068": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7145,
        7296
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2069": {
      "offset": [
        1608,
        1618
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2070": {
      "offset": [
        1608,
        1616
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x81E"
    },
    "2073": {
      "jump": "i",
      "offset": [
        1608,
        1618
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2074": {
      "fn": "Vault.unpauseSega",
      "offset": [
        1608,
        1618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF99"
    },
    "2077": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7203,
        7208
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2078": {
      "offset": [
        1688,
        1702
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2079": {
      "offset": [
        1696,
        1701
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2080": {
      "offset": [
        1688,
        1695
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2082": {
      "jump": "i",
      "offset": [
        1688,
        1702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2084": {
      "fn": "Vault.unpauseSega",
      "offset": [
        1688,
        1702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "2086": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7227,
        7232
      ],
      "op": "SHL",
      "path": "2",
      "statement": 17
    },
    "2087": {
      "op": "SUB"
    },
    "2088": {
      "op": "AND"
    },
    "2089": {
      "op": "PUSH4",
      "value": "0x8936A91F"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2096": {
      "op": "MLOAD"
    },
    "2097": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7250
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2098": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7250
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "2103": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "AND",
      "path": "2"
    },
    "2104": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "2106": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "SHL",
      "path": "2"
    },
    "2107": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2108": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2109": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2111": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "ADD",
      "path": "2"
    },
    "2112": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2114": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2116": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2117": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2118": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2119": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "SUB",
      "path": "2"
    },
    "2120": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2121": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2123": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2124": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2125": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "2126": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2127": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2128": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2129": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x859"
    },
    "2132": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2133": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2135": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2136": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2137": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2138": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "POP",
      "path": "2"
    },
    "2139": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "GAS",
      "path": "2"
    },
    "2140": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "CALL",
      "path": "2"
    },
    "2141": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2142": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2143": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2144": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x86D"
    },
    "2147": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2148": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2149": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2151": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2152": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2153": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2154": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2156": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2157": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2158": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "POP",
      "path": "2"
    },
    "2159": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "POP",
      "path": "2"
    },
    "2160": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2162": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7221,
        7252
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2165": {
      "op": "SWAP3"
    },
    "2166": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7268,
        7288
      ],
      "op": "POP",
      "path": "2",
      "statement": 18
    },
    "2167": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7268,
        7288
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2169": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7286,
        7287
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2171": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7286,
        7287
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "2173": {
      "op": "SHL"
    },
    "2174": {
      "op": "SUB"
    },
    "2175": {
      "op": "DUP6"
    },
    "2176": {
      "op": "AND"
    },
    "2177": {
      "op": "SWAP2"
    },
    "2178": {
      "op": "POP"
    },
    "2179": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7268,
        7288
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xA0868FABAEEA3E340199D1F6FA323EC391FDB4FBDBEA37A7E7194FB16930D6C6"
    },
    "2212": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7268,
        7288
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2213": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7268,
        7288
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2214": {
      "op": "SWAP1"
    },
    "2215": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7268,
        7288
      ],
      "op": "LOG3",
      "path": "2"
    },
    "2216": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7268,
        7288
      ],
      "op": "POP",
      "path": "2"
    },
    "2217": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7286,
        7287
      ],
      "op": "POP",
      "path": "2"
    },
    "2218": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7286,
        7287
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2219": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7268,
        7288
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2220": {
      "offset": [
        1629,
        1630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8B3"
    },
    "2223": {
      "fn": "Vault.unpauseSega",
      "offset": [
        7145,
        7296
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF38"
    },
    "2226": {
      "fn": "Vault.unpauseSega",
      "jump": "o",
      "offset": [
        7145,
        7296
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2227": {
      "fn": "Vault.sendAssets",
      "offset": [
        5470,
        5854
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2228": {
      "offset": [
        1608,
        1618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8BC"
    },
    "2231": {
      "offset": [
        1608,
        1616
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2232": {
      "jump": "i",
      "offset": [
        1608,
        1618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11B3"
    },
    "2235": {
      "fn": "Vault.sendAssets",
      "offset": [
        1608,
        1618
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2236": {
      "fn": "Vault.sendAssets",
      "offset": [
        5566,
        5582
      ],
      "op": "JUMPDEST",
      "path": "2",
      "statement": 19
    },
    "2237": {
      "fn": "Vault.sendAssets",
      "offset": [
        5575,
        5581
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8C5"
    },
    "2240": {
      "fn": "Vault.sendAssets",
      "offset": [
        5566,
        5574
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2241": {
      "fn": "Vault.sendAssets",
      "jump": "i",
      "offset": [
        5566,
        5582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1209"
    },
    "2244": {
      "fn": "Vault.sendAssets",
      "offset": [
        5566,
        5582
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2245": {
      "fn": "Vault.sendAssets",
      "offset": [
        5593,
        5617
      ],
      "op": "JUMPDEST",
      "path": "2",
      "statement": 20
    },
    "2246": {
      "fn": "Vault.sendAssets",
      "offset": [
        5608,
        5616
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2247": {
      "fn": "Vault.sendAssets",
      "offset": [
        5593,
        5607
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8D0"
    },
    "2250": {
      "fn": "Vault.sendAssets",
      "jump": "i",
      "offset": [
        5593,
        5617
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2251": {
      "fn": "Vault.sendAssets",
      "offset": [
        5593,
        5617
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2252": {
      "fn": "Vault.sendAssets",
      "offset": [
        5650,
        5656
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12C7"
    },
    "2255": {
      "fn": "Vault.sendAssets",
      "offset": [
        5668,
        5697
      ],
      "op": "JUMP",
      "path": "2",
      "statement": 21
    },
    "2256": {
      "fn": "Vault.sendAssets",
      "offset": [
        5650,
        5656
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2257": {
      "fn": "Vault.sendAssets",
      "offset": [
        5690,
        5696
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2259": {
      "fn": "Vault.sendAssets",
      "offset": [
        5668,
        5682
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2260": {
      "fn": "Vault.sendAssets",
      "jump": "i",
      "offset": [
        5668,
        5697
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "2265": {
      "fn": "Vault.sendAssets",
      "offset": [
        5668,
        5697
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "2267": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "SHL",
      "path": "2"
    },
    "2268": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2269": {
      "op": "MSTORE"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2274": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "2276": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "SHL",
      "path": "2"
    },
    "2277": {
      "op": "SUB"
    },
    "2278": {
      "op": "DUP6"
    },
    "2279": {
      "op": "DUP2"
    },
    "2280": {
      "op": "AND"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2283": {
      "op": "DUP4"
    },
    "2284": {
      "op": "ADD"
    },
    "2285": {
      "op": "MSTORE"
    },
    "2286": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "2288": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2289": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "ADD",
      "path": "2"
    },
    "2290": {
      "op": "DUP5"
    },
    "2291": {
      "op": "SWAP1"
    },
    "2292": {
      "op": "MSTORE"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2295": {
      "op": "SWAP2"
    },
    "2296": {
      "op": "SWAP1"
    },
    "2297": {
      "op": "DUP4"
    },
    "2298": {
      "fn": "Vault.sendAssets",
      "offset": [
        5708,
        5720
      ],
      "op": "AND",
      "path": "2"
    },
    "2299": {
      "fn": "Vault.sendAssets",
      "offset": [
        5708,
        5720
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2300": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5737
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "2305": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5737
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2306": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "2308": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5737
      ],
      "op": "ADD",
      "path": "2"
    },
    "2309": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2311": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2313": {
      "op": "MLOAD"
    },
    "2314": {
      "op": "DUP1"
    },
    "2315": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2316": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "SUB",
      "path": "2"
    },
    "2317": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2318": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2320": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2321": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2322": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "2323": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2324": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2325": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2326": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x91E"
    },
    "2329": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2330": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2332": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2333": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2334": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2335": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "POP",
      "path": "2"
    },
    "2336": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "GAS",
      "path": "2"
    },
    "2337": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "CALL",
      "path": "2"
    },
    "2338": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2339": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2340": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2341": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x932"
    },
    "2344": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2345": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2346": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2348": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2349": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2350": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2351": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2353": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2354": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2355": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "POP",
      "path": "2"
    },
    "2356": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "POP",
      "path": "2"
    },
    "2357": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "POP",
      "path": "2"
    },
    "2358": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "POP",
      "path": "2"
    },
    "2359": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2361": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2362": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2363": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2365": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "NOT",
      "path": "2"
    },
    "2366": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2368": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2369": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "ADD",
      "path": "2"
    },
    "2370": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "AND",
      "path": "2"
    },
    "2371": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2372": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "ADD",
      "path": "2"
    },
    "2373": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2374": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2376": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2377": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "POP",
      "path": "2"
    },
    "2378": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2379": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "ADD",
      "path": "2"
    },
    "2380": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2381": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x956"
    },
    "2384": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2385": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2386": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1474"
    },
    "2389": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2390": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2391": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2392": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "POP",
      "path": "2"
    },
    "2393": {
      "fn": "Vault.sendAssets",
      "jump": "i",
      "offset": [
        5723,
        5755
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2394": {
      "fn": "Vault.sendAssets",
      "offset": [
        5723,
        5755
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2396": {
      "fn": "Vault.sendAssets",
      "offset": [
        5783,
        5790
      ],
      "op": "MLOAD",
      "path": "2",
      "statement": 22
    },
    "2397": {
      "fn": "Vault.sendAssets",
      "offset": [
        5783,
        5790
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2398": {
      "fn": "Vault.sendAssets",
      "offset": [
        5783,
        5790
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2400": {
      "fn": "Vault.sendAssets",
      "offset": [
        5783,
        5790
      ],
      "op": "ADD",
      "path": "2"
    },
    "2401": {
      "fn": "Vault.sendAssets",
      "offset": [
        5783,
        5790
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2403": {
      "fn": "Vault.sendAssets",
      "offset": [
        5783,
        5790
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2404": {
      "fn": "Vault.sendAssets",
      "offset": [
        5783,
        5790
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2405": {
      "fn": "Vault.sendAssets",
      "offset": [
        5783,
        5790
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x12"
    },
    "2407": {
      "fn": "Vault.sendAssets",
      "offset": [
        5783,
        5790
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2408": {
      "fn": "Vault.sendAssets",
      "offset": [
        5783,
        5790
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2409": {
      "fn": "Vault.sendAssets",
      "offset": [
        5783,
        5790
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2411": {
      "fn": "Vault.sendAssets",
      "offset": [
        5783,
        5790
      ],
      "op": "ADD",
      "path": "2"
    },
    "2412": {
      "op": "PUSH18",
      "value": "0x151C985B9CD858DD1A5BDB8811985A5B1959"
    },
    "2431": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "2433": {
      "op": "SHL"
    },
    "2434": {
      "fn": "Vault.sendAssets",
      "offset": [
        5783,
        5790
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2435": {
      "fn": "Vault.sendAssets",
      "offset": [
        5783,
        5790
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2436": {
      "fn": "Vault.sendAssets",
      "offset": [
        5783,
        5790
      ],
      "op": "POP",
      "path": "2"
    },
    "2437": {
      "fn": "Vault.sendAssets",
      "offset": [
        5783,
        5790
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2438": {
      "fn": "Vault.sendAssets",
      "offset": [
        5708,
        5755
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9AB"
    },
    "2441": {
      "fn": "Vault.sendAssets",
      "offset": [
        5708,
        5755
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2444": {
      "fn": "Vault.sendAssets",
      "offset": [
        5708,
        5755
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2445": {
      "fn": "Vault.sendAssets",
      "offset": [
        5766,
        5791
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0x461BCD"
    },
    "2449": {
      "fn": "Vault.sendAssets",
      "offset": [
        5766,
        5791
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE5"
    },
    "2451": {
      "fn": "Vault.sendAssets",
      "offset": [
        5766,
        5791
      ],
      "op": "SHL",
      "path": "2"
    },
    "2452": {
      "fn": "Vault.sendAssets",
      "offset": [
        5766,
        5791
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2453": {
      "op": "MSTORE"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2456": {
      "op": "ADD"
    },
    "2457": {
      "fn": "Vault.sendAssets",
      "offset": [
        5766,
        5791
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A2"
    },
    "2460": {
      "fn": "Vault.sendAssets",
      "offset": [
        5766,
        5791
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2461": {
      "fn": "Vault.sendAssets",
      "offset": [
        5766,
        5791
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2462": {
      "fn": "Vault.sendAssets",
      "offset": [
        5766,
        5791
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1515"
    },
    "2465": {
      "fn": "Vault.sendAssets",
      "offset": [
        5766,
        5791
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2466": {
      "fn": "Vault.sendAssets",
      "offset": [
        5766,
        5791
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2467": {
      "fn": "Vault.sendAssets",
      "offset": [
        5766,
        5791
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2469": {
      "fn": "Vault.sendAssets",
      "offset": [
        5766,
        5791
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2470": {
      "fn": "Vault.sendAssets",
      "jump": "i",
      "offset": [
        5766,
        5791
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2471": {
      "fn": "Vault.sendAssets",
      "offset": [
        5766,
        5791
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2472": {
      "fn": "Vault.sendAssets",
      "offset": [
        5766,
        5791
      ],
      "op": "SUB",
      "path": "2"
    },
    "2473": {
      "fn": "Vault.sendAssets",
      "offset": [
        5766,
        5791
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2474": {
      "fn": "Vault.sendAssets",
      "offset": [
        5766,
        5791
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "2475": {
      "fn": "Vault.sendAssets",
      "offset": [
        5766,
        5791
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2476": {
      "fn": "Vault.sendAssets",
      "offset": [
        5766,
        5791
      ],
      "op": "POP",
      "path": "2"
    },
    "2477": {
      "fn": "Vault.sendAssets",
      "offset": [
        5766,
        5791
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2478": {
      "fn": "Vault.sendAssets",
      "offset": [
        5766,
        5791
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2480": {
      "fn": "Vault.sendAssets",
      "offset": [
        5766,
        5791
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2484": {
      "fn": "Vault.sendAssets",
      "offset": [
        5807,
        5846
      ],
      "op": "SHL",
      "path": "2",
      "statement": 23
    },
    "2485": {
      "fn": "Vault.sendAssets",
      "offset": [
        5807,
        5846
      ],
      "op": "SUB",
      "path": "2"
    },
    "2486": {
      "op": "AND"
    },
    "2487": {
      "op": "DUP6"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2494": {
      "op": "SHL"
    },
    "2495": {
      "op": "SUB"
    },
    "2496": {
      "op": "AND"
    },
    "2497": {
      "fn": "Vault.sendAssets",
      "offset": [
        5807,
        5846
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8F7184268EABC3E5F95D42873237E44E84D2CB27BAA7358AC4FE098D4DFBA2ED"
    },
    "2530": {
      "fn": "Vault.sendAssets",
      "offset": [
        5807,
        5846
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2531": {
      "fn": "Vault.sendAssets",
      "offset": [
        5807,
        5846
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2533": {
      "fn": "Vault.sendAssets",
      "offset": [
        5807,
        5846
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2534": {
      "fn": "Vault.sendAssets",
      "offset": [
        5807,
        5846
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9F1"
    },
    "2537": {
      "fn": "Vault.sendAssets",
      "offset": [
        5807,
        5846
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2538": {
      "fn": "Vault.sendAssets",
      "offset": [
        5807,
        5846
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2539": {
      "fn": "Vault.sendAssets",
      "offset": [
        5807,
        5846
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2540": {
      "fn": "Vault.sendAssets",
      "offset": [
        5807,
        5846
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2542": {
      "fn": "Vault.sendAssets",
      "offset": [
        5807,
        5846
      ],
      "op": "ADD",
      "path": "2"
    },
    "2543": {
      "op": "SWAP1"
    },
    "2544": {
      "op": "JUMP"
    },
    "2545": {
      "fn": "Vault.sendAssets",
      "offset": [
        5807,
        5846
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2546": {
      "fn": "Vault.sendAssets",
      "offset": [
        5807,
        5846
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2548": {
      "fn": "Vault.sendAssets",
      "offset": [
        5807,
        5846
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2549": {
      "fn": "Vault.sendAssets",
      "offset": [
        5807,
        5846
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2550": {
      "fn": "Vault.sendAssets",
      "offset": [
        5807,
        5846
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2551": {
      "fn": "Vault.sendAssets",
      "offset": [
        5807,
        5846
      ],
      "op": "SUB",
      "path": "2"
    },
    "2552": {
      "fn": "Vault.sendAssets",
      "offset": [
        5807,
        5846
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2553": {
      "fn": "Vault.sendAssets",
      "offset": [
        5555,
        5854
      ],
      "op": "LOG3",
      "path": "2"
    },
    "2554": {
      "fn": "Vault.sendAssets",
      "offset": [
        5555,
        5854
      ],
      "op": "POP",
      "path": "2"
    },
    "2555": {
      "fn": "Vault.sendAssets",
      "offset": [
        5470,
        5854
      ],
      "op": "POP",
      "path": "2"
    },
    "2556": {
      "fn": "Vault.sendAssets",
      "offset": [
        5470,
        5854
      ],
      "op": "POP",
      "path": "2"
    },
    "2557": {
      "fn": "Vault.sendAssets",
      "offset": [
        5470,
        5854
      ],
      "op": "POP",
      "path": "2"
    },
    "2558": {
      "fn": "Vault.sendAssets",
      "jump": "o",
      "offset": [
        5470,
        5854
      ],
      "op": "POP",
      "path": "2"
    },
    "2559": {
      "fn": "Vault.createNewSega",
      "offset": [
        6141,
        6444
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2560": {
      "fn": "Vault.createNewSega",
      "offset": [
        6190,
        6197
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2561": {
      "offset": [
        1608,
        1618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2563": {
      "offset": [
        1608,
        1616
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA0A"
    },
    "2566": {
      "jump": "i",
      "offset": [
        1608,
        1618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF38"
    },
    "2569": {
      "fn": "Vault.createNewSega",
      "offset": [
        1608,
        1618
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2570": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "JUMPDEST",
      "path": "2",
      "statement": 24
    },
    "2571": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2573": {
      "op": "MLOAD"
    },
    "2574": {
      "op": "PUSH4",
      "value": "0x13D1C771"
    },
    "2579": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2581": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "SHL",
      "path": "2"
    },
    "2582": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2583": {
      "op": "MSTORE"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2588": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2590": {
      "op": "SHL"
    },
    "2591": {
      "fn": "Vault.createNewSega",
      "offset": [
        6237,
        6248
      ],
      "op": "SUB",
      "path": "2"
    },
    "2592": {
      "op": "PUSH32",
      "value": "0x0"
    },
    "2625": {
      "op": "DUP2"
    },
    "2626": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "AND",
      "path": "2"
    },
    "2627": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2629": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2630": {
      "op": "ADD"
    },
    "2631": {
      "fn": "Vault.createNewSega",
      "offset": [
        6223,
        6226
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2632": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6236
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "2665": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6236
      ],
      "op": "AND",
      "path": "2"
    },
    "2666": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6236
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2667": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6236
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x13D1C771"
    },
    "2672": {
      "op": "SWAP1"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2675": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "ADD",
      "path": "2"
    },
    "2676": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2678": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2680": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2681": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2682": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2683": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "SUB",
      "path": "2"
    },
    "2684": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2685": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2687": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2688": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2689": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "2690": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2691": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2692": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2693": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA8D"
    },
    "2696": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2697": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2699": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2700": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2701": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2702": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "POP",
      "path": "2"
    },
    "2703": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "GAS",
      "path": "2"
    },
    "2704": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "CALL",
      "path": "2"
    },
    "2705": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2706": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2707": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2708": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAA1"
    },
    "2711": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2712": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2713": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2715": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2716": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2717": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2718": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2720": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2721": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2722": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "POP",
      "path": "2"
    },
    "2723": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "POP",
      "path": "2"
    },
    "2724": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "POP",
      "path": "2"
    },
    "2725": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "POP",
      "path": "2"
    },
    "2726": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2728": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2729": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2730": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2732": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "NOT",
      "path": "2"
    },
    "2733": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2735": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2736": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "ADD",
      "path": "2"
    },
    "2737": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "AND",
      "path": "2"
    },
    "2738": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2739": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "ADD",
      "path": "2"
    },
    "2740": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2741": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2743": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2744": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "POP",
      "path": "2"
    },
    "2745": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2746": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "ADD",
      "path": "2"
    },
    "2747": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2748": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAC5"
    },
    "2751": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2752": {
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2753": {
      "fn": "Vault.createNewSega",
      "jump": "i",
      "offset": [
        6218,
        6249
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1474"
    },
    "2756": {
      "branch": 58,
      "fn": "Vault.createNewSega",
      "offset": [
        6218,
        6249
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2757": {
      "fn": "Vault.createNewSega",
      "offset": [
        6210,
        6250
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2758": {
      "fn": "Vault.createNewSega",
      "offset": [
        6210,
        6250
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xACE"
    },
    "2761": {
      "branch": 58,
      "fn": "Vault.createNewSega",
      "offset": [
        6210,
        6250
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2762": {
      "fn": "Vault.createNewSega",
      "offset": [
        6210,
        6250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2764": {
      "fn": "Vault.createNewSega",
      "offset": [
        6210,
        6250
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2765": {
      "fn": "Vault.createNewSega",
      "offset": [
        6210,
        6250
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2766": {
      "fn": "Vault.createNewSega",
      "offset": [
        6261,
        6274
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2767": {
      "fn": "Vault.createNewSega",
      "offset": [
        6327,
        6332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2769": {
      "fn": "Vault.createNewSega",
      "offset": [
        6327,
        6332
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2770": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2771": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2773": {
      "op": "MLOAD"
    },
    "2774": {
      "op": "PUSH4",
      "value": "0x19378787"
    },
    "2779": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2781": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "SHL",
      "path": "2"
    },
    "2782": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2783": {
      "fn": "Vault.createNewSega",
      "offset": [
        6320,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2784": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "2785": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2787": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2788": {
      "op": "ADD"
    },
    "2789": {
      "op": "MSTORE"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2796": {
      "op": "SHL"
    },
    "2797": {
      "fn": "Vault.createNewSega",
      "offset": [
        6327,
        6332
      ],
      "op": "SUB",
      "path": "2"
    },
    "2798": {
      "fn": "Vault.createNewSega",
      "offset": [
        6327,
        6332
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2799": {
      "fn": "Vault.createNewSega",
      "offset": [
        6327,
        6332
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2800": {
      "op": "AND"
    },
    "2801": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2803": {
      "op": "DUP3"
    },
    "2804": {
      "op": "ADD"
    },
    "2805": {
      "fn": "Vault.createNewSega",
      "offset": [
        6288,
        6299
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2806": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6311
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "2839": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6311
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2840": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6311
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2841": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6311
      ],
      "op": "AND",
      "path": "2"
    },
    "2842": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6311
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2843": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6311
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC9BC3C38"
    },
    "2848": {
      "op": "SWAP1"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2851": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "ADD",
      "path": "2"
    },
    "2852": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2854": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2856": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2857": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2858": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2859": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "SUB",
      "path": "2"
    },
    "2860": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2861": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2863": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2864": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2865": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "2866": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2867": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2868": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2869": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB3D"
    },
    "2872": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2873": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2875": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2876": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2877": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2878": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "POP",
      "path": "2"
    },
    "2879": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "GAS",
      "path": "2"
    },
    "2880": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "CALL",
      "path": "2"
    },
    "2881": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2882": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2883": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2884": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB51"
    },
    "2887": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2888": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2889": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2891": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2892": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2893": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2894": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2896": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2897": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2898": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "POP",
      "path": "2"
    },
    "2899": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "POP",
      "path": "2"
    },
    "2900": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "POP",
      "path": "2"
    },
    "2901": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "POP",
      "path": "2"
    },
    "2902": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2904": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2905": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2906": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2908": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "NOT",
      "path": "2"
    },
    "2909": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2911": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2912": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "ADD",
      "path": "2"
    },
    "2913": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "AND",
      "path": "2"
    },
    "2914": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2915": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "ADD",
      "path": "2"
    },
    "2916": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2917": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2919": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2920": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "POP",
      "path": "2"
    },
    "2921": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2922": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "ADD",
      "path": "2"
    },
    "2923": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2924": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB75"
    },
    "2927": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2928": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2929": {
      "fn": "Vault.createNewSega",
      "jump": "i",
      "offset": [
        6277,
        6333
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13B1"
    },
    "2932": {
      "fn": "Vault.createNewSega",
      "offset": [
        6277,
        6333
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2933": {
      "fn": "Vault.createNewSega",
      "offset": [
        6261,
        6333
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2934": {
      "fn": "Vault.createNewSega",
      "offset": [
        6261,
        6333
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2935": {
      "fn": "Vault.createNewSega",
      "offset": [
        6344,
        6376
      ],
      "op": "POP",
      "path": "2",
      "statement": 25
    },
    "2936": {
      "fn": "Vault.createNewSega",
      "offset": [
        6351,
        6356
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB84"
    },
    "2939": {
      "fn": "Vault.createNewSega",
      "offset": [
        6358,
        6366
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2940": {
      "fn": "Vault.createNewSega",
      "offset": [
        6368,
        6375
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2942": {
      "fn": "Vault.createNewSega",
      "offset": [
        6344,
        6350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2944": {
      "fn": "Vault.createNewSega",
      "jump": "i",
      "offset": [
        6344,
        6376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x102A"
    },
    "2947": {
      "fn": "Vault.createNewSega",
      "offset": [
        6344,
        6376
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2948": {
      "fn": "Vault.createNewSega",
      "offset": [
        6392,
        6413
      ],
      "op": "JUMPDEST",
      "path": "2",
      "statement": 26
    },
    "2949": {
      "fn": "Vault.createNewSega",
      "offset": [
        6392,
        6413
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2951": {
      "fn": "Vault.createNewSega",
      "offset": [
        6392,
        6413
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2956": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2958": {
      "op": "SHL"
    },
    "2959": {
      "op": "SUB"
    },
    "2960": {
      "op": "DUP3"
    },
    "2961": {
      "op": "AND"
    },
    "2962": {
      "op": "DUP2"
    },
    "2963": {
      "op": "MSTORE"
    },
    "2964": {
      "fn": "Vault.createNewSega",
      "offset": [
        6392,
        6413
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xB6EF1215893BD60FFEB9E97981AA41B2819605F61F7848A06DB1F8C3AEFC961B"
    },
    "2997": {
      "fn": "Vault.createNewSega",
      "offset": [
        6392,
        6413
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2998": {
      "fn": "Vault.createNewSega",
      "offset": [
        6392,
        6413
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3000": {
      "fn": "Vault.createNewSega",
      "offset": [
        6392,
        6413
      ],
      "op": "ADD",
      "path": "2"
    },
    "3001": {
      "fn": "Vault.createNewSega",
      "offset": [
        6392,
        6413
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3003": {
      "fn": "Vault.createNewSega",
      "offset": [
        6392,
        6413
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3004": {
      "fn": "Vault.createNewSega",
      "offset": [
        6392,
        6413
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3005": {
      "op": "SWAP2"
    },
    "3006": {
      "fn": "Vault.createNewSega",
      "offset": [
        6392,
        6413
      ],
      "op": "SUB",
      "path": "2"
    },
    "3007": {
      "fn": "Vault.createNewSega",
      "offset": [
        6392,
        6413
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3008": {
      "fn": "Vault.createNewSega",
      "offset": [
        6392,
        6413
      ],
      "op": "LOG1",
      "path": "2"
    },
    "3009": {
      "fn": "Vault.createNewSega",
      "offset": [
        6431,
        6436
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 27
    },
    "3010": {
      "op": "POP"
    },
    "3011": {
      "fn": "Vault.createNewSega",
      "offset": [
        6141,
        6444
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3012": {
      "fn": "Vault.createNewSega",
      "jump": "o",
      "offset": [
        6141,
        6444
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3013": {
      "fn": "Vault.claimVault",
      "offset": [
        4357,
        4679
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3014": {
      "fn": "Vault.claimVault",
      "offset": [
        4419,
        4432
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 28,
      "value": "0x1"
    },
    "3016": {
      "fn": "Vault.claimVault",
      "offset": [
        4419,
        4432
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3017": {
      "fn": "Vault.claimVault",
      "offset": [
        4433,
        4441
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3019": {
      "fn": "Vault.claimVault",
      "offset": [
        4433,
        4441
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3020": {
      "fn": "Vault.claimVault",
      "offset": [
        4433,
        4441
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3021": {
      "fn": "Vault.claimVault",
      "offset": [
        4433,
        4441
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3022": {
      "fn": "Vault.claimVault",
      "offset": [
        4433,
        4441
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3023": {
      "fn": "Vault.claimVault",
      "offset": [
        4433,
        4441
      ],
      "op": "ADD",
      "path": "2"
    },
    "3024": {
      "fn": "Vault.claimVault",
      "offset": [
        4433,
        4441
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3025": {
      "fn": "Vault.claimVault",
      "offset": [
        4433,
        4441
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3026": {
      "fn": "Vault.claimVault",
      "offset": [
        4433,
        4441
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3027": {
      "fn": "Vault.claimVault",
      "offset": [
        4433,
        4441
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x13"
    },
    "3029": {
      "fn": "Vault.claimVault",
      "offset": [
        4433,
        4441
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3030": {
      "fn": "Vault.claimVault",
      "offset": [
        4433,
        4441
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3031": {
      "op": "PUSH19",
      "value": "0x155CD95C881B9BDD08105D5D1A1BDC9A5E9959"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "3053": {
      "op": "SHL"
    },
    "3054": {
      "fn": "Vault.claimVault",
      "offset": [
        4433,
        4441
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3056": {
      "fn": "Vault.claimVault",
      "offset": [
        4433,
        4441
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3057": {
      "fn": "Vault.claimVault",
      "offset": [
        4433,
        4441
      ],
      "op": "ADD",
      "path": "2"
    },
    "3058": {
      "fn": "Vault.claimVault",
      "offset": [
        4433,
        4441
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3059": {
      "fn": "Vault.claimVault",
      "offset": [
        4433,
        4441
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3064": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3066": {
      "op": "SHL"
    },
    "3067": {
      "op": "SUB"
    },
    "3068": {
      "fn": "Vault.claimVault",
      "offset": [
        4419,
        4432
      ],
      "op": "AND",
      "path": "2"
    },
    "3069": {
      "fn": "Vault.claimVault",
      "offset": [
        4405,
        4415
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3070": {
      "branch": 59,
      "fn": "Vault.claimVault",
      "offset": [
        4405,
        4432
      ],
      "op": "EQ",
      "path": "2"
    },
    "3071": {
      "fn": "Vault.claimVault",
      "offset": [
        4397,
        4442
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC1B"
    },
    "3074": {
      "branch": 59,
      "fn": "Vault.claimVault",
      "offset": [
        4397,
        4442
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3075": {
      "fn": "Vault.claimVault",
      "offset": [
        4397,
        4442
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3077": {
      "fn": "Vault.claimVault",
      "offset": [
        4397,
        4442
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3078": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3084": {
      "op": "SHL"
    },
    "3085": {
      "fn": "Vault.claimVault",
      "offset": [
        4397,
        4442
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3086": {
      "fn": "Vault.claimVault",
      "offset": [
        4397,
        4442
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3087": {
      "fn": "Vault.claimVault",
      "offset": [
        4397,
        4442
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3089": {
      "fn": "Vault.claimVault",
      "offset": [
        4397,
        4442
      ],
      "op": "ADD",
      "path": "2"
    },
    "3090": {
      "fn": "Vault.claimVault",
      "offset": [
        4397,
        4442
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A2"
    },
    "3093": {
      "fn": "Vault.claimVault",
      "offset": [
        4397,
        4442
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3094": {
      "fn": "Vault.claimVault",
      "offset": [
        4397,
        4442
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3095": {
      "fn": "Vault.claimVault",
      "offset": [
        4397,
        4442
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1515"
    },
    "3098": {
      "fn": "Vault.claimVault",
      "jump": "i",
      "offset": [
        4397,
        4442
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3099": {
      "fn": "Vault.claimVault",
      "offset": [
        4397,
        4442
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3100": {
      "fn": "Vault.claimVault",
      "offset": [
        4397,
        4442
      ],
      "op": "POP",
      "path": "2"
    },
    "3101": {
      "fn": "Vault.claimVault",
      "offset": [
        4480,
        4491
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 29,
      "value": "0x2"
    },
    "3103": {
      "fn": "Vault.claimVault",
      "offset": [
        4480,
        4491
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3104": {
      "fn": "Vault.claimVault",
      "offset": [
        4461,
        4476
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "3105": {
      "fn": "Vault.claimVault",
      "offset": [
        4461,
        4491
      ],
      "op": "LT",
      "path": "2"
    },
    "3106": {
      "branch": 60,
      "fn": "Vault.claimVault",
      "offset": [
        4461,
        4491
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3107": {
      "fn": "Vault.claimVault",
      "offset": [
        4453,
        4525
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC6E"
    },
    "3110": {
      "branch": 60,
      "fn": "Vault.claimVault",
      "offset": [
        4453,
        4525
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3111": {
      "fn": "Vault.claimVault",
      "offset": [
        4453,
        4525
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3113": {
      "fn": "Vault.claimVault",
      "offset": [
        4453,
        4525
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3114": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3118": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3120": {
      "op": "SHL"
    },
    "3121": {
      "fn": "Vault.claimVault",
      "offset": [
        4453,
        4525
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3122": {
      "fn": "Vault.claimVault",
      "offset": [
        4453,
        4525
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3125": {
      "fn": "Vault.claimVault",
      "offset": [
        4453,
        4525
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3127": {
      "fn": "Vault.claimVault",
      "offset": [
        4453,
        4525
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3128": {
      "fn": "Vault.claimVault",
      "offset": [
        4453,
        4525
      ],
      "op": "ADD",
      "path": "2"
    },
    "3129": {
      "op": "MSTORE"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "3132": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3134": {
      "op": "DUP3"
    },
    "3135": {
      "op": "ADD"
    },
    "3136": {
      "op": "MSTORE"
    },
    "3137": {
      "op": "PUSH32",
      "value": "0x4F776E6572206973206E6F74206465636C6172656420696E6163746976650000"
    },
    "3170": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3172": {
      "op": "DUP3"
    },
    "3173": {
      "op": "ADD"
    },
    "3174": {
      "op": "MSTORE"
    },
    "3175": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3177": {
      "op": "ADD"
    },
    "3178": {
      "fn": "Vault.claimVault",
      "offset": [
        4453,
        4525
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A2"
    },
    "3181": {
      "op": "JUMP"
    },
    "3182": {
      "fn": "Vault.claimVault",
      "offset": [
        4453,
        4525
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3183": {
      "fn": "Vault.claimVault",
      "offset": [
        4536,
        4549
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3185": {
      "fn": "Vault.claimVault",
      "offset": [
        4552,
        4557
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3186": {
      "fn": "Vault.claimVault",
      "offset": [
        4552,
        4557
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3187": {
      "fn": "Vault.claimVault",
      "offset": [
        4552,
        4557
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3189": {
      "fn": "Vault.claimVault",
      "offset": [
        4584,
        4597
      ],
      "op": "SLOAD",
      "path": "2",
      "statement": 30
    },
    "3190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3194": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3196": {
      "op": "SHL"
    },
    "3197": {
      "op": "SUB"
    },
    "3198": {
      "fn": "Vault.claimVault",
      "offset": [
        4584,
        4597
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3199": {
      "fn": "Vault.claimVault",
      "offset": [
        4584,
        4597
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3200": {
      "fn": "Vault.claimVault",
      "offset": [
        4584,
        4597
      ],
      "op": "AND",
      "path": "2"
    },
    "3201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3205": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3207": {
      "op": "SHL"
    },
    "3208": {
      "op": "SUB"
    },
    "3209": {
      "op": "NOT"
    },
    "3210": {
      "fn": "Vault.claimVault",
      "offset": [
        4568,
        4598
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3211": {
      "fn": "Vault.claimVault",
      "offset": [
        4568,
        4598
      ],
      "op": "AND",
      "path": "2"
    },
    "3212": {
      "fn": "Vault.claimVault",
      "offset": [
        4568,
        4598
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3213": {
      "fn": "Vault.claimVault",
      "offset": [
        4568,
        4598
      ],
      "op": "OR",
      "path": "2"
    },
    "3214": {
      "fn": "Vault.claimVault",
      "offset": [
        4568,
        4598
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3215": {
      "fn": "Vault.claimVault",
      "offset": [
        4568,
        4598
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3216": {
      "fn": "Vault.claimVault",
      "offset": [
        4614,
        4647
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 31,
      "value": "0x40"
    },
    "3218": {
      "fn": "Vault.claimVault",
      "offset": [
        4614,
        4647
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3219": {
      "fn": "Vault.claimVault",
      "offset": [
        4552,
        4557
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3220": {
      "fn": "Vault.claimVault",
      "offset": [
        4552,
        4557
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3221": {
      "fn": "Vault.claimVault",
      "offset": [
        4552,
        4557
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3222": {
      "fn": "Vault.claimVault",
      "offset": [
        4552,
        4557
      ],
      "op": "AND",
      "path": "2"
    },
    "3223": {
      "fn": "Vault.claimVault",
      "offset": [
        4552,
        4557
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3224": {
      "fn": "Vault.claimVault",
      "offset": [
        4552,
        4557
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3225": {
      "fn": "Vault.claimVault",
      "offset": [
        4552,
        4557
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3226": {
      "fn": "Vault.claimVault",
      "offset": [
        4584,
        4597
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3227": {
      "fn": "Vault.claimVault",
      "offset": [
        4614,
        4647
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xD18B5FD22306E373229B9439188228EDCA81207D1667F604DAF6CEF8AA3EE67"
    },
    "3260": {
      "fn": "Vault.claimVault",
      "offset": [
        4614,
        4647
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3261": {
      "fn": "Vault.claimVault",
      "offset": [
        4536,
        4549
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3262": {
      "fn": "Vault.claimVault",
      "offset": [
        4614,
        4647
      ],
      "op": "LOG3",
      "path": "2"
    },
    "3263": {
      "fn": "Vault.claimVault",
      "offset": [
        4658,
        4671
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 32,
      "value": "0xCC6"
    },
    "3266": {
      "fn": "Vault.claimVault",
      "offset": [
        4658,
        4669
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x116A"
    },
    "3269": {
      "fn": "Vault.claimVault",
      "jump": "i",
      "offset": [
        4658,
        4671
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3270": {
      "fn": "Vault.claimVault",
      "offset": [
        4658,
        4671
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3271": {
      "fn": "Vault.claimVault",
      "offset": [
        4386,
        4679
      ],
      "op": "POP",
      "path": "2"
    },
    "3272": {
      "fn": "Vault.claimVault",
      "jump": "o",
      "offset": [
        4357,
        4679
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3273": {
      "fn": "Vault.setBackup",
      "offset": [
        3872,
        4031
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3274": {
      "offset": [
        1608,
        1618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCD1"
    },
    "3277": {
      "offset": [
        1608,
        1616
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF38"
    },
    "3280": {
      "jump": "i",
      "offset": [
        1608,
        1618
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3281": {
      "fn": "Vault.setBackup",
      "offset": [
        1608,
        1618
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3282": {
      "fn": "Vault.setBackup",
      "offset": [
        3934,
        3951
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 33,
      "value": "0xCDA"
    },
    "3285": {
      "fn": "Vault.setBackup",
      "offset": [
        3943,
        3950
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3286": {
      "fn": "Vault.setBackup",
      "offset": [
        3934,
        3942
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11B3"
    },
    "3289": {
      "fn": "Vault.setBackup",
      "jump": "i",
      "offset": [
        3934,
        3951
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3290": {
      "fn": "Vault.setBackup",
      "offset": [
        3934,
        3951
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3291": {
      "fn": "Vault.setBackup",
      "offset": [
        3962,
        3975
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 34,
      "value": "0x1"
    },
    "3293": {
      "fn": "Vault.setBackup",
      "offset": [
        3962,
        3985
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3294": {
      "fn": "Vault.setBackup",
      "offset": [
        3962,
        3985
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3301": {
      "op": "SHL"
    },
    "3302": {
      "op": "SUB"
    },
    "3303": {
      "op": "NOT"
    },
    "3304": {
      "fn": "Vault.setBackup",
      "offset": [
        3962,
        3985
      ],
      "op": "AND",
      "path": "2"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3309": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3311": {
      "op": "SHL"
    },
    "3312": {
      "op": "SUB"
    },
    "3313": {
      "fn": "Vault.setBackup",
      "offset": [
        3962,
        3985
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3314": {
      "fn": "Vault.setBackup",
      "offset": [
        3962,
        3985
      ],
      "op": "AND",
      "path": "2"
    },
    "3315": {
      "fn": "Vault.setBackup",
      "offset": [
        3962,
        3985
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3316": {
      "fn": "Vault.setBackup",
      "offset": [
        3962,
        3985
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3317": {
      "fn": "Vault.setBackup",
      "offset": [
        3962,
        3985
      ],
      "op": "OR",
      "path": "2"
    },
    "3318": {
      "fn": "Vault.setBackup",
      "offset": [
        3962,
        3985
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3319": {
      "fn": "Vault.setBackup",
      "offset": [
        3962,
        3985
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3320": {
      "fn": "Vault.setBackup",
      "offset": [
        3962,
        3985
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3321": {
      "fn": "Vault.setBackup",
      "offset": [
        4001,
        4023
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 35,
      "value": "0x40"
    },
    "3323": {
      "fn": "Vault.setBackup",
      "offset": [
        4001,
        4023
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3324": {
      "op": "SWAP1"
    },
    "3325": {
      "op": "DUP2"
    },
    "3326": {
      "op": "MSTORE"
    },
    "3327": {
      "fn": "Vault.setBackup",
      "offset": [
        4001,
        4023
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xADACB637D17DE7895E9C7FC75F36437FD5C36D5E6E9CC83B95380F10A052F4A"
    },
    "3360": {
      "fn": "Vault.setBackup",
      "offset": [
        4001,
        4023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3363": {
      "op": "ADD"
    },
    "3364": {
      "fn": "Vault.setBackup",
      "offset": [
        4001,
        4023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x801"
    },
    "3367": {
      "op": "JUMP"
    },
    "3368": {
      "fn": "Vault.sendAssets",
      "offset": [
        5053,
        5393
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3369": {
      "offset": [
        1608,
        1618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD30"
    },
    "3372": {
      "offset": [
        1608,
        1616
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF38"
    },
    "3375": {
      "jump": "i",
      "offset": [
        1608,
        1618
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3376": {
      "fn": "Vault.sendAssets",
      "offset": [
        1608,
        1618
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3377": {
      "fn": "Vault.sendAssets",
      "offset": [
        5141,
        5165
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 36,
      "value": "0xD39"
    },
    "3380": {
      "fn": "Vault.sendAssets",
      "offset": [
        5156,
        5164
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3381": {
      "fn": "Vault.sendAssets",
      "offset": [
        5141,
        5155
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1209"
    },
    "3384": {
      "fn": "Vault.sendAssets",
      "jump": "i",
      "offset": [
        5141,
        5165
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3385": {
      "fn": "Vault.sendAssets",
      "offset": [
        5141,
        5165
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3386": {
      "fn": "Vault.sendAssets",
      "offset": [
        5217,
        5227
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 37
    },
    "3387": {
      "fn": "Vault.sendAssets",
      "offset": [
        5217,
        5227
      ],
      "op": "SELFBALANCE",
      "path": "2"
    },
    "3388": {
      "fn": "Vault.sendAssets",
      "offset": [
        5217,
        5227
      ],
      "op": "LT",
      "path": "2"
    },
    "3389": {
      "fn": "Vault.sendAssets",
      "offset": [
        5217,
        5227
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3390": {
      "fn": "Vault.sendAssets",
      "offset": [
        5217,
        5227
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3392": {
      "fn": "Vault.sendAssets",
      "offset": [
        5217,
        5227
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3393": {
      "fn": "Vault.sendAssets",
      "offset": [
        5217,
        5227
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3394": {
      "fn": "Vault.sendAssets",
      "offset": [
        5217,
        5227
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3396": {
      "fn": "Vault.sendAssets",
      "offset": [
        5217,
        5227
      ],
      "op": "ADD",
      "path": "2"
    },
    "3397": {
      "fn": "Vault.sendAssets",
      "offset": [
        5217,
        5227
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3399": {
      "fn": "Vault.sendAssets",
      "offset": [
        5217,
        5227
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3400": {
      "fn": "Vault.sendAssets",
      "offset": [
        5217,
        5227
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "3403": {
      "op": "DUP2"
    },
    "3404": {
      "op": "MSTORE"
    },
    "3405": {
      "fn": "Vault.sendAssets",
      "offset": [
        5217,
        5227
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3407": {
      "fn": "Vault.sendAssets",
      "offset": [
        5217,
        5227
      ],
      "op": "ADD",
      "path": "2"
    },
    "3408": {
      "fn": "Vault.sendAssets",
      "offset": [
        5217,
        5227
      ],
      "op": "PUSH20",
      "path": "2",
      "value": "0x496E73756666696369656E742042616C616E6365"
    },
    "3429": {
      "fn": "Vault.sendAssets",
      "offset": [
        5217,
        5227
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3431": {
      "fn": "Vault.sendAssets",
      "offset": [
        5184,
        5205
      ],
      "op": "SHL",
      "path": "2"
    },
    "3432": {
      "fn": "Vault.sendAssets",
      "offset": [
        5184,
        5215
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3433": {
      "op": "MSTORE"
    },
    "3434": {
      "branch": 61,
      "fn": "Vault.sendAssets",
      "offset": [
        5184,
        5215
      ],
      "op": "POP",
      "path": "2"
    },
    "3435": {
      "fn": "Vault.sendAssets",
      "offset": [
        5176,
        5228
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3436": {
      "fn": "Vault.sendAssets",
      "offset": [
        5176,
        5228
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD88"
    },
    "3439": {
      "branch": 61,
      "fn": "Vault.sendAssets",
      "offset": [
        5176,
        5228
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3440": {
      "fn": "Vault.sendAssets",
      "offset": [
        5176,
        5228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3442": {
      "op": "MLOAD"
    },
    "3443": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3447": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3449": {
      "fn": "Vault.sendAssets",
      "offset": [
        5176,
        5228
      ],
      "op": "SHL",
      "path": "2"
    },
    "3450": {
      "fn": "Vault.sendAssets",
      "offset": [
        5176,
        5228
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3451": {
      "fn": "Vault.sendAssets",
      "offset": [
        5176,
        5228
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3452": {
      "fn": "Vault.sendAssets",
      "offset": [
        5176,
        5228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3454": {
      "fn": "Vault.sendAssets",
      "offset": [
        5176,
        5228
      ],
      "op": "ADD",
      "path": "2"
    },
    "3455": {
      "fn": "Vault.sendAssets",
      "offset": [
        5176,
        5228
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A2"
    },
    "3458": {
      "fn": "Vault.sendAssets",
      "offset": [
        5176,
        5228
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3459": {
      "fn": "Vault.sendAssets",
      "offset": [
        5176,
        5228
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3460": {
      "fn": "Vault.sendAssets",
      "jump": "i",
      "offset": [
        5176,
        5228
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1515"
    },
    "3463": {
      "fn": "Vault.sendAssets",
      "offset": [
        5176,
        5228
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3464": {
      "op": "JUMPDEST"
    },
    "3465": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "POP",
      "path": "2"
    },
    "3466": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3468": {
      "fn": "Vault.sendAssets",
      "offset": [
        5240,
        5252
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3469": {
      "fn": "Vault.sendAssets",
      "offset": [
        5240,
        5252
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3475": {
      "op": "SHL"
    },
    "3476": {
      "op": "SUB"
    },
    "3477": {
      "op": "AND"
    },
    "3478": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5271
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3479": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3481": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5271
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3482": {
      "fn": "Vault.sendAssets",
      "offset": [
        5279,
        5285
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3484": {
      "fn": "Vault.sendAssets",
      "offset": [
        5279,
        5285
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3486": {
      "fn": "Vault.sendAssets",
      "offset": [
        5240,
        5252
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3487": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3488": {
      "fn": "Vault.sendAssets",
      "offset": [
        5240,
        5252
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3489": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "SUB",
      "path": "2"
    },
    "3490": {
      "fn": "Vault.sendAssets",
      "offset": [
        5279,
        5285
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3491": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5271
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3492": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3493": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "GAS",
      "path": "2"
    },
    "3494": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "CALL",
      "path": "2"
    },
    "3495": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3496": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "POP",
      "path": "2"
    },
    "3497": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "POP",
      "path": "2"
    },
    "3498": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "POP",
      "path": "2"
    },
    "3499": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3500": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3501": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3503": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3504": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "EQ",
      "path": "2"
    },
    "3505": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDD6"
    },
    "3508": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3509": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3511": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3512": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3513": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "POP",
      "path": "2"
    },
    "3514": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3516": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "NOT",
      "path": "2"
    },
    "3517": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "3519": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3520": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "ADD",
      "path": "2"
    },
    "3521": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "AND",
      "path": "2"
    },
    "3522": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3523": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "ADD",
      "path": "2"
    },
    "3524": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3526": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3527": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3528": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3529": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3530": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3531": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3533": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3535": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3536": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "ADD",
      "path": "2"
    },
    "3537": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "3538": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDDB"
    },
    "3541": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3542": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3543": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3545": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3546": {
      "fn": "Vault.sendAssets",
      "offset": [
        5258,
        5290
      ],
      "op": "POP",
      "path": "2"
    },
    "3547": {
      "op": "JUMPDEST"
    },
    "3548": {
      "op": "POP"
    },
    "3549": {
      "fn": "Vault.sendAssets",
      "offset": [
        5318,
        5325
      ],
      "op": "POP",
      "path": "2",
      "statement": 38
    },
    "3550": {
      "fn": "Vault.sendAssets",
      "offset": [
        5318,
        5325
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3551": {
      "fn": "Vault.sendAssets",
      "offset": [
        5318,
        5325
      ],
      "op": "POP",
      "path": "2"
    },
    "3552": {
      "fn": "Vault.sendAssets",
      "offset": [
        5318,
        5325
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3553": {
      "fn": "Vault.sendAssets",
      "offset": [
        5318,
        5325
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3555": {
      "fn": "Vault.sendAssets",
      "offset": [
        5318,
        5325
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3556": {
      "fn": "Vault.sendAssets",
      "offset": [
        5318,
        5325
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3557": {
      "fn": "Vault.sendAssets",
      "offset": [
        5318,
        5325
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3559": {
      "fn": "Vault.sendAssets",
      "offset": [
        5318,
        5325
      ],
      "op": "ADD",
      "path": "2"
    },
    "3560": {
      "fn": "Vault.sendAssets",
      "offset": [
        5318,
        5325
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3562": {
      "fn": "Vault.sendAssets",
      "offset": [
        5318,
        5325
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3563": {
      "fn": "Vault.sendAssets",
      "offset": [
        5318,
        5325
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3564": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3566": {
      "op": "DUP2"
    },
    "3567": {
      "op": "MSTORE"
    },
    "3568": {
      "fn": "Vault.sendAssets",
      "offset": [
        5318,
        5325
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3570": {
      "fn": "Vault.sendAssets",
      "offset": [
        5318,
        5325
      ],
      "op": "ADD",
      "path": "2"
    },
    "3571": {
      "fn": "Vault.sendAssets",
      "offset": [
        5318,
        5325
      ],
      "op": "PUSH18",
      "path": "2",
      "value": "0x151C985B9CD858DD1A5BDB8811985A5B1959"
    },
    "3590": {
      "fn": "Vault.sendAssets",
      "offset": [
        5318,
        5325
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x72"
    },
    "3592": {
      "fn": "Vault.sendAssets",
      "offset": [
        5239,
        5290
      ],
      "op": "SHL",
      "path": "2"
    },
    "3593": {
      "fn": "Vault.sendAssets",
      "offset": [
        5239,
        5290
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3594": {
      "op": "MSTORE"
    },
    "3595": {
      "fn": "Vault.sendAssets",
      "offset": [
        5239,
        5290
      ],
      "op": "POP",
      "path": "2"
    },
    "3596": {
      "fn": "Vault.sendAssets",
      "offset": [
        5301,
        5326
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3597": {
      "fn": "Vault.sendAssets",
      "offset": [
        5301,
        5326
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE29"
    },
    "3600": {
      "fn": "Vault.sendAssets",
      "offset": [
        5301,
        5326
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3601": {
      "fn": "Vault.sendAssets",
      "offset": [
        5301,
        5326
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3603": {
      "op": "MLOAD"
    },
    "3604": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3610": {
      "fn": "Vault.sendAssets",
      "offset": [
        5301,
        5326
      ],
      "op": "SHL",
      "path": "2"
    },
    "3611": {
      "fn": "Vault.sendAssets",
      "offset": [
        5301,
        5326
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3612": {
      "fn": "Vault.sendAssets",
      "offset": [
        5301,
        5326
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3613": {
      "fn": "Vault.sendAssets",
      "offset": [
        5301,
        5326
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3615": {
      "fn": "Vault.sendAssets",
      "offset": [
        5301,
        5326
      ],
      "op": "ADD",
      "path": "2"
    },
    "3616": {
      "fn": "Vault.sendAssets",
      "offset": [
        5301,
        5326
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A2"
    },
    "3619": {
      "fn": "Vault.sendAssets",
      "offset": [
        5301,
        5326
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3620": {
      "fn": "Vault.sendAssets",
      "offset": [
        5301,
        5326
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3621": {
      "fn": "Vault.sendAssets",
      "jump": "i",
      "offset": [
        5301,
        5326
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1515"
    },
    "3624": {
      "fn": "Vault.sendAssets",
      "offset": [
        5301,
        5326
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3625": {
      "op": "JUMPDEST"
    },
    "3626": {
      "fn": "Vault.sendAssets",
      "offset": [
        5342,
        5385
      ],
      "op": "POP",
      "path": "2",
      "statement": 39
    },
    "3627": {
      "fn": "Vault.sendAssets",
      "offset": [
        5342,
        5385
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3629": {
      "op": "MLOAD"
    },
    "3630": {
      "op": "DUP3"
    },
    "3631": {
      "op": "DUP2"
    },
    "3632": {
      "fn": "Vault.sendAssets",
      "offset": [
        5374,
        5375
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3633": {
      "fn": "Vault.sendAssets",
      "offset": [
        5374,
        5375
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3635": {
      "op": "SWAP1"
    },
    "3636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3642": {
      "op": "SHL"
    },
    "3643": {
      "fn": "Vault.sendAssets",
      "offset": [
        5342,
        5385
      ],
      "op": "SUB",
      "path": "2"
    },
    "3644": {
      "fn": "Vault.sendAssets",
      "offset": [
        5342,
        5385
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3645": {
      "fn": "Vault.sendAssets",
      "offset": [
        5342,
        5385
      ],
      "op": "AND",
      "path": "2"
    },
    "3646": {
      "fn": "Vault.sendAssets",
      "offset": [
        5342,
        5385
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3647": {
      "fn": "Vault.sendAssets",
      "offset": [
        5342,
        5385
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8F7184268EABC3E5F95D42873237E44E84D2CB27BAA7358AC4FE098D4DFBA2ED"
    },
    "3680": {
      "op": "SWAP1"
    },
    "3681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3683": {
      "fn": "Vault.sendAssets",
      "offset": [
        5342,
        5385
      ],
      "op": "ADD",
      "path": "2"
    },
    "3684": {
      "op": "PUSH2",
      "value": "0x472"
    },
    "3687": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7823,
        8063
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3688": {
      "offset": [
        1608,
        1618
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3689": {
      "offset": [
        1608,
        1616
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE70"
    },
    "3692": {
      "jump": "i",
      "offset": [
        1608,
        1618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF38"
    },
    "3695": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        1608,
        1618
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3696": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7917,
        7922
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3697": {
      "offset": [
        1688,
        1702
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3698": {
      "offset": [
        1696,
        1701
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE7A"
    },
    "3701": {
      "offset": [
        1688,
        1695
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3702": {
      "jump": "i",
      "offset": [
        1688,
        1702
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF99"
    },
    "3705": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        1688,
        1702
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3706": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7935,
        7951
      ],
      "op": "JUMPDEST",
      "path": "2",
      "statement": 40
    },
    "3707": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7944,
        7950
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE83"
    },
    "3710": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7935,
        7943
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3711": {
      "fn": "Vault.RecallFromSega",
      "jump": "i",
      "offset": [
        7935,
        7951
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11B3"
    },
    "3714": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7935,
        7951
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3715": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "JUMPDEST",
      "path": "2",
      "statement": 41
    },
    "3716": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3718": {
      "op": "MLOAD"
    },
    "3719": {
      "op": "PUSH4",
      "value": "0xD0F108EB"
    },
    "3724": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3726": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "SHL",
      "path": "2"
    },
    "3727": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3728": {
      "op": "MSTORE"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3733": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3735": {
      "op": "SHL"
    },
    "3736": {
      "op": "SUB"
    },
    "3737": {
      "op": "DUP5"
    },
    "3738": {
      "op": "DUP2"
    },
    "3739": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "AND",
      "path": "2"
    },
    "3740": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3742": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3743": {
      "op": "ADD"
    },
    "3744": {
      "op": "MSTORE"
    },
    "3745": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3747": {
      "op": "DUP3"
    },
    "3748": {
      "op": "ADD"
    },
    "3749": {
      "op": "DUP5"
    },
    "3750": {
      "op": "SWAP1"
    },
    "3751": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        7988
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3752": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        7988
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3753": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        7988
      ],
      "op": "AND",
      "path": "2"
    },
    "3754": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        7988
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3755": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        7988
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD0F108EB"
    },
    "3760": {
      "op": "SWAP1"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3763": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "ADD",
      "path": "2"
    },
    "3764": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3766": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3768": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3769": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3770": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3771": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "SUB",
      "path": "2"
    },
    "3772": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3773": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3775": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3776": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3777": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "3778": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3779": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3780": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3781": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xECD"
    },
    "3784": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3785": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3787": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3788": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3789": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3790": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "POP",
      "path": "2"
    },
    "3791": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "GAS",
      "path": "2"
    },
    "3792": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "CALL",
      "path": "2"
    },
    "3793": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3794": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3795": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3796": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEE1"
    },
    "3799": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3800": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3801": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3803": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3804": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "3805": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3806": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3808": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7962,
        8005
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3809": {
      "op": "JUMPDEST"
    },
    "3810": {
      "op": "POP"
    },
    "3811": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        8021,
        8055
      ],
      "op": "POP",
      "path": "2",
      "statement": 42
    },
    "3812": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        8021,
        8055
      ],
      "op": "POP",
      "path": "2"
    },
    "3813": {
      "op": "POP"
    },
    "3814": {
      "op": "DUP3"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3821": {
      "op": "SHL"
    },
    "3822": {
      "op": "SUB"
    },
    "3823": {
      "op": "AND"
    },
    "3824": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        8021,
        8055
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3825": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        8021,
        8055
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3827": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        8021,
        8055
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3829": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        8021,
        8055
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "3831": {
      "op": "SHL"
    },
    "3832": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        8021,
        8055
      ],
      "op": "SUB",
      "path": "2"
    },
    "3833": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        8021,
        8055
      ],
      "op": "AND",
      "path": "2"
    },
    "3834": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        8021,
        8055
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xBE457CE8B7BCAA491415DEF88F108B025525279936EE1DD9EC4DC7DEBFFCEE04"
    },
    "3867": {
      "op": "DUP5"
    },
    "3868": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        8021,
        8055
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3870": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        8021,
        8055
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3871": {
      "op": "PUSH2",
      "value": "0xF2A"
    },
    "3874": {
      "op": "SWAP2"
    },
    "3875": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        8021,
        8055
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3876": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        8021,
        8055
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3877": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        8021,
        8055
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3879": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        8021,
        8055
      ],
      "op": "ADD",
      "path": "2"
    },
    "3880": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        8021,
        8055
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3881": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        8021,
        8055
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3882": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        8021,
        8055
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3883": {
      "offset": [
        1629,
        1630
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3885": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7823,
        8063
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3886": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7823,
        8063
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3887": {
      "fn": "Vault.RecallFromSega",
      "offset": [
        7823,
        8063
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3888": {
      "fn": "Vault.RecallFromSega",
      "jump": "o",
      "offset": [
        7823,
        8063
      ],
      "op": "SUB",
      "path": "2"
    },
    "3889": {
      "fn": "Vault._isOwner",
      "offset": [
        1802,
        1913
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3890": {
      "fn": "Vault._isOwner",
      "offset": [
        1865,
        1870
      ],
      "op": "LOG3",
      "path": "2",
      "statement": 43
    },
    "3891": {
      "fn": "Vault._isOwner",
      "offset": [
        1865,
        1870
      ],
      "op": "POP",
      "path": "2"
    },
    "3892": {
      "fn": "Vault._isOwner",
      "offset": [
        1872,
        1880
      ],
      "op": "POP",
      "path": "2"
    },
    "3893": {
      "fn": "Vault._isOwner",
      "offset": [
        1872,
        1880
      ],
      "op": "POP",
      "path": "2"
    },
    "3894": {
      "fn": "Vault._isOwner",
      "offset": [
        1872,
        1880
      ],
      "op": "POP",
      "path": "2"
    },
    "3895": {
      "fn": "Vault._isOwner",
      "offset": [
        1872,
        1880
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3896": {
      "fn": "Vault._isOwner",
      "offset": [
        1872,
        1880
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3897": {
      "fn": "Vault._isOwner",
      "offset": [
        1872,
        1880
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3899": {
      "fn": "Vault._isOwner",
      "offset": [
        1872,
        1880
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3900": {
      "fn": "Vault._isOwner",
      "offset": [
        1872,
        1880
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3902": {
      "fn": "Vault._isOwner",
      "offset": [
        1872,
        1880
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3903": {
      "fn": "Vault._isOwner",
      "offset": [
        1872,
        1880
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3904": {
      "fn": "Vault._isOwner",
      "offset": [
        1872,
        1880
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3905": {
      "fn": "Vault._isOwner",
      "offset": [
        1872,
        1880
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3906": {
      "op": "ADD"
    },
    "3907": {
      "op": "SWAP1"
    },
    "3908": {
      "op": "SWAP2"
    },
    "3909": {
      "fn": "Vault._isOwner",
      "offset": [
        1872,
        1880
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3910": {
      "fn": "Vault._isOwner",
      "offset": [
        1872,
        1880
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x13"
    },
    "3912": {
      "fn": "Vault._isOwner",
      "offset": [
        1872,
        1880
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3913": {
      "fn": "Vault._isOwner",
      "offset": [
        1872,
        1880
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3914": {
      "fn": "Vault._isOwner",
      "offset": [
        1872,
        1880
      ],
      "op": "PUSH19",
      "path": "2",
      "value": "0x155CD95C881B9BDD08105D5D1A1BDC9A5E9959"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "3936": {
      "op": "SHL"
    },
    "3937": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3939": {
      "op": "DUP3"
    },
    "3940": {
      "op": "ADD"
    },
    "3941": {
      "fn": "Vault._isOwner",
      "offset": [
        1865,
        1870
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3942": {
      "fn": "Vault._isOwner",
      "offset": [
        1851,
        1861
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3943": {
      "branch": 62,
      "fn": "Vault._isOwner",
      "offset": [
        1851,
        1870
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3945": {
      "fn": "Vault._isOwner",
      "offset": [
        1842,
        1881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3947": {
      "fn": "Vault._isOwner",
      "offset": [
        1842,
        1881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "3949": {
      "fn": "Vault._isOwner",
      "offset": [
        1842,
        1881
      ],
      "op": "SHL",
      "path": "2"
    },
    "3950": {
      "fn": "Vault._isOwner",
      "offset": [
        1842,
        1881
      ],
      "op": "SUB",
      "path": "2"
    },
    "3951": {
      "op": "AND"
    },
    "3952": {
      "op": "CALLER"
    },
    "3953": {
      "op": "EQ"
    },
    "3954": {
      "fn": "Vault._isOwner",
      "offset": [
        1842,
        1881
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF8E"
    },
    "3957": {
      "branch": 62,
      "fn": "Vault._isOwner",
      "offset": [
        1842,
        1881
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3958": {
      "fn": "Vault._isOwner",
      "offset": [
        1842,
        1881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3960": {
      "fn": "Vault._isOwner",
      "offset": [
        1842,
        1881
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3961": {
      "fn": "Vault._isOwner",
      "offset": [
        1842,
        1881
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0x461BCD"
    },
    "3965": {
      "fn": "Vault._isOwner",
      "offset": [
        1842,
        1881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE5"
    },
    "3967": {
      "fn": "Vault._isOwner",
      "offset": [
        1842,
        1881
      ],
      "op": "SHL",
      "path": "2"
    },
    "3968": {
      "fn": "Vault._isOwner",
      "offset": [
        1842,
        1881
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3969": {
      "fn": "Vault._isOwner",
      "jump": "i",
      "offset": [
        1842,
        1881
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3970": {
      "fn": "Vault._isOwner",
      "offset": [
        1842,
        1881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3972": {
      "fn": "Vault._isOwner",
      "offset": [
        1842,
        1881
      ],
      "op": "ADD",
      "path": "2"
    },
    "3973": {
      "fn": "Vault._isOwner",
      "offset": [
        1892,
        1905
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 44,
      "value": "0x9A2"
    },
    "3976": {
      "fn": "Vault._isOwner",
      "offset": [
        1892,
        1903
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3977": {
      "fn": "Vault._isOwner",
      "jump": "i",
      "offset": [
        1892,
        1905
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3978": {
      "fn": "Vault._isOwner",
      "offset": [
        1892,
        1905
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1515"
    },
    "3981": {
      "fn": "Vault._isOwner",
      "jump": "o",
      "offset": [
        1802,
        1913
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3982": {
      "fn": "Vault._isSega",
      "offset": [
        1925,
        2087
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3983": {
      "op": "POP"
    },
    "3984": {
      "op": "PUSH2",
      "value": "0xF97"
    },
    "3987": {
      "op": "PUSH2",
      "value": "0x116A"
    },
    "3990": {
      "op": "JUMP"
    },
    "3991": {
      "op": "JUMPDEST"
    },
    "3992": {
      "fn": "Vault._isSega",
      "offset": [
        2001,
        2015
      ],
      "op": "JUMP",
      "path": "2",
      "statement": 45
    },
    "3993": {
      "fn": "Vault._isSega",
      "offset": [
        2001,
        2015
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3994": {
      "fn": "Vault._isSega",
      "offset": [
        2029,
        2030
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3996": {
      "fn": "Vault._isSega",
      "offset": [
        2001,
        2015
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3998": {
      "fn": "Vault._isSega",
      "offset": [
        2001,
        2015
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "4000": {
      "fn": "Vault._isSega",
      "offset": [
        2001,
        2015
      ],
      "op": "SHL",
      "path": "2"
    },
    "4001": {
      "fn": "Vault._isSega",
      "offset": [
        2001,
        2008
      ],
      "op": "SUB",
      "path": "2"
    },
    "4002": {
      "fn": "Vault._isSega",
      "offset": [
        2001,
        2015
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4003": {
      "fn": "Vault._isSega",
      "offset": [
        2001,
        2015
      ],
      "op": "AND",
      "path": "2"
    },
    "4004": {
      "fn": "Vault._isSega",
      "offset": [
        2001,
        2015
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4006": {
      "fn": "Vault._isSega",
      "offset": [
        2001,
        2015
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4007": {
      "fn": "Vault._isSega",
      "offset": [
        2001,
        2015
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4008": {
      "fn": "Vault._isSega",
      "offset": [
        2001,
        2015
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4009": {
      "fn": "Vault._isSega",
      "offset": [
        1991,
        1999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4011": {
      "fn": "Vault._isSega",
      "offset": [
        1991,
        2017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4013": {
      "fn": "Vault._isSega",
      "offset": [
        1991,
        2017
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4014": {
      "fn": "Vault._isSega",
      "offset": [
        1991,
        1999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4016": {
      "fn": "Vault._isSega",
      "offset": [
        1991,
        1999
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4017": {
      "fn": "Vault._isSega",
      "offset": [
        2001,
        2015
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4018": {
      "fn": "Vault._isSega",
      "offset": [
        1991,
        2017
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4019": {
      "fn": "Vault._isSega",
      "offset": [
        1991,
        2017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "4021": {
      "fn": "Vault._isSega",
      "offset": [
        1991,
        2017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4022": {
      "fn": "Vault._isSega",
      "offset": [
        1991,
        2017
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4023": {
      "fn": "Vault._isSega",
      "offset": [
        1991,
        2017
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4024": {
      "fn": "Vault._isSega",
      "offset": [
        1991,
        2017
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4025": {
      "fn": "Vault._isSega",
      "jump": "i",
      "offset": [
        1991,
        2017
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4026": {
      "fn": "Vault._isSega",
      "offset": [
        1991,
        2017
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4027": {
      "fn": "Vault._isSega",
      "offset": [
        1991,
        2017
      ],
      "op": "LT",
      "path": "2"
    },
    "4028": {
      "fn": "Vault._isSega",
      "offset": [
        1991,
        2017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFC7"
    },
    "4031": {
      "fn": "Vault._isSega",
      "offset": [
        1991,
        2017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4032": {
      "fn": "Vault._isSega",
      "offset": [
        1991,
        2017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFC7"
    },
    "4035": {
      "fn": "Vault._isSega",
      "offset": [
        1991,
        2017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15B7"
    },
    "4038": {
      "fn": "Vault._isSega",
      "offset": [
        1991,
        2017
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4039": {
      "fn": "Vault._isSega",
      "offset": [
        1991,
        2017
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4040": {
      "fn": "Vault._isSega",
      "offset": [
        1991,
        2017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4042": {
      "fn": "Vault._isSega",
      "offset": [
        1991,
        2017
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4043": {
      "fn": "Vault._isSega",
      "offset": [
        1991,
        2017
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4044": {
      "op": "MSTORE"
    },
    "4045": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4047": {
      "op": "SWAP1"
    },
    "4048": {
      "op": "SWAP2"
    },
    "4049": {
      "op": "KECCAK256"
    },
    "4050": {
      "fn": "Vault._isSega",
      "offset": [
        1991,
        2017
      ],
      "op": "ADD",
      "path": "2"
    },
    "4051": {
      "fn": "Vault._isSega",
      "offset": [
        1991,
        2031
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4052": {
      "branch": 63,
      "fn": "Vault._isSega",
      "offset": [
        1991,
        2031
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4054": {
      "fn": "Vault._isSega",
      "offset": [
        1982,
        2079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4056": {
      "fn": "Vault._isSega",
      "offset": [
        1982,
        2079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "4058": {
      "fn": "Vault._isSega",
      "offset": [
        1982,
        2079
      ],
      "op": "SHL",
      "path": "2"
    },
    "4059": {
      "fn": "Vault._isSega",
      "offset": [
        1982,
        2079
      ],
      "op": "SUB",
      "path": "2"
    },
    "4060": {
      "op": "AND"
    },
    "4061": {
      "op": "EQ"
    },
    "4062": {
      "op": "ISZERO"
    },
    "4063": {
      "fn": "Vault._isSega",
      "offset": [
        1982,
        2079
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC6"
    },
    "4066": {
      "branch": 63,
      "fn": "Vault._isSega",
      "offset": [
        1982,
        2079
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4067": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4069": {
      "fn": "Vault._isSega",
      "offset": [
        1982,
        2079
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4070": {
      "fn": "Vault._isSega",
      "offset": [
        1982,
        2079
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0x461BCD"
    },
    "4074": {
      "fn": "Vault._isSega",
      "offset": [
        1982,
        2079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE5"
    },
    "4076": {
      "op": "SHL"
    },
    "4077": {
      "op": "DUP2"
    },
    "4078": {
      "op": "MSTORE"
    },
    "4079": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4081": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4083": {
      "op": "DUP3"
    },
    "4084": {
      "op": "ADD"
    },
    "4085": {
      "op": "MSTORE"
    },
    "4086": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4088": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4090": {
      "op": "DUP3"
    },
    "4091": {
      "op": "ADD"
    },
    "4092": {
      "op": "MSTORE"
    },
    "4093": {
      "fn": "Vault._isSega",
      "offset": [
        1982,
        2079
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x5365676120556E6B6F776E20746F2074686973205661756C7400000000000000"
    },
    "4126": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4128": {
      "fn": "Vault.itemIn",
      "offset": [
        8208,
        8565
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4129": {
      "op": "ADD"
    },
    "4130": {
      "op": "MSTORE"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4133": {
      "op": "ADD"
    },
    "4134": {
      "op": "PUSH2",
      "value": "0x9A2"
    },
    "4137": {
      "fn": "Vault.itemIn",
      "offset": [
        8325,
        8336
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4138": {
      "fn": "Vault.itemIn",
      "offset": [
        8325,
        8336
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4139": {
      "fn": "Vault.itemIn",
      "offset": [
        8325,
        8336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4141": {
      "fn": "Vault.itemIn",
      "offset": [
        8325,
        8336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4143": {
      "fn": "Vault.itemIn",
      "offset": [
        8325,
        8336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "4145": {
      "fn": "Vault.itemIn",
      "offset": [
        8325,
        8336
      ],
      "op": "SHL",
      "path": "2"
    },
    "4146": {
      "fn": "Vault.itemIn",
      "offset": [
        8325,
        8336
      ],
      "op": "SUB",
      "path": "2"
    },
    "4147": {
      "fn": "Vault.itemIn",
      "offset": [
        8325,
        8336
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4148": {
      "fn": "Vault.itemIn",
      "offset": [
        8325,
        8336
      ],
      "op": "AND",
      "path": "2"
    },
    "4149": {
      "fn": "Vault.itemIn",
      "offset": [
        8325,
        8336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4151": {
      "fn": "Vault.itemIn",
      "offset": [
        8325,
        8336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4152": {
      "fn": "Vault.itemIn",
      "offset": [
        8325,
        8336
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4153": {
      "fn": "Vault.itemIn",
      "offset": [
        8325,
        8336
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4154": {
      "fn": "Vault.itemIn",
      "offset": [
        8325,
        8336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4156": {
      "branch": 64,
      "fn": "Vault.itemIn",
      "offset": [
        8325,
        8341
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4157": {
      "fn": "Vault.itemIn",
      "offset": [
        8321,
        8558
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4158": {
      "fn": "Vault.itemIn",
      "offset": [
        8321,
        8558
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4159": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4161": {
      "op": "SWAP1"
    },
    "4162": {
      "op": "KECCAK256"
    },
    "4163": {
      "op": "SLOAD"
    },
    "4164": {
      "op": "ISZERO"
    },
    "4165": {
      "fn": "Vault.itemIn",
      "offset": [
        8374,
        8385
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 46,
      "value": "0x1128"
    },
    "4168": {
      "branch": 64,
      "fn": "Vault.itemIn",
      "offset": [
        8374,
        8385
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4169": {
      "fn": "Vault.itemIn",
      "offset": [
        8398,
        8399
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4171": {
      "fn": "Vault.itemIn",
      "offset": [
        8374,
        8385
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4173": {
      "fn": "Vault.itemIn",
      "offset": [
        8374,
        8385
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "4175": {
      "fn": "Vault.itemIn",
      "offset": [
        8374,
        8385
      ],
      "op": "SHL",
      "path": "2"
    },
    "4176": {
      "fn": "Vault.itemIn",
      "offset": [
        8374,
        8385
      ],
      "op": "SUB",
      "path": "2"
    },
    "4177": {
      "fn": "Vault.itemIn",
      "offset": [
        8374,
        8385
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4178": {
      "fn": "Vault.itemIn",
      "offset": [
        8374,
        8385
      ],
      "op": "AND",
      "path": "2"
    },
    "4179": {
      "fn": "Vault.itemIn",
      "offset": [
        8374,
        8385
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4181": {
      "fn": "Vault.itemIn",
      "offset": [
        8374,
        8385
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4182": {
      "fn": "Vault.itemIn",
      "offset": [
        8374,
        8385
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4183": {
      "fn": "Vault.itemIn",
      "offset": [
        8374,
        8385
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4184": {
      "fn": "Vault.itemIn",
      "offset": [
        8374,
        8385
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4186": {
      "fn": "Vault.itemIn",
      "offset": [
        8368,
        8386
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4187": {
      "fn": "Vault.itemIn",
      "offset": [
        8368,
        8386
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4188": {
      "fn": "Vault.itemIn",
      "offset": [
        8368,
        8386
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4189": {
      "fn": "Vault.itemIn",
      "offset": [
        8368,
        8386
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4191": {
      "fn": "Vault.itemIn",
      "offset": [
        8374,
        8385
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4192": {
      "fn": "Vault.itemIn",
      "offset": [
        8368,
        8386
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4193": {
      "fn": "Vault.itemIn",
      "offset": [
        8368,
        8386
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4194": {
      "fn": "Vault.itemIn",
      "offset": [
        8368,
        8386
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4195": {
      "fn": "Vault.itemIn",
      "offset": [
        8368,
        8386
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4196": {
      "fn": "Vault.itemIn",
      "offset": [
        8368,
        8386
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4197": {
      "fn": "Vault.itemIn",
      "offset": [
        8368,
        8386
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4198": {
      "fn": "Vault.itemIn",
      "jump": "i",
      "offset": [
        8368,
        8386
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4199": {
      "fn": "Vault.itemIn",
      "offset": [
        8368,
        8386
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4200": {
      "fn": "Vault.itemIn",
      "offset": [
        8368,
        8386
      ],
      "op": "LT",
      "path": "2"
    },
    "4201": {
      "fn": "Vault.itemIn",
      "offset": [
        8368,
        8386
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1074"
    },
    "4204": {
      "fn": "Vault.itemIn",
      "offset": [
        8368,
        8386
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4205": {
      "fn": "Vault.itemIn",
      "offset": [
        8368,
        8386
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1074"
    },
    "4208": {
      "fn": "Vault.itemIn",
      "offset": [
        8368,
        8386
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15B7"
    },
    "4211": {
      "fn": "Vault.itemIn",
      "offset": [
        8368,
        8386
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4212": {
      "fn": "Vault.itemIn",
      "offset": [
        8368,
        8386
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4213": {
      "fn": "Vault.itemIn",
      "offset": [
        8368,
        8386
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4215": {
      "fn": "Vault.itemIn",
      "offset": [
        8368,
        8386
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4216": {
      "fn": "Vault.itemIn",
      "offset": [
        8368,
        8386
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4217": {
      "op": "MSTORE"
    },
    "4218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4220": {
      "op": "SWAP1"
    },
    "4221": {
      "op": "SWAP2"
    },
    "4222": {
      "op": "KECCAK256"
    },
    "4223": {
      "fn": "Vault.itemIn",
      "offset": [
        8368,
        8386
      ],
      "op": "ADD",
      "path": "2"
    },
    "4224": {
      "branch": 65,
      "fn": "Vault.itemIn",
      "offset": [
        8368,
        8400
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4225": {
      "fn": "Vault.itemIn",
      "offset": [
        8359,
        8420
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4227": {
      "fn": "Vault.itemIn",
      "offset": [
        8359,
        8420
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4229": {
      "fn": "Vault.itemIn",
      "offset": [
        8359,
        8420
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "4231": {
      "fn": "Vault.itemIn",
      "offset": [
        8359,
        8420
      ],
      "op": "SHL",
      "path": "2"
    },
    "4232": {
      "op": "SUB"
    },
    "4233": {
      "op": "AND"
    },
    "4234": {
      "op": "EQ"
    },
    "4235": {
      "fn": "Vault.itemIn",
      "offset": [
        8359,
        8420
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10C8"
    },
    "4238": {
      "branch": 65,
      "fn": "Vault.itemIn",
      "offset": [
        8359,
        8420
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4241": {
      "fn": "Vault.itemIn",
      "offset": [
        8359,
        8420
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4242": {
      "fn": "Vault.itemIn",
      "offset": [
        8359,
        8420
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0x461BCD"
    },
    "4246": {
      "fn": "Vault.itemIn",
      "offset": [
        8359,
        8420
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE5"
    },
    "4248": {
      "op": "SHL"
    },
    "4249": {
      "op": "DUP2"
    },
    "4250": {
      "op": "MSTORE"
    },
    "4251": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4253": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4255": {
      "op": "DUP3"
    },
    "4256": {
      "op": "ADD"
    },
    "4257": {
      "op": "MSTORE"
    },
    "4258": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4262": {
      "op": "DUP3"
    },
    "4263": {
      "op": "ADD"
    },
    "4264": {
      "op": "MSTORE"
    },
    "4265": {
      "op": "PUSH15",
      "value": "0x105B1C9958591E48115B98589B1959"
    },
    "4281": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "4283": {
      "fn": "Vault.itemIn",
      "offset": [
        8359,
        8420
      ],
      "op": "SHL",
      "path": "2"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4286": {
      "fn": "Vault.itemIn",
      "offset": [
        8359,
        8420
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4287": {
      "op": "ADD"
    },
    "4288": {
      "op": "MSTORE"
    },
    "4289": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4291": {
      "op": "ADD"
    },
    "4292": {
      "op": "PUSH2",
      "value": "0x9A2"
    },
    "4295": {
      "fn": "Vault.itemIn",
      "offset": [
        8442,
        8453
      ],
      "op": "JUMP",
      "path": "2",
      "statement": 47
    },
    "4296": {
      "fn": "Vault.itemIn",
      "offset": [
        8442,
        8453
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4297": {
      "fn": "Vault.itemIn",
      "offset": [
        8442,
        8453
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4299": {
      "fn": "Vault.itemIn",
      "offset": [
        8442,
        8453
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4301": {
      "fn": "Vault.itemIn",
      "offset": [
        8442,
        8453
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "4303": {
      "fn": "Vault.itemIn",
      "offset": [
        8442,
        8453
      ],
      "op": "SHL",
      "path": "2"
    },
    "4304": {
      "fn": "Vault.itemIn",
      "offset": [
        8442,
        8453
      ],
      "op": "SUB",
      "path": "2"
    },
    "4305": {
      "fn": "Vault.itemIn",
      "offset": [
        8442,
        8453
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4306": {
      "fn": "Vault.itemIn",
      "offset": [
        8442,
        8453
      ],
      "op": "AND",
      "path": "2"
    },
    "4307": {
      "fn": "Vault.itemIn",
      "offset": [
        8442,
        8453
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4309": {
      "fn": "Vault.itemIn",
      "offset": [
        8442,
        8453
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4310": {
      "fn": "Vault.itemIn",
      "offset": [
        8442,
        8453
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4311": {
      "fn": "Vault.itemIn",
      "offset": [
        8442,
        8453
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4312": {
      "fn": "Vault.itemIn",
      "offset": [
        8442,
        8453
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4314": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8455
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4315": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4316": {
      "fn": "Vault.itemIn",
      "offset": [
        8442,
        8453
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4317": {
      "fn": "Vault.itemIn",
      "offset": [
        8442,
        8453
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4319": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4320": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8455
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4321": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8455
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4322": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8455
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4323": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8455
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4324": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8455
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4325": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8455
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4326": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8455
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4327": {
      "fn": "Vault.itemIn",
      "jump": "i",
      "offset": [
        8435,
        8455
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4328": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8455
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4329": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8455
      ],
      "op": "LT",
      "path": "2"
    },
    "4330": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8455
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10F5"
    },
    "4333": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8455
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4334": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8455
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10F5"
    },
    "4337": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8455
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15B7"
    },
    "4340": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8455
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4341": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8455
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4342": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4343": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8455
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4345": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8463
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4346": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8463
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4350": {
      "op": "KECCAK256"
    },
    "4351": {
      "op": "ADD"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4354": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4357": {
      "op": "EXP"
    },
    "4358": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8463
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4359": {
      "op": "SLOAD"
    },
    "4360": {
      "op": "DUP2"
    },
    "4361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4365": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4367": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8463
      ],
      "op": "SHL",
      "path": "2"
    },
    "4368": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8463
      ],
      "op": "SUB",
      "path": "2"
    },
    "4369": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8463
      ],
      "op": "MUL",
      "path": "2"
    },
    "4370": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8463
      ],
      "op": "NOT",
      "path": "2"
    },
    "4371": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8463
      ],
      "op": "AND",
      "path": "2"
    },
    "4372": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8463
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4373": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8463
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4374": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8463
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4376": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8463
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4378": {
      "fn": "Vault.itemIn",
      "offset": [
        8435,
        8463
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "4380": {
      "op": "SHL"
    },
    "4381": {
      "op": "SUB"
    },
    "4382": {
      "op": "AND"
    },
    "4383": {
      "fn": "Vault.itemIn",
      "jump": "o",
      "offset": [
        8208,
        8565
      ],
      "op": "MUL",
      "path": "2"
    },
    "4384": {
      "fn": "Vault.itemIn",
      "offset": [
        8321,
        8558
      ],
      "op": "OR",
      "path": "2"
    },
    "4385": {
      "fn": "Vault.itemIn",
      "offset": [
        8506,
        8518
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 48
    },
    "4386": {
      "fn": "Vault.itemIn",
      "offset": [
        8506,
        8518
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4387": {
      "op": "POP"
    },
    "4388": {
      "op": "POP"
    },
    "4389": {
      "op": "POP"
    },
    "4390": {
      "op": "POP"
    },
    "4391": {
      "op": "JUMP"
    },
    "4392": {
      "fn": "Vault.itemIn",
      "offset": [
        8492,
        8503
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4393": {
      "fn": "Vault.itemIn",
      "offset": [
        8492,
        8503
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4394": {
      "fn": "Vault.itemIn",
      "offset": [
        8492,
        8503
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4395": {
      "fn": "Vault.itemIn",
      "offset": [
        8492,
        8503
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4397": {
      "fn": "Vault.itemIn",
      "offset": [
        8492,
        8503
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4399": {
      "fn": "Vault.itemIn",
      "offset": [
        8492,
        8503
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "4401": {
      "fn": "Vault.itemIn",
      "offset": [
        8492,
        8503
      ],
      "op": "SHL",
      "path": "2"
    },
    "4402": {
      "fn": "Vault.itemIn",
      "offset": [
        8492,
        8503
      ],
      "op": "SUB",
      "path": "2"
    },
    "4403": {
      "fn": "Vault.itemIn",
      "offset": [
        8492,
        8503
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4404": {
      "fn": "Vault.itemIn",
      "offset": [
        8492,
        8503
      ],
      "op": "AND",
      "path": "2"
    },
    "4405": {
      "fn": "Vault.itemIn",
      "offset": [
        8492,
        8503
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4407": {
      "fn": "Vault.itemIn",
      "offset": [
        8492,
        8503
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4408": {
      "fn": "Vault.itemIn",
      "offset": [
        8492,
        8503
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4409": {
      "fn": "Vault.itemIn",
      "offset": [
        8492,
        8518
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4410": {
      "fn": "Vault.itemIn",
      "offset": [
        8492,
        8518
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4412": {
      "fn": "Vault.itemIn",
      "offset": [
        8492,
        8518
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4413": {
      "op": "DUP2"
    },
    "4414": {
      "fn": "Vault.itemIn",
      "offset": [
        8529,
        8546
      ],
      "op": "MSTORE",
      "path": "2",
      "statement": 49
    },
    "4415": {
      "fn": "Vault.itemIn",
      "offset": [
        8529,
        8546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4417": {
      "fn": "Vault.itemIn",
      "offset": [
        8529,
        8546
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4418": {
      "fn": "Vault.itemIn",
      "offset": [
        8529,
        8546
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4419": {
      "fn": "Vault.itemIn",
      "offset": [
        8529,
        8546
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4420": {
      "fn": "Vault.itemIn",
      "offset": [
        8529,
        8546
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4421": {
      "fn": "Vault.itemIn",
      "offset": [
        8529,
        8546
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4422": {
      "fn": "Vault.itemIn",
      "offset": [
        8529,
        8546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4424": {
      "fn": "Vault.itemIn",
      "offset": [
        8529,
        8546
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4425": {
      "fn": "Vault.itemIn",
      "offset": [
        8529,
        8546
      ],
      "op": "ADD",
      "path": "2"
    },
    "4426": {
      "fn": "Vault.itemIn",
      "offset": [
        8529,
        8546
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4427": {
      "fn": "Vault.itemIn",
      "offset": [
        8529,
        8546
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4428": {
      "fn": "Vault.itemIn",
      "offset": [
        8529,
        8546
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4429": {
      "fn": "Vault.itemIn",
      "offset": [
        8529,
        8546
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4430": {
      "op": "MSTORE"
    },
    "4431": {
      "op": "SWAP1"
    },
    "4432": {
      "op": "KECCAK256"
    },
    "4433": {
      "op": "SWAP1"
    },
    "4434": {
      "op": "SWAP2"
    },
    "4435": {
      "op": "ADD"
    },
    "4436": {
      "fn": "Vault.itemIn",
      "offset": [
        8529,
        8546
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4437": {
      "fn": "Vault.itemIn",
      "offset": [
        8529,
        8546
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4438": {
      "fn": "Vault.itemIn",
      "offset": [
        8529,
        8546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4440": {
      "fn": "Vault.itemIn",
      "offset": [
        8529,
        8546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4442": {
      "fn": "Vault.itemIn",
      "offset": [
        8529,
        8546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "4444": {
      "fn": "Vault.itemIn",
      "offset": [
        8529,
        8546
      ],
      "op": "SHL",
      "path": "2"
    },
    "4445": {
      "fn": "Vault.itemIn",
      "offset": [
        8321,
        8558
      ],
      "op": "SUB",
      "path": "2"
    },
    "4446": {
      "fn": "Vault.itemIn",
      "offset": [
        8208,
        8565
      ],
      "op": "NOT",
      "path": "2"
    },
    "4447": {
      "fn": "Vault.itemIn",
      "offset": [
        8208,
        8565
      ],
      "op": "AND",
      "path": "2"
    },
    "4448": {
      "fn": "Vault.itemIn",
      "offset": [
        8208,
        8565
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4449": {
      "fn": "Vault.itemIn",
      "jump": "o",
      "offset": [
        8208,
        8565
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4450": {
      "fn": "Vault.ownerActive",
      "offset": [
        2095,
        2228
      ],
      "op": "OR",
      "path": "2"
    },
    "4451": {
      "offset": [
        334,
        342
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4452": {
      "fn": "Vault.ownerActive",
      "offset": [
        2170,
        2180
      ],
      "op": "SSTORE",
      "path": "2",
      "statement": 50
    },
    "4453": {
      "fn": "Vault.ownerActive",
      "offset": [
        2170,
        2180
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4454": {
      "fn": "Vault.ownerActive",
      "offset": [
        2170,
        2189
      ],
      "op": "POP",
      "path": "2"
    },
    "4455": {
      "fn": "Vault.ownerActive",
      "offset": [
        2170,
        2189
      ],
      "op": "POP",
      "path": "2"
    },
    "4456": {
      "fn": "Vault.ownerActive",
      "offset": [
        2170,
        2189
      ],
      "op": "POP",
      "path": "2"
    },
    "4457": {
      "fn": "Vault.ownerActive",
      "offset": [
        2170,
        2189
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4458": {
      "fn": "Vault.ownerActive",
      "jump": "i",
      "offset": [
        2170,
        2189
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4459": {
      "fn": "Vault.ownerActive",
      "offset": [
        2170,
        2189
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0x15180"
    },
    "4463": {
      "fn": "Vault.ownerActive",
      "offset": [
        2152,
        2189
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4465": {
      "fn": "Vault.ownerActive",
      "offset": [
        2152,
        2189
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4466": {
      "fn": "Vault.ownerActive",
      "offset": [
        2152,
        2167
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x117B"
    },
    "4469": {
      "fn": "Vault.ownerActive",
      "offset": [
        2152,
        2189
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4470": {
      "fn": "Vault.ownerActive",
      "jump": "i",
      "offset": [
        2152,
        2189
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4471": {
      "fn": "Vault.ownerActive",
      "offset": [
        2152,
        2189
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1582"
    },
    "4474": {
      "fn": "Vault.ownerActive",
      "offset": [
        2138,
        2149
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4475": {
      "fn": "Vault.ownerActive",
      "offset": [
        2138,
        2189
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4476": {
      "fn": "Vault.ownerActive",
      "offset": [
        2205,
        2220
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 51,
      "value": "0x1185"
    },
    "4479": {
      "fn": "Vault.ownerActive",
      "offset": [
        2205,
        2220
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4480": {
      "fn": "Vault.ownerActive",
      "offset": [
        2205,
        2220
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4481": {
      "fn": "Vault.ownerActive",
      "offset": [
        2205,
        2220
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x156A"
    },
    "4484": {
      "fn": "Vault.ownerActive",
      "offset": [
        2205,
        2220
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4485": {
      "fn": "Vault.ownerActive",
      "offset": [
        2205,
        2220
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4486": {
      "fn": "Vault.ownerActive",
      "offset": [
        2205,
        2220
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4488": {
      "fn": "Vault.ownerActive",
      "jump": "o",
      "offset": [
        2095,
        2228
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4489": {
      "fn": "Vault._notZero",
      "offset": [
        2418,
        2547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4491": {
      "op": "MLOAD"
    },
    "4492": {
      "op": "PUSH32",
      "value": "0x7AA982A4520D96ED188D1997CB8420198DBFD349076824ED797A3FD39A7728A1"
    },
    "4525": {
      "op": "SWAP1"
    },
    "4526": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4528": {
      "op": "SWAP1"
    },
    "4529": {
      "fn": "Vault._notZero",
      "offset": [
        2488,
        2510
      ],
      "op": "LOG1",
      "path": "2",
      "statement": 52
    },
    "4530": {
      "branch": 66,
      "fn": "Vault._notZero",
      "offset": [
        2488,
        2510
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4531": {
      "fn": "Vault._notZero",
      "offset": [
        2479,
        2539
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4532": {
      "fn": "Vault._notZero",
      "offset": [
        2479,
        2539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4534": {
      "fn": "Vault._notZero",
      "offset": [
        2479,
        2539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4536": {
      "fn": "Vault._notZero",
      "offset": [
        2479,
        2539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "4538": {
      "op": "SHL"
    },
    "4539": {
      "op": "SUB"
    },
    "4540": {
      "op": "DUP2"
    },
    "4541": {
      "fn": "Vault._notZero",
      "offset": [
        2479,
        2539
      ],
      "op": "AND",
      "path": "2"
    },
    "4542": {
      "fn": "Vault._notZero",
      "offset": [
        2479,
        2539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC6"
    },
    "4545": {
      "op": "JUMPI"
    },
    "4546": {
      "fn": "Vault._notZero",
      "offset": [
        2479,
        2539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4548": {
      "fn": "Vault._notZero",
      "offset": [
        2479,
        2539
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4549": {
      "fn": "Vault._notZero",
      "offset": [
        2479,
        2539
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0x461BCD"
    },
    "4553": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4555": {
      "op": "SHL"
    },
    "4556": {
      "op": "DUP2"
    },
    "4557": {
      "op": "MSTORE"
    },
    "4558": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4560": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4562": {
      "op": "DUP3"
    },
    "4563": {
      "op": "ADD"
    },
    "4564": {
      "op": "MSTORE"
    },
    "4565": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "4567": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4569": {
      "op": "DUP3"
    },
    "4570": {
      "op": "ADD"
    },
    "4571": {
      "fn": "Vault._notZero",
      "offset": [
        2479,
        2539
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4572": {
      "op": "PUSH32",
      "value": "0x5A65726F2041646472657373204E6F7420416C6C6F7765640000000000000000"
    },
    "4605": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2714,
        2939
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "4607": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2781,
        2799
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 53
    },
    "4608": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2790,
        2798
      ],
      "op": "ADD",
      "path": "2"
    },
    "4609": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2781,
        2789
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4610": {
      "fn": "Vault._checkReceiver",
      "jump": "i",
      "offset": [
        2781,
        2799
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "4612": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2781,
        2799
      ],
      "op": "ADD",
      "path": "2"
    },
    "4613": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2830,
        2835
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 54,
      "value": "0x9A2"
    },
    "4616": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2830,
        2835
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4617": {
      "op": "JUMPDEST"
    },
    "4618": {
      "op": "PUSH2",
      "value": "0x1212"
    },
    "4621": {
      "op": "DUP2"
    },
    "4622": {
      "op": "PUSH2",
      "value": "0x11B3"
    },
    "4625": {
      "op": "JUMP"
    },
    "4626": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2818,
        2835
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4627": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2818,
        2835
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4629": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2818,
        2835
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4630": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2830,
        2835
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4632": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2830,
        2835
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4634": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2818,
        2835
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "4636": {
      "branch": 67,
      "fn": "Vault._checkReceiver",
      "offset": [
        2818,
        2835
      ],
      "op": "SHL",
      "path": "2"
    },
    "4637": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2818,
        2899
      ],
      "op": "SUB",
      "path": "2"
    },
    "4638": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2818,
        2899
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4639": {
      "op": "DUP2"
    },
    "4640": {
      "op": "AND"
    },
    "4641": {
      "op": "SWAP2"
    },
    "4642": {
      "op": "AND"
    },
    "4643": {
      "op": "EQ"
    },
    "4644": {
      "op": "DUP1"
    },
    "4645": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2866,
        2883
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x126F"
    },
    "4648": {
      "branch": 67,
      "fn": "Vault._checkReceiver",
      "offset": [
        2866,
        2883
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4649": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2897,
        2898
      ],
      "op": "POP",
      "path": "2"
    },
    "4650": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2866,
        2883
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4652": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2866,
        2883
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4654": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2866,
        2883
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "4656": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2866,
        2873
      ],
      "op": "SHL",
      "path": "2"
    },
    "4657": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2866,
        2883
      ],
      "op": "SUB",
      "path": "2"
    },
    "4658": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2866,
        2883
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4659": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2866,
        2883
      ],
      "op": "AND",
      "path": "2"
    },
    "4660": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2866,
        2883
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4662": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2866,
        2883
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4663": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2866,
        2883
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4664": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2856,
        2864
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4665": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2856,
        2885
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4667": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2856,
        2885
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4669": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2856,
        2864
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4670": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2856,
        2864
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4672": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2866,
        2883
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4673": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2856,
        2885
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4674": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2856,
        2885
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4675": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2856,
        2885
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "4677": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2856,
        2885
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4678": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2856,
        2885
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4679": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2856,
        2885
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4680": {
      "fn": "Vault._checkReceiver",
      "jump": "i",
      "offset": [
        2856,
        2885
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4681": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2856,
        2885
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4682": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2856,
        2885
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4683": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2856,
        2885
      ],
      "op": "LT",
      "path": "2"
    },
    "4684": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2856,
        2885
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1257"
    },
    "4687": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2856,
        2885
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4688": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2856,
        2885
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1257"
    },
    "4691": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2856,
        2885
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15B7"
    },
    "4694": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2856,
        2885
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4695": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2856,
        2885
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4696": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2856,
        2885
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4698": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2856,
        2885
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4699": {
      "op": "DUP3"
    },
    "4700": {
      "op": "MSTORE"
    },
    "4701": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4703": {
      "op": "SWAP1"
    },
    "4704": {
      "op": "SWAP2"
    },
    "4705": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2856,
        2885
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4706": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2856,
        2899
      ],
      "op": "ADD",
      "path": "2"
    },
    "4707": {
      "branch": 68,
      "fn": "Vault._checkReceiver",
      "offset": [
        2856,
        2899
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4708": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2818,
        2899
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4710": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2919,
        2930
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4712": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2919,
        2930
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "4714": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2919,
        2930
      ],
      "op": "SHL",
      "path": "2"
    },
    "4715": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2919,
        2930
      ],
      "op": "SUB",
      "path": "2"
    },
    "4716": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2919,
        2930
      ],
      "op": "AND",
      "path": "2"
    },
    "4717": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2919,
        2930
      ],
      "op": "EQ",
      "path": "2"
    },
    "4718": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2919,
        2930
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4719": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2919,
        2930
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4720": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2919,
        2930
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4722": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2919,
        2930
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4723": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2919,
        2930
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4724": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2919,
        2930
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4726": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2919,
        2930
      ],
      "op": "ADD",
      "path": "2"
    },
    "4727": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2919,
        2930
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4729": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2919,
        2930
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4730": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2919,
        2930
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4731": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2919,
        2930
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1D"
    },
    "4733": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2810,
        2931
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4734": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2810,
        2931
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4735": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2810,
        2931
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4737": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2810,
        2931
      ],
      "op": "ADD",
      "path": "2"
    },
    "4738": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2810,
        2931
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x5265636569766572206973206E6F74204F776E6572206F722053454741000000"
    },
    "4771": {
      "op": "DUP2"
    },
    "4772": {
      "op": "MSTORE"
    },
    "4773": {
      "op": "POP"
    },
    "4774": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2810,
        2931
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4775": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2810,
        2931
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12C3"
    },
    "4778": {
      "branch": 68,
      "fn": "Vault._checkReceiver",
      "offset": [
        2810,
        2931
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4779": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2810,
        2931
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4781": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2810,
        2931
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4782": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2810,
        2931
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0x461BCD"
    },
    "4786": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2810,
        2931
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE5"
    },
    "4788": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2810,
        2931
      ],
      "op": "SHL",
      "path": "2"
    },
    "4789": {
      "fn": "Vault._checkReceiver",
      "jump": "i",
      "offset": [
        2810,
        2931
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4790": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2810,
        2931
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4791": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2810,
        2931
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4793": {
      "fn": "Vault._checkReceiver",
      "offset": [
        2714,
        2939
      ],
      "op": "ADD",
      "path": "2"
    },
    "4794": {
      "fn": "Vault._checkReceiver",
      "jump": "o",
      "offset": [
        2714,
        2939
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A2"
    },
    "4797": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2555,
        2706
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4798": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 55
    },
    "4799": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1515"
    },
    "4802": {
      "op": "JUMP"
    },
    "4803": {
      "op": "JUMPDEST"
    },
    "4804": {
      "op": "POP"
    },
    "4805": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "POP",
      "path": "2"
    },
    "4806": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4807": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2668,
        2672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4808": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4810": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4811": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "4816": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4818": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2678,
        2685
      ],
      "op": "SHL",
      "path": "2"
    },
    "4819": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2678,
        2685
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4820": {
      "op": "MSTORE"
    },
    "4821": {
      "op": "ADDRESS"
    },
    "4822": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4824": {
      "op": "DUP3"
    },
    "4825": {
      "op": "ADD"
    },
    "4826": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2659
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4827": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2659
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4828": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2659
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4829": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2659
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4831": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2659
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4835": {
      "op": "SHL"
    },
    "4836": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "SUB",
      "path": "2"
    },
    "4837": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4838": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "AND",
      "path": "2"
    },
    "4839": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4840": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "4845": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4846": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "4848": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "ADD",
      "path": "2"
    },
    "4849": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4851": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4853": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4854": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4855": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4856": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "SUB",
      "path": "2"
    },
    "4857": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4858": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4859": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4860": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "4861": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4862": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4863": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4864": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1308"
    },
    "4867": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4868": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4870": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4871": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4872": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4873": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "POP",
      "path": "2"
    },
    "4874": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "GAS",
      "path": "2"
    },
    "4875": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "4876": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4877": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4878": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4879": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x131C"
    },
    "4882": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4883": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4884": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4886": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4887": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "4888": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4889": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4891": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4892": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4893": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "POP",
      "path": "2"
    },
    "4894": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "POP",
      "path": "2"
    },
    "4895": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "POP",
      "path": "2"
    },
    "4896": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "POP",
      "path": "2"
    },
    "4897": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4899": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4900": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4901": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4903": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "NOT",
      "path": "2"
    },
    "4904": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4906": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4907": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "ADD",
      "path": "2"
    },
    "4908": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "AND",
      "path": "2"
    },
    "4909": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4910": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "ADD",
      "path": "2"
    },
    "4911": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4912": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4914": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4915": {
      "fn": "Vault._enoughBalance",
      "jump": "i",
      "offset": [
        2643,
        2674
      ],
      "op": "POP",
      "path": "2"
    },
    "4916": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2674
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4917": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2687,
        2697
      ],
      "op": "ADD",
      "path": "2"
    },
    "4918": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2687,
        2697
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4919": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2687,
        2697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1340"
    },
    "4922": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2687,
        2697
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4923": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2687,
        2697
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4924": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2687,
        2697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14AF"
    },
    "4927": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2687,
        2697
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4928": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2687,
        2697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4929": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2687,
        2697
      ],
      "op": "LT",
      "path": "2"
    },
    "4930": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2687,
        2697
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4931": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2687,
        2697
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4933": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2687,
        2697
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4934": {
      "op": "DUP1"
    },
    "4935": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4937": {
      "op": "ADD"
    },
    "4938": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2687,
        2697
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4940": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2687,
        2697
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4941": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2687,
        2697
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4942": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2687,
        2697
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "4944": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2687,
        2697
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4945": {
      "op": "MSTORE"
    },
    "4946": {
      "branch": 69,
      "fn": "Vault._enoughBalance",
      "offset": [
        2643,
        2685
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4948": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2635,
        2698
      ],
      "op": "ADD",
      "path": "2"
    },
    "4949": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2635,
        2698
      ],
      "op": "PUSH20",
      "path": "2",
      "value": "0x496E73756666696369656E742042616C616E6365"
    },
    "4970": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2635,
        2698
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "4972": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2635,
        2698
      ],
      "op": "SHL",
      "path": "2"
    },
    "4973": {
      "op": "DUP2"
    },
    "4974": {
      "op": "MSTORE"
    },
    "4975": {
      "op": "POP"
    },
    "4976": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2635,
        2698
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4977": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2635,
        2698
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1165"
    },
    "4980": {
      "branch": 69,
      "fn": "Vault._enoughBalance",
      "offset": [
        2635,
        2698
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4981": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2635,
        2698
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4983": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2635,
        2698
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4984": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2635,
        2698
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0x461BCD"
    },
    "4988": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2635,
        2698
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE5"
    },
    "4990": {
      "fn": "Vault._enoughBalance",
      "offset": [
        2635,
        2698
      ],
      "op": "SHL",
      "path": "2"
    },
    "4991": {
      "fn": "Vault._enoughBalance",
      "jump": "i",
      "offset": [
        2635,
        2698
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4992": {
      "op": "MSTORE"
    },
    "4993": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4995": {
      "op": "ADD"
    },
    "4996": {
      "op": "PUSH2",
      "value": "0x9A2"
    },
    "4999": {
      "op": "SWAP2"
    },
    "5000": {
      "op": "SWAP1"
    },
    "5001": {
      "op": "PUSH2",
      "value": "0x1515"
    },
    "5004": {
      "op": "JUMP"
    },
    "5005": {
      "op": "JUMPDEST"
    },
    "5006": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5008": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5010": {
      "op": "DUP3"
    },
    "5011": {
      "op": "DUP5"
    },
    "5012": {
      "op": "SUB"
    },
    "5013": {
      "op": "SLT"
    },
    "5014": {
      "op": "ISZERO"
    },
    "5015": {
      "op": "PUSH2",
      "value": "0x139F"
    },
    "5018": {
      "op": "JUMPI"
    },
    "5019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5021": {
      "jump": "i",
      "op": "DUP1"
    },
    "5022": {
      "op": "REVERT"
    },
    "5023": {
      "op": "JUMPDEST"
    },
    "5024": {
      "op": "DUP2"
    },
    "5025": {
      "op": "CALLDATALOAD"
    },
    "5026": {
      "op": "PUSH2",
      "value": "0x13AA"
    },
    "5029": {
      "op": "DUP2"
    },
    "5030": {
      "jump": "o",
      "op": "PUSH2",
      "value": "0x15CD"
    },
    "5033": {
      "op": "JUMP"
    },
    "5034": {
      "op": "JUMPDEST"
    },
    "5035": {
      "op": "SWAP4"
    },
    "5036": {
      "op": "SWAP3"
    },
    "5037": {
      "op": "POP"
    },
    "5038": {
      "op": "POP"
    },
    "5039": {
      "op": "POP"
    },
    "5040": {
      "op": "JUMP"
    },
    "5041": {
      "op": "JUMPDEST"
    },
    "5042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5044": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5046": {
      "op": "DUP3"
    },
    "5047": {
      "op": "DUP5"
    },
    "5048": {
      "op": "SUB"
    },
    "5049": {
      "op": "SLT"
    },
    "5050": {
      "op": "ISZERO"
    },
    "5051": {
      "op": "PUSH2",
      "value": "0x13C3"
    },
    "5054": {
      "op": "JUMPI"
    },
    "5055": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5057": {
      "jump": "i",
      "op": "DUP1"
    },
    "5058": {
      "op": "REVERT"
    },
    "5059": {
      "op": "JUMPDEST"
    },
    "5060": {
      "op": "DUP2"
    },
    "5061": {
      "op": "MLOAD"
    },
    "5062": {
      "op": "PUSH2",
      "value": "0x13AA"
    },
    "5065": {
      "op": "DUP2"
    },
    "5066": {
      "op": "PUSH2",
      "value": "0x15CD"
    },
    "5069": {
      "op": "JUMP"
    },
    "5070": {
      "op": "JUMPDEST"
    },
    "5071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5073": {
      "op": "DUP1"
    },
    "5074": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5076": {
      "op": "DUP4"
    },
    "5077": {
      "op": "DUP6"
    },
    "5078": {
      "op": "SUB"
    },
    "5079": {
      "op": "SLT"
    },
    "5080": {
      "op": "ISZERO"
    },
    "5081": {
      "op": "PUSH2",
      "value": "0x13E1"
    },
    "5084": {
      "op": "JUMPI"
    },
    "5085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5087": {
      "jump": "i",
      "op": "DUP1"
    },
    "5088": {
      "op": "REVERT"
    },
    "5089": {
      "op": "JUMPDEST"
    },
    "5090": {
      "op": "DUP3"
    },
    "5091": {
      "op": "CALLDATALOAD"
    },
    "5092": {
      "op": "PUSH2",
      "value": "0x13EC"
    },
    "5095": {
      "op": "DUP2"
    },
    "5096": {
      "op": "PUSH2",
      "value": "0x15CD"
    },
    "5099": {
      "op": "JUMP"
    },
    "5100": {
      "op": "JUMPDEST"
    },
    "5101": {
      "op": "SWAP5"
    },
    "5102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5104": {
      "op": "SWAP4"
    },
    "5105": {
      "jump": "o",
      "op": "SWAP1"
    },
    "5106": {
      "op": "SWAP4"
    },
    "5107": {
      "op": "ADD"
    },
    "5108": {
      "op": "CALLDATALOAD"
    },
    "5109": {
      "op": "SWAP4"
    },
    "5110": {
      "op": "POP"
    },
    "5111": {
      "op": "POP"
    },
    "5112": {
      "op": "POP"
    },
    "5113": {
      "op": "JUMP"
    },
    "5114": {
      "op": "JUMPDEST"
    },
    "5115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5117": {
      "op": "DUP1"
    },
    "5118": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5120": {
      "op": "DUP4"
    },
    "5121": {
      "op": "DUP6"
    },
    "5122": {
      "op": "SUB"
    },
    "5123": {
      "op": "SLT"
    },
    "5124": {
      "op": "ISZERO"
    },
    "5125": {
      "op": "PUSH2",
      "value": "0x140D"
    },
    "5128": {
      "op": "JUMPI"
    },
    "5129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5131": {
      "jump": "i",
      "op": "DUP1"
    },
    "5132": {
      "op": "REVERT"
    },
    "5133": {
      "op": "JUMPDEST"
    },
    "5134": {
      "op": "DUP3"
    },
    "5135": {
      "op": "CALLDATALOAD"
    },
    "5136": {
      "op": "PUSH2",
      "value": "0x1418"
    },
    "5139": {
      "op": "DUP2"
    },
    "5140": {
      "op": "PUSH2",
      "value": "0x15CD"
    },
    "5143": {
      "op": "JUMP"
    },
    "5144": {
      "op": "JUMPDEST"
    },
    "5145": {
      "op": "SWAP2"
    },
    "5146": {
      "jump": "i",
      "op": "POP"
    },
    "5147": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5149": {
      "op": "DUP4"
    },
    "5150": {
      "op": "ADD"
    },
    "5151": {
      "op": "CALLDATALOAD"
    },
    "5152": {
      "op": "PUSH2",
      "value": "0x1428"
    },
    "5155": {
      "op": "DUP2"
    },
    "5156": {
      "op": "PUSH2",
      "value": "0x15CD"
    },
    "5159": {
      "op": "JUMP"
    },
    "5160": {
      "op": "JUMPDEST"
    },
    "5161": {
      "op": "DUP1"
    },
    "5162": {
      "jump": "o",
      "op": "SWAP2"
    },
    "5163": {
      "op": "POP"
    },
    "5164": {
      "op": "POP"
    },
    "5165": {
      "op": "SWAP3"
    },
    "5166": {
      "op": "POP"
    },
    "5167": {
      "op": "SWAP3"
    },
    "5168": {
      "op": "SWAP1"
    },
    "5169": {
      "op": "POP"
    },
    "5170": {
      "op": "JUMP"
    },
    "5171": {
      "op": "JUMPDEST"
    },
    "5172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5174": {
      "op": "DUP1"
    },
    "5175": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5177": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5179": {
      "op": "DUP5"
    },
    "5180": {
      "op": "DUP7"
    },
    "5181": {
      "op": "SUB"
    },
    "5182": {
      "op": "SLT"
    },
    "5183": {
      "op": "ISZERO"
    },
    "5184": {
      "op": "PUSH2",
      "value": "0x1448"
    },
    "5187": {
      "op": "JUMPI"
    },
    "5188": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5190": {
      "jump": "i",
      "op": "DUP1"
    },
    "5191": {
      "op": "REVERT"
    },
    "5192": {
      "op": "JUMPDEST"
    },
    "5193": {
      "op": "DUP4"
    },
    "5194": {
      "op": "CALLDATALOAD"
    },
    "5195": {
      "op": "PUSH2",
      "value": "0x1453"
    },
    "5198": {
      "op": "DUP2"
    },
    "5199": {
      "op": "PUSH2",
      "value": "0x15CD"
    },
    "5202": {
      "op": "JUMP"
    },
    "5203": {
      "op": "JUMPDEST"
    },
    "5204": {
      "op": "SWAP3"
    },
    "5205": {
      "jump": "i",
      "op": "POP"
    },
    "5206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5208": {
      "op": "DUP5"
    },
    "5209": {
      "op": "ADD"
    },
    "5210": {
      "op": "CALLDATALOAD"
    },
    "5211": {
      "op": "PUSH2",
      "value": "0x1463"
    },
    "5214": {
      "op": "DUP2"
    },
    "5215": {
      "op": "PUSH2",
      "value": "0x15CD"
    },
    "5218": {
      "op": "JUMP"
    },
    "5219": {
      "op": "JUMPDEST"
    },
    "5220": {
      "op": "SWAP3"
    },
    "5221": {
      "op": "SWAP6"
    },
    "5222": {
      "op": "SWAP3"
    },
    "5223": {
      "op": "SWAP5"
    },
    "5224": {
      "op": "POP"
    },
    "5225": {
      "op": "POP"
    },
    "5226": {
      "jump": "o",
      "op": "POP"
    },
    "5227": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5229": {
      "op": "SWAP2"
    },
    "5230": {
      "op": "SWAP1"
    },
    "5231": {
      "op": "SWAP2"
    },
    "5232": {
      "op": "ADD"
    },
    "5233": {
      "op": "CALLDATALOAD"
    },
    "5234": {
      "op": "SWAP1"
    },
    "5235": {
      "op": "JUMP"
    },
    "5236": {
      "op": "JUMPDEST"
    },
    "5237": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5239": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5241": {
      "op": "DUP3"
    },
    "5242": {
      "op": "DUP5"
    },
    "5243": {
      "op": "SUB"
    },
    "5244": {
      "op": "SLT"
    },
    "5245": {
      "op": "ISZERO"
    },
    "5246": {
      "op": "PUSH2",
      "value": "0x1486"
    },
    "5249": {
      "op": "JUMPI"
    },
    "5250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5252": {
      "op": "DUP1"
    },
    "5253": {
      "op": "REVERT"
    },
    "5254": {
      "op": "JUMPDEST"
    },
    "5255": {
      "op": "DUP2"
    },
    "5256": {
      "op": "MLOAD"
    },
    "5257": {
      "op": "DUP1"
    },
    "5258": {
      "op": "ISZERO"
    },
    "5259": {
      "op": "ISZERO"
    },
    "5260": {
      "op": "DUP2"
    },
    "5261": {
      "op": "EQ"
    },
    "5262": {
      "op": "PUSH2",
      "value": "0x13AA"
    },
    "5265": {
      "op": "JUMPI"
    },
    "5266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5268": {
      "op": "DUP1"
    },
    "5269": {
      "op": "REVERT"
    },
    "5270": {
      "op": "JUMPDEST"
    },
    "5271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5273": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5275": {
      "op": "DUP3"
    },
    "5276": {
      "op": "DUP5"
    },
    "5277": {
      "op": "SUB"
    },
    "5278": {
      "op": "SLT"
    },
    "5279": {
      "op": "ISZERO"
    },
    "5280": {
      "op": "PUSH2",
      "value": "0x14A8"
    },
    "5283": {
      "op": "JUMPI"
    },
    "5284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5286": {
      "jump": "o",
      "op": "DUP1"
    },
    "5287": {
      "op": "REVERT"
    },
    "5288": {
      "op": "JUMPDEST"
    },
    "5289": {
      "op": "POP"
    },
    "5290": {
      "op": "CALLDATALOAD"
    },
    "5291": {
      "op": "SWAP2"
    },
    "5292": {
      "op": "SWAP1"
    },
    "5293": {
      "op": "POP"
    },
    "5294": {
      "op": "JUMP"
    },
    "5295": {
      "op": "JUMPDEST"
    },
    "5296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5298": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5300": {
      "op": "DUP3"
    },
    "5301": {
      "op": "DUP5"
    },
    "5302": {
      "op": "SUB"
    },
    "5303": {
      "op": "SLT"
    },
    "5304": {
      "op": "ISZERO"
    },
    "5305": {
      "op": "PUSH2",
      "value": "0x14C1"
    },
    "5308": {
      "op": "JUMPI"
    },
    "5309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5311": {
      "jump": "o",
      "op": "DUP1"
    },
    "5312": {
      "op": "REVERT"
    },
    "5313": {
      "op": "JUMPDEST"
    },
    "5314": {
      "op": "POP"
    },
    "5315": {
      "op": "MLOAD"
    },
    "5316": {
      "op": "SWAP2"
    },
    "5317": {
      "op": "SWAP1"
    },
    "5318": {
      "op": "POP"
    },
    "5319": {
      "op": "JUMP"
    },
    "5320": {
      "op": "JUMPDEST"
    },
    "5321": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5323": {
      "op": "DUP1"
    },
    "5324": {
      "op": "DUP3"
    },
    "5325": {
      "op": "MSTORE"
    },
    "5326": {
      "op": "DUP3"
    },
    "5327": {
      "op": "MLOAD"
    },
    "5328": {
      "op": "DUP3"
    },
    "5329": {
      "op": "DUP3"
    },
    "5330": {
      "op": "ADD"
    },
    "5331": {
      "op": "DUP2"
    },
    "5332": {
      "op": "SWAP1"
    },
    "5333": {
      "op": "MSTORE"
    },
    "5334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5336": {
      "op": "SWAP2"
    },
    "5337": {
      "op": "SWAP1"
    },
    "5338": {
      "op": "DUP5"
    },
    "5339": {
      "op": "DUP3"
    },
    "5340": {
      "op": "ADD"
    },
    "5341": {
      "op": "SWAP1"
    },
    "5342": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5344": {
      "op": "DUP6"
    },
    "5345": {
      "op": "ADD"
    },
    "5346": {
      "op": "SWAP1"
    },
    "5347": {
      "op": "DUP5"
    },
    "5348": {
      "op": "JUMPDEST"
    },
    "5349": {
      "op": "DUP2"
    },
    "5350": {
      "op": "DUP2"
    },
    "5351": {
      "op": "LT"
    },
    "5352": {
      "op": "ISZERO"
    },
    "5353": {
      "op": "PUSH2",
      "value": "0x1509"
    },
    "5356": {
      "op": "JUMPI"
    },
    "5357": {
      "op": "DUP4"
    },
    "5358": {
      "op": "MLOAD"
    },
    "5359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5365": {
      "op": "SHL"
    },
    "5366": {
      "op": "SUB"
    },
    "5367": {
      "op": "AND"
    },
    "5368": {
      "op": "DUP4"
    },
    "5369": {
      "op": "MSTORE"
    },
    "5370": {
      "op": "SWAP3"
    },
    "5371": {
      "op": "DUP5"
    },
    "5372": {
      "op": "ADD"
    },
    "5373": {
      "op": "SWAP3"
    },
    "5374": {
      "op": "SWAP2"
    },
    "5375": {
      "op": "DUP5"
    },
    "5376": {
      "op": "ADD"
    },
    "5377": {
      "op": "SWAP2"
    },
    "5378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5380": {
      "op": "ADD"
    },
    "5381": {
      "op": "PUSH2",
      "value": "0x14E4"
    },
    "5384": {
      "op": "JUMP"
    },
    "5385": {
      "op": "JUMPDEST"
    },
    "5386": {
      "op": "POP"
    },
    "5387": {
      "op": "SWAP1"
    },
    "5388": {
      "jump": "o",
      "op": "SWAP7"
    },
    "5389": {
      "op": "SWAP6"
    },
    "5390": {
      "op": "POP"
    },
    "5391": {
      "op": "POP"
    },
    "5392": {
      "op": "POP"
    },
    "5393": {
      "op": "POP"
    },
    "5394": {
      "op": "POP"
    },
    "5395": {
      "op": "POP"
    },
    "5396": {
      "op": "JUMP"
    },
    "5397": {
      "op": "JUMPDEST"
    },
    "5398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5400": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5402": {
      "op": "DUP1"
    },
    "5403": {
      "op": "DUP4"
    },
    "5404": {
      "op": "MSTORE"
    },
    "5405": {
      "op": "DUP4"
    },
    "5406": {
      "op": "MLOAD"
    },
    "5407": {
      "op": "DUP1"
    },
    "5408": {
      "op": "DUP3"
    },
    "5409": {
      "op": "DUP6"
    },
    "5410": {
      "op": "ADD"
    },
    "5411": {
      "op": "MSTORE"
    },
    "5412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5414": {
      "op": "JUMPDEST"
    },
    "5415": {
      "op": "DUP2"
    },
    "5416": {
      "op": "DUP2"
    },
    "5417": {
      "op": "LT"
    },
    "5418": {
      "op": "ISZERO"
    },
    "5419": {
      "op": "PUSH2",
      "value": "0x1542"
    },
    "5422": {
      "op": "JUMPI"
    },
    "5423": {
      "op": "DUP6"
    },
    "5424": {
      "op": "DUP2"
    },
    "5425": {
      "op": "ADD"
    },
    "5426": {
      "op": "DUP4"
    },
    "5427": {
      "op": "ADD"
    },
    "5428": {
      "op": "MLOAD"
    },
    "5429": {
      "op": "DUP6"
    },
    "5430": {
      "op": "DUP3"
    },
    "5431": {
      "op": "ADD"
    },
    "5432": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5434": {
      "op": "ADD"
    },
    "5435": {
      "op": "MSTORE"
    },
    "5436": {
      "op": "DUP3"
    },
    "5437": {
      "op": "ADD"
    },
    "5438": {
      "op": "PUSH2",
      "value": "0x1526"
    },
    "5441": {
      "op": "JUMP"
    },
    "5442": {
      "op": "JUMPDEST"
    },
    "5443": {
      "op": "DUP2"
    },
    "5444": {
      "op": "DUP2"
    },
    "5445": {
      "op": "GT"
    },
    "5446": {
      "op": "ISZERO"
    },
    "5447": {
      "op": "PUSH2",
      "value": "0x1554"
    },
    "5450": {
      "op": "JUMPI"
    },
    "5451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5453": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5455": {
      "op": "DUP4"
    },
    "5456": {
      "op": "DUP8"
    },
    "5457": {
      "op": "ADD"
    },
    "5458": {
      "op": "ADD"
    },
    "5459": {
      "op": "MSTORE"
    },
    "5460": {
      "op": "JUMPDEST"
    },
    "5461": {
      "op": "POP"
    },
    "5462": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5464": {
      "op": "ADD"
    },
    "5465": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5467": {
      "op": "NOT"
    },
    "5468": {
      "op": "AND"
    },
    "5469": {
      "op": "SWAP3"
    },
    "5470": {
      "op": "SWAP1"
    },
    "5471": {
      "op": "SWAP3"
    },
    "5472": {
      "jump": "o",
      "op": "ADD"
    },
    "5473": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5475": {
      "op": "ADD"
    },
    "5476": {
      "op": "SWAP4"
    },
    "5477": {
      "op": "SWAP3"
    },
    "5478": {
      "op": "POP"
    },
    "5479": {
      "op": "POP"
    },
    "5480": {
      "op": "POP"
    },
    "5481": {
      "op": "JUMP"
    },
    "5482": {
      "op": "JUMPDEST"
    },
    "5483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5485": {
      "op": "DUP3"
    },
    "5486": {
      "jump": "i",
      "op": "NOT"
    },
    "5487": {
      "op": "DUP3"
    },
    "5488": {
      "op": "GT"
    },
    "5489": {
      "op": "ISZERO"
    },
    "5490": {
      "op": "PUSH2",
      "value": "0x157D"
    },
    "5493": {
      "jump": "o",
      "op": "JUMPI"
    },
    "5494": {
      "op": "PUSH2",
      "value": "0x157D"
    },
    "5497": {
      "op": "PUSH2",
      "value": "0x15A1"
    },
    "5500": {
      "op": "JUMP"
    },
    "5501": {
      "op": "JUMPDEST"
    },
    "5502": {
      "op": "POP"
    },
    "5503": {
      "op": "ADD"
    },
    "5504": {
      "op": "SWAP1"
    },
    "5505": {
      "op": "JUMP"
    },
    "5506": {
      "op": "JUMPDEST"
    },
    "5507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5509": {
      "op": "DUP2"
    },
    "5510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5512": {
      "op": "NOT"
    },
    "5513": {
      "op": "DIV"
    },
    "5514": {
      "op": "DUP4"
    },
    "5515": {
      "op": "GT"
    },
    "5516": {
      "op": "DUP3"
    },
    "5517": {
      "jump": "i",
      "op": "ISZERO"
    },
    "5518": {
      "op": "ISZERO"
    },
    "5519": {
      "op": "AND"
    },
    "5520": {
      "op": "ISZERO"
    },
    "5521": {
      "op": "PUSH2",
      "value": "0x159C"
    },
    "5524": {
      "jump": "o",
      "op": "JUMPI"
    },
    "5525": {
      "op": "PUSH2",
      "value": "0x159C"
    },
    "5528": {
      "op": "PUSH2",
      "value": "0x15A1"
    },
    "5531": {
      "op": "JUMP"
    },
    "5532": {
      "op": "JUMPDEST"
    },
    "5533": {
      "op": "POP"
    },
    "5534": {
      "op": "MUL"
    },
    "5535": {
      "op": "SWAP1"
    },
    "5536": {
      "op": "JUMP"
    },
    "5537": {
      "op": "JUMPDEST"
    },
    "5538": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5543": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5545": {
      "op": "SHL"
    },
    "5546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5548": {
      "op": "MSTORE"
    },
    "5549": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5551": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5553": {
      "op": "MSTORE"
    },
    "5554": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5558": {
      "op": "REVERT"
    },
    "5559": {
      "op": "JUMPDEST"
    },
    "5560": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5565": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5567": {
      "op": "SHL"
    },
    "5568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5570": {
      "op": "MSTORE"
    },
    "5571": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "5573": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5575": {
      "op": "MSTORE"
    },
    "5576": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5580": {
      "op": "REVERT"
    },
    "5581": {
      "op": "JUMPDEST"
    },
    "5582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5586": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5588": {
      "op": "SHL"
    },
    "5589": {
      "op": "SUB"
    },
    "5590": {
      "op": "DUP2"
    },
    "5591": {
      "op": "AND"
    },
    "5592": {
      "op": "DUP2"
    },
    "5593": {
      "op": "EQ"
    },
    "5594": {
      "op": "PUSH2",
      "value": "0xCC6"
    },
    "5597": {
      "op": "JUMPI"
    },
    "5598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5600": {
      "op": "DUP1"
    },
    "5601": {
      "op": "REVERT"
    }
  },
  "sha1": "eb8e58a29b1bd4fb39946d5841f674cc6b28e4bd",
  "source": "//SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\nimport \"../interfaces/ISegaP.sol\";\nimport \"../interfaces/ISegaFactP.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract Vault {\n    \n    address public immutable segaFactory;\n    address public immutable RCU;\n\n    uint256 constant oneDay = 24*60*60 ; \n    //this is 1 for testing only, should be 24*60*60\n\n    string constant noAccess = \"User not Authorized\"; \n    string constant txnFail = \"Transaction Failed\";\n    string constant lowBalance = \"Insufficient Balance\";\n    string constant badReceiver = \"Receiver is not Owner or SEGA\";\n\n    address payable private owner;\n    address private backupAccount;\n    uint256 private releaseTime;\n    uint256 private unlockDays;\n\n    mapping (address => uint256) private SegaMap;\n    address[] private SegaList;\n\n    event Received(address, uint);\n    event OwnerIsActive();\n\n    event ChangedBackup(address _backup);\n    event ChangedInactiveTime(uint);\n    event OwnershipTransfered(address indexed _new, address indexed _old);\n\n    event NewSegaCreated(address newSega);\n    event SentOutAssets(address indexed _to, address indexed _token, uint256 _amount);\n\n    event SegaFrozen(address indexed _sega,uint8 indexed onOff);\n    event SegaRecall(address indexed _sega, address indexed _token, uint256 _amount);\n    event SegaTraderChanged(address indexed _sega, address newTrader);\n\n    /*********************************************\n    Modifiers\n    *********************************************/\n\n    modifier isOwner() {\n        _isOwner();\n        _;\n    }\n\n    modifier isSega(address _sega) {\n        _isSega(_sega);\n        _;\n    }\n\n    modifier viewByORB() {\n        _viewByORB();\n        _;\n    }\n\n    function _isOwner() internal {\n        require( msg.sender == owner, noAccess);\n        ownerActive();\n    }\n    \n    function _isSega(address _sega) internal view {\n        require( SegaList[ SegaMap[_sega] ] != address(0), \n                \"Sega Unkown to this Vault\");\n    }\n\n    function ownerActive() internal {\n        releaseTime = block.timestamp + unlockDays * oneDay;\n        emit OwnerIsActive();\n    }\n\n    function _viewByORB() internal view {\n        require(\n            msg.sender == owner ||\n            msg.sender == backupAccount,\n            noAccess\n        );\n    }\n\n    function _notZero(address _address) internal pure {\n        require (_address != address(0), \"Zero Address Not Allowed\");\n    }\n\n    function _enoughBalance(IERC20 _token, uint256 _amount) internal view{\n        require(_token.balanceOf(address(this)) >= _amount, lowBalance);\n    }\n\n    function _checkReceiver(address receiver) internal view {\n        _notZero(receiver);\n        require(receiver == owner ||\n                SegaList[ SegaMap[receiver] ] != address(0), \n                badReceiver);\n    }\n    \n\n    /*******************************************\n    Constructor, Recieve, Fallback\n    *******************************************/\n\n    constructor(address _RCU, address _owner, address _segaFact) {\n        \n        RCU = _RCU;\n        segaFactory = _segaFact;\n\n        owner = payable(_owner);\n        backupAccount = _owner;\n        unlockDays = 365;\n        releaseTime = block.timestamp + unlockDays * oneDay;\n        \n        SegaList.push(address(0));\n    }\n\n    receive() external payable {\n        emit Received(msg.sender, msg.value);\n    }\n    \n    fallback() external payable {\n        if (msg.value > 0) { \n            emit Received(msg.sender, msg.value);\n        }\n    }\n\n    /*********************************************\n    Owner Only Functions - Relevant for backupAccount\n    *********************************************/\n    \n    //For Owner to set Backup Account\n    function setBackup(address _backup) public isOwner {\n        _notZero(_backup);\n        backupAccount = _backup;\n        emit ChangedBackup(_backup);\n    }\n    \n    //For Owner to set days after which Owner account declared inactive\n    function setUnlockPeriod(uint256 _unlockTime) public isOwner {\n        unlockDays = _unlockTime;\n        ownerActive();\n        emit ChangedInactiveTime(_unlockTime);\n    }\n    \n    //For Backup Account to claim the role of Owner\n    function claimVault() public {\n        require(msg.sender == backupAccount,noAccess);\n        require(block.timestamp >= releaseTime,\"Owner is not declared inactive\");\n        address oldAc = owner;\n        owner = payable(backupAccount);\n        emit OwnershipTransfered(owner, oldAc);\n        ownerActive();\n    }\n    \n    /*------------------------------------------\n    Vault Admin & Management Functions - Owner & ROs\n    ------------------------------------------*/\n\n    /********************************************\n    Functions to Return Vault Assets to Owner/Sega\n    *********************************************/\n\n    //Transfering Eth to allowed counterparties\n    function sendAssets(address payable receiver, uint256 amount) public isOwner {\n        _checkReceiver(receiver);\n        require(address(this).balance >= amount, lowBalance);\n        (bool success, ) = receiver.call{value: amount}(\"\");\n        require(success, txnFail);\n        emit SentOutAssets(receiver, address(0), amount);\n    }\n    \n    // Transferring & Approving allowed Tokens to Owner or Sega\n    function sendAssets(address receiver, address _token, uint256 amount) public isOwner {\n        _notZero(_token);\n        _checkReceiver(receiver);\n        IERC20 Token = IERC20(_token);\n        _enoughBalance(Token, amount);\n        bool success = Token.transfer(receiver, amount);\n        require(success, txnFail);\n        emit SentOutAssets(receiver, _token, amount);\n    }\n\n    /*-------------------------------------------\n    Functions to Manage Segregated Accounts\n    --------------------------------------------*/\n\n    /*********************\n    Create New SEGA\n    *********************/\n\n    //For Owner to create new Segregated Account\n    function createNewSega() public isOwner returns (address) {\n        require(IRCU(RCU).verifySF(segaFactory));\n        address _sega = ISegaFactP(segaFactory).createSega(address(this), owner);\n        itemIn(_sega, SegaList, SegaMap);\n        emit NewSegaCreated(_sega);\n        return _sega;\n    }\n\n    //For Owner to Custom Sega Account\n    function createCustomSega(address _segaFactory, uint256 index) public isOwner returns (address) {\n        require(IRCU(RCU).verifySF(_segaFactory));\n        address _sega = ISegaFactP(_segaFactory).createSega(address(this), owner, index);\n        itemIn(_sega, SegaList, SegaMap);\n        emit NewSegaCreated(_sega);\n        return _sega;\n    }\n\n    /*********************\n    SEGA Admin Functions\n    *********************/\n\n    //-----To Pause & Unpause Account Transfers-----//\n\n    function pauseSega(address _sega) public isOwner isSega(_sega) {\n        ISega(_sega).pauseTransfers();\n        emit SegaFrozen(_sega, 1);\n    }\n    function unpauseSega(address _sega) public isOwner isSega(_sega) {\n        ISega(_sega).unpauseTransfers();\n        emit SegaFrozen(_sega, 0);\n    }\n\n    function changeTrader(address _sega, address _newTrader) public isOwner isSega(_sega) {\n        ISega(_sega).changeTrader(_newTrader);\n        emit SegaTraderChanged(_sega, _newTrader);\n    }\n    \n    /****************************\n    Force Recall of Sega Balances\n    *****************************/\n\n    function RecallFromSega(address _sega, uint256 _amount) public isOwner isSega(_sega) {\n        ISega(_sega).returnToVault(_amount);\n        emit SegaRecall(_sega, address(0), _amount);\n    }\n    \n    function RecallFromSega(address _sega, address _token, uint256 _amount) public isOwner isSega(_sega) {\n        _notZero(_token);\n        ISega(_sega).returnToVault(_token, _amount);\n        emit SegaRecall(_sega, _token, _amount);\n    }    \n    \n    /*------------------------------------------\n    Internal Functions\n    -------------------------------------------*/\n\n\n    function itemIn(address _item, address[] storage _list, mapping(address=>uint) storage _map) internal {\n        if (_map[_item] != 0 ) {\n            require( _list[_map[_item]] == address(0), \"Already Enabled\");\n            _list[ _map[_item] ] = _item;\n        } else {\n        _map[_item] = _list.length;\n        _list.push(_item);\n        }\n    }\n\n    function checkTxn(bool success) internal pure {\n        require(success, \"Transfer Unsuccesful\");\n    }\n    \n\n    /*------------------------------------------\n    View Only Functions\n    -------------------------------------------*/\n\n    //For Owner or Backup Account to view the Backup Account address\n    function getRecoveryInfo() public view returns (address, address, uint256, uint256) {\n        return (owner, backupAccount, releaseTime, unlockDays);\n    }\n\n    //For Owner to view List of Linked Sega(s)\n    function viewSegaList() public view returns (address[] memory) {\n        return SegaList;\n    }\n\n}\n\ninterface IRCU{\n    function verifySF(address) external returns (bool);\n}",
  "sourceMap": "200:9005:2:-:0;;;3091:338;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;3173:10:2;;;;;;;3194:23;;;;;;3230:5;:23;;-1:-1:-1;;;;;3230:23:2;;-1:-1:-1;;;;;;3230:23:2;;;;;;;;-1:-1:-1;3264:22:2;;;;;;;;;;3310:3;3297:10;:16;;;3356:19;;334:8;;3356:19;:::i;:::-;3338:37;;:15;:37;:::i;:::-;3324:11;:51;-1:-1:-1;;3396:8:2;:25;;;;;;;-1:-1:-1;3396:25:2;;;;;;;;-1:-1:-1;;;;;;3396:25:2;;;-1:-1:-1;200:9005:2;;14:177:5;93:13;;-1:-1:-1;;;;;135:31:5;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:2;;;369:1;366;359:12;321:2;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;311:263;;;;;:::o;579:128::-;619:3;650:1;646:6;643:1;640:13;637:2;;;656:18;;:::i;:::-;-1:-1:-1;692:9:5;;627:80::o;712:168::-;752:7;818:1;814;810:6;806:14;803:1;800:21;795:1;788:9;781:17;777:45;774:2;;;825:18;;:::i;:::-;-1:-1:-1;865:9:5;;764:116::o;885:127::-;946:10;941:3;937:20;934:1;927:31;977:4;974:1;967:15;1001:4;998:1;991:15;917:95;200:9005:2;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/2_VaultP.sol",
  "type": "contract"
}