{"version":3,"sources":["../node_modules/react-feather/dist/icons/edit-3.js","views/Manager/addRemove/AddExeVault.js","views/Manager/addRemove/AddExeSega.js","views/Manager/addRemove/AddRemove.js","views/Manager/Create/CreateVaultModal.js","views/Manager/Create/CreateSegaModal.js","views/Manager/Create/CreatVs.js","../node_modules/react-feather/dist/icons/unlock.js","views/Manager/recover/RecoverAccModal.js","views/Manager/recover/RecoverAcc.js","../node_modules/react-feather/dist/icons/tool.js","views/Manager/security/VaultSecurity/ModifyVault.js","views/Manager/security/VaultSecurity/ChildrenSega.js","views/Manager/security/VaultSecurity/VaultSecurity.js","views/Manager/security/SegaSecurity/ForceRecall.js","views/Manager/security/SegaSecurity/SegaSecurity.js","views/Manager/security/ManageSecurity.js","views/Manager/importExport/ImportExport.js","views/Manager/Manager.js","../node_modules/reactstrap/es/Table.js","../node_modules/reactstrap/es/ModalFooter.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Edit3","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","propTypes","PropTypes","string","oneOfType","number","displayName","AddExeVault","openexevault","handleExeVaultModal","Modal","className","isOpen","toggle","ModalHeader","ModalBody","style","display","flexDirection","justifyContent","alignItems","Row","Col","FormGroup","Label","for","fontSize","Input","type","id","ModalFooter","Button","Ripple","onClick","AddExeSega","openexesega","handleExeSegaModal","tag","classNamePrefix","defaultValue","name","options","value","label","isClearable","AddRemove","useState","exevaultmodal","setExeVaultModal","exesegamodal","setExeSegaModal","Card","CardBody","md","CardHeader","CardTitle","CreateVaultModal","openvault","handleVaultModal","CreateSegaModal","opensega","handleSegaModal","CreateVs","vaultmodal","setVaultModal","segamodal","setSegaModal","Unlock","x","y","rx","ry","RecoverAccModal","openrecovermodal","handleRecoverModal","href","RecoverAcc","recovermodal","setRecoverModal","Tool","ModifyVault","openmodifyvaultmodal","handleModifyVaultModal","InputGroup","InputGroupAddon","addonType","outline","ChildrenSega","openchildsegamodal","handleChildSegatModal","Table","minWidth","VaultSecurity","openvaultsec","handleVaultSecModal","modifyvaultmodal","setModifyVaultModal","childsegamodal","setChildSegaModal","ForceRecall","openrecallmodal","handlRecoverModal","SegaSecurity","opensegasec","handleSegaSecModal","recallmodal","setRecallModal","ManageSecurity","vaultsecmodal","setVaultSecModal","segasecmodal","setSegaSecModal","ImportExport","UncontrolledButtonDropdown","direction","DropdownToggle","DropdownMenu","right","DropdownItem","downloadCSV","data","Manager","cssModule","object","bordered","bool","borderless","striped","dark","hover","responsive","tagPropType","responsiveTag","innerRef","func","props","Tag","ResponsiveTag","attributes","classes","mapToCssModules","classNames","table","responsiveClassName","defaultProps"],"mappings":"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","file":"static/js/19.38f033ed.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Edit3 = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 20h9\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z\"\n  }));\n});\nEdit3.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nEdit3.displayName = 'Edit3';\nexport default Edit3;","import { X, Edit3  } from 'react-feather'\r\nimport {Modal, ModalBody, ModalHeader, ModalFooter, Row, Col, Input, Label, FormGroup, Button} from 'reactstrap'\r\n\r\nconst AddExeVault = ({ openexevault, handleExeVaultModal}) => {\r\n\r\n    // const CloseBtn = <X className='cursor-pointer' size={25} onClick={handleModal} />\r\n\r\n    return (\r\n        <Modal className='modal-dialog-centered' isOpen={openexevault} toggle={handleExeVaultModal} >\r\n                <ModalHeader  toggle={handleExeVaultModal} >\r\n                    Add Existing Vault\r\n                </ModalHeader>\r\n                <ModalBody style={{ display: 'flex', flexDirection: 'column', justifyContent:'center', alignItems:'center'}}>\r\n                    <Row style={{ display: 'flex', flexDirection: 'column', justifyContent:'center', alignItems:'center'}}>\r\n                        <Col>\r\n                            <h3>Start tracking your alreadt existing Vaults.</h3>\r\n                        </Col>\r\n                        <Col>\r\n                            <p>All names set by you are stored locally on your PC and are not collected by Risk Protocol.</p>\r\n                        </Col>  \r\n                        <Col>\r\n                            <FormGroup>\r\n                                <Label for='nickname' style={{fontSize: \"1.3em\"}}>Nickname</Label>\r\n                                <Input type='text' id='nickname' />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col>\r\n                        <FormGroup>\r\n                                <Label for='accadrs' style={{fontSize: \"1.3em\"}}>Account Address</Label>\r\n                                <Input type='text' id='accadrs' />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n                <ModalFooter className='justify-content-center'>\r\n                    <Button.Ripple color='primary' onClick={handleExeVaultModal}>\r\n                        <Edit3  className='mr-1' size={17}/>\r\n                        Create\r\n                    </Button.Ripple>\r\n                </ModalFooter>\r\n                \r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddExeVault","import Select from 'react-select'\r\nimport { X, Edit3  } from 'react-feather'\r\nimport { selectThemeColors } from '@utils'\r\nimport {Modal, ModalBody, ModalHeader, ModalFooter, Row, Col, Input, Label, FormGroup, Button} from 'reactstrap'\r\n\r\nconst AddExeSega = ({ openexesega, handleExeSegaModal}) => {\r\n\r\n    // const CloseBtn = <X className='cursor-pointer' size={25} onClick={handleModal} />\r\n\r\n    const colourOptions = [\r\n        { value: 'adrs', label: 'Address 1' },\r\n        { value: 'adrs', label: 'Address 2' },\r\n        { value: 'adrs', label: 'Address 3' },\r\n        { value: 'adrs', label: 'Address 4' },\r\n        { value: 'adrs', label: 'Address 5' }\r\n      ]\r\n\r\n    return (\r\n        <Modal className='modal-dialog-centered' isOpen={openexesega} toggle={handleExeSegaModal} >\r\n                <ModalHeader tag='h2' toggle={handleExeSegaModal}>\r\n                    Add Existing Sega\r\n                </ModalHeader>\r\n                <ModalBody style={{ display: 'flex', flexDirection: 'column', justifyContent:'center', alignItems:'center'}}>\r\n                    <Row style={{ display: 'flex', flexDirection: 'column', justifyContent:'center', alignItems:'center'}}>\r\n                        <Col>\r\n                        <h3>Start tracking your alreadt existing Sega.</h3>\r\n                        </Col>\r\n                        <Col>\r\n                            <p>Add external Vaults first, and then their Sega.</p>\r\n                        </Col>\r\n                        <Col>\r\n                            <p>All names set by you are stored locally on your PC and are not collected by Risk Protocol.</p>\r\n                        </Col>\r\n                        <Col className='mb-1'>\r\n                            <Label style={{fontSize: \"1.3em\"}}>Parent Vault</Label>\r\n                            <Select\r\n                            // theme={selectThemeColors}\r\n                            className='react-select'\r\n                            classNamePrefix='select'\r\n                            defaultValue=''\r\n                            name='clear'\r\n                            options={colourOptions}\r\n                            isClearable\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <FormGroup>\r\n                                <Label for='nickname' style={{fontSize: \"1.3em\"}}>Nickname</Label>\r\n                                <Input type='text' id='nickname' />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col>\r\n                        <FormGroup>\r\n                                <Label for='accadrs' style={{fontSize: \"1.3em\"}}>Account Address</Label>\r\n                                <Input type='text' id='accadrs' />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n                <ModalFooter className='justify-content-center'>\r\n                    <Button.Ripple color='primary'  onClick={handleExeSegaModal}>\r\n                        <Edit3  className='mr-1' size={25}/>\r\n                            Create\r\n                    </Button.Ripple>\r\n                </ModalFooter>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddExeSega","import React, {useState} from 'react'\r\nimport {\r\n    Card, \r\n    CardHeader,\r\n    CardTitle,\r\n    CardBody,\r\n    Button,\r\n    Row,\r\n    Col\r\n  } from 'reactstrap'\r\n  import { Edit3 } from \"react-feather\"\r\nimport CardText from 'reactstrap/lib/CardText'\r\nimport AddExeVault from './AddExeVault'\r\nimport AddExeSega from './AddExeSega'\r\n\r\nconst AddRemove = () => {\r\n    const [exevaultmodal, setExeVaultModal] = useState(false)\r\n    const handleExeVaultModal = () => setExeVaultModal(!exevaultmodal)\r\n\r\n    const [exesegamodal, setExeSegaModal] = useState(false)\r\n    const handleExeSegaModal = () => setExeSegaModal(!exesegamodal)\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n                    <Row style={{display:'flex', flexDirection: 'row'}}>\r\n                        <Col md='6'>\r\n                            <CardHeader>\r\n                                <CardTitle>Add or Remove</CardTitle>\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <CardText>Show or hide your existing accounts from view.</CardText>                                \r\n                            </CardBody>\r\n                        </Col>\r\n                        <Col  md='6' style={{display: 'flex', justifyContent: 'flex-end', alignItems: 'center'}}>\r\n                            <Button.Ripple className='mr-1 mb-1' size='lg' color='primary' style={{fontSize: '1.7em'}} onClick={handleExeVaultModal}><Edit3 className='mr-1' size={25}/>Vault</Button.Ripple>\r\n                            <Button.Ripple className='mr-1 mb-1' size='lg' color='primary' style={{fontSize: '1.7em'}} onClick={handleExeSegaModal}><Edit3 className='mr-1' size={25}/>Sega</Button.Ripple>\r\n                        </Col>\r\n                    </Row>\r\n                </CardBody>\r\n            </Card>\r\n            <AddExeVault openexevault={exevaultmodal} handleExeVaultModal={handleExeVaultModal} />\r\n            <AddExeSega openexesega={exesegamodal} handleExeSegaModal={handleExeSegaModal} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddRemove","import { X, PlusCircle } from 'react-feather'\r\nimport {Modal, ModalBody, ModalHeader, ModalFooter, Row, Col, Input, Label, FormGroup, Button} from 'reactstrap'\r\n\r\nconst CreateVaultModal = ({ openvault, handleVaultModal}) => {\r\n\r\n    // const CloseBtn = <X className='cursor-pointer' size={25} onClick={handleModal} />\r\n\r\n    return (\r\n        <Modal className='modal-dialog-centered' isOpen={openvault} toggle={handleVaultModal} >\r\n                <ModalHeader tag='h2' toggle={handleVaultModal} >\r\n                    New Vault\r\n                </ModalHeader>\r\n                <ModalBody style={{ display: 'flex', flexDirection: 'column', justifyContent:'center', alignItems:'center'}}>\r\n                    <Row style={{ display: 'flex', flexDirection: 'column', justifyContent:'center', alignItems:'center'}}>\r\n                        <Col>\r\n                            <h3>Create a new independent Vault.</h3>\r\n                        </Col>\r\n                        <Col>\r\n                            <p>All names set by you are stored locally on your PC and are not collected by Risk Protocol. Current user will also be designated as the owner \r\n                                for the new Vault.\r\n                            </p>\r\n                        </Col>\r\n                        <Col>\r\n                            <p>You will be required to pay the network fees for new Vault creation.</p>\r\n                        </Col>\r\n                        <Col>\r\n                            <FormGroup>\r\n                                <Label for='nickname' style={{fontSize: \"1.3em\"}}>Nickname</Label>\r\n                                <Input type='text' id='nickname' />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n                <ModalFooter className='justify-content-center'>\r\n                    <Button.Ripple  color='primary' onClick={handleVaultModal}>\r\n                        <PlusCircle className='mr-1' size={17}/>\r\n                        Create\r\n                    </Button.Ripple>\r\n                </ModalFooter>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default CreateVaultModal","import Select from 'react-select'\r\nimport { X, PlusCircle } from 'react-feather'\r\nimport { selectThemeColors } from '@utils'\r\nimport {Modal, ModalBody, ModalHeader, ModalFooter, Row, Col, Input, Label, FormGroup, Button} from 'reactstrap'\r\n\r\nconst CreateSegaModal = ({ opensega, handleSegaModal}) => {\r\n\r\n    // const CloseBtn = <X className='cursor-pointer' size={25} onClick={handleModal} />\r\n\r\n    const colourOptions = [\r\n        { value: 'adrs', label: 'Address 1' },\r\n        { value: 'adrs', label: 'Address 2' },\r\n        { value: 'adrs', label: 'Address 3' },\r\n        { value: 'adrs', label: 'Address 4' },\r\n        { value: 'adrs', label: 'Address 5' }\r\n      ]\r\n\r\n    return (\r\n        <Modal className='modal-dialog-centered' isOpen={opensega} toggle={handleSegaModal} >\r\n                <ModalHeader tag='h2' toggle={handleSegaModal}>\r\n                    New Sega\r\n                </ModalHeader>\r\n                <ModalBody style={{ display: 'flex', flexDirection: 'column', justifyContent:'center', alignItems:'center'}}>\r\n                    <Row style={{ display: 'flex', flexDirection: 'column', justifyContent:'center', alignItems:'center'}}>\r\n                        <Col>\r\n                            <h3>Create a new independent Sega linked to any of your Vault.</h3>\r\n                        </Col>\r\n                        <Col>\r\n                            <p>All names set by you are stored locally on your PC and are not collected by Risk Protocol. Current user will also be designated as the owner \r\n                                for the new Vault.\r\n                            </p>\r\n                        </Col>\r\n                        <Col>\r\n                            <p>You will be required to pay the network fees for new Vault creation.</p>\r\n                        </Col>\r\n                        <Col className='mb-1'>\r\n                            <Label style={{fontSize: \"1.3em\"}}>Parent Vault</Label>\r\n                            <Select\r\n                            // theme={selectThemeColors}\r\n                            className='react-select'\r\n                            classNamePrefix='select'\r\n                            defaultValue=''\r\n                            name='clear'\r\n                            options={colourOptions}\r\n                            isClearable\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <FormGroup>\r\n                                <Label for='nickname' style={{fontSize: \"1.3em\"}}>Nickname</Label>\r\n                                <Input type='text' id='nickname' />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n                <ModalFooter className='justify-content-center'>\r\n                    <Button.Ripple color='primary'  onClick={handleSegaModal}>\r\n                        <PlusCircle className='mr-1' size={25}/>\r\n                            Create\r\n                    </Button.Ripple>\r\n                </ModalFooter>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default CreateSegaModal","import React, { useState } from 'react'\r\nimport {\r\n    Card, \r\n    CardHeader,\r\n    CardTitle,\r\n    CardBody,\r\n    Button,\r\n    Row,\r\n    Col\r\n  } from 'reactstrap'\r\n  import { PlusCircle } from \"react-feather\"\r\nimport CardText from 'reactstrap/lib/CardText'\r\nimport CreateVaultModal from './CreateVaultModal'\r\nimport CreateSegaModal from './CreateSegaModal'\r\n\r\nconst CreateVs = () => {\r\n    const [vaultmodal, setVaultModal] = useState(false)\r\n    const handleVaultModal = () => setVaultModal(!vaultmodal)\r\n\r\n    const [segamodal, setSegaModal] = useState(false)\r\n    const handleSegaModal = () => setSegaModal(!segamodal)\r\n    return (\r\n        <div>            \r\n            <Card>\r\n                <CardBody>\r\n                    <Row style={{display:'flex', flexDirection: 'row'}}>\r\n                        <Col md='6'>\r\n                            <CardHeader>\r\n                                <CardTitle>Create New</CardTitle>\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <CardText>Create new Vault and SEGAs. Account creations incur network fees.</CardText>                                \r\n                            </CardBody>\r\n                        </Col>\r\n                        <Col  md='6' style={{display: 'flex', justifyContent: 'flex-end', alignItems: 'center'}}>\r\n                            <Button.Ripple className='mr-1 mb-1' size='lg' color='primary' style={{fontSize: '1.7em'}} onClick={handleVaultModal}><PlusCircle className='mr-1' size={25}/>Vault</Button.Ripple>\r\n                            <Button.Ripple className='mr-1 mb-1' size='lg' color='primary' style={{fontSize: '1.7em'}} onClick={handleSegaModal}><PlusCircle className='mr-1' size={25}/>Sega</Button.Ripple>\r\n                        </Col>\r\n                    </Row>\r\n                </CardBody>\r\n            </Card>\r\n            <CreateVaultModal openvault={vaultmodal} handleVaultModal={handleVaultModal} />\r\n            <CreateSegaModal opensega={segamodal} handleSegaModal={handleSegaModal} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateVs","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Unlock = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"rect\", {\n    x: \"3\",\n    y: \"11\",\n    width: \"18\",\n    height: \"11\",\n    rx: \"2\",\n    ry: \"2\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 11V7a5 5 0 0 1 9.9-1\"\n  }));\n});\nUnlock.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nUnlock.displayName = 'Unlock';\nexport default Unlock;","import { X, Unlock  } from 'react-feather'\r\nimport {Modal, ModalBody, ModalHeader, ModalFooter, Row, Col, Input, Label, FormGroup, Button} from 'reactstrap'\r\n\r\nconst RecoverAccModal = ({ openrecovermodal, handleRecoverModal}) => {\r\n\r\n    // const CloseBtn = <X className='cursor-pointer' size={25} onClick={handleModal} />\r\n\r\n    return (\r\n        \r\n        <Modal className='modal-dialog-centered' isOpen={openrecovermodal} toggle={handleRecoverModal} >\r\n                <ModalHeader tag='h1' toggle={handleRecoverModal} >\r\n                    Recover Vault\r\n                </ModalHeader>\r\n                <ModalBody style={{ display: 'flex', flexDirection: 'column', justifyContent:'center', alignItems:'center'}}>\r\n                    <Row style={{ display: 'flex', flexDirection: 'column', justifyContent:'center', alignItems:'center'}}>\r\n                        <Col>\r\n                            <h3>Recovery is only possible by the designated Backup Account and only after the owner has been inactive for the time period as set by Owner.</h3>\r\n                        </Col>\r\n                        <Col className=\"my-1\">\r\n                        <FormGroup>\r\n                                <Label for='vaultadrs' style={{fontSize: \"1.3em\"}}>Vault Address</Label>\r\n                                <Input type='text' id='vaultadrs' />\r\n                                <p style={{fontSize: '.75em'}}>If you are uncertain of the vault address, you can still find it. If you know the account address of the Owner. Check documentation \r\n                                <a href='#' style={{color:'red'}}> here</a> to see how.</p>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n                <ModalFooter className='justify-content-center'>\r\n                    <Button.Ripple color='primary' onClick={handleRecoverModal}>\r\n                        <Unlock  className='mr-1' size={17}/>\r\n                        Recover\r\n                    </Button.Ripple>\r\n                </ModalFooter>\r\n                \r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default RecoverAccModal","import React, { useState } from 'react'\r\nimport {\r\n    Card, \r\n    CardHeader,\r\n    CardTitle,\r\n    CardBody,\r\n    Button,\r\n    Row,\r\n    Col\r\n  } from 'reactstrap'\r\n  import { Unlock } from \"react-feather\"\r\nimport CardText from 'reactstrap/lib/CardText'\r\nimport RecoverAccModal from './RecoverAccModal'\r\n\r\nconst RecoverAcc = () => {\r\n    const [recovermodal, setRecoverModal] = useState(false)\r\n    const handleRecoverModal = () => setRecoverModal(!recovermodal)\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n                    <Row style={{display:'flex', flexDirection: 'row'}}>\r\n                        <Col md='6'>\r\n                            <CardHeader>\r\n                                <CardTitle>Recover</CardTitle>\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <CardText>Reclaim your Vault and SEGAs through the designated Backup Account.</CardText>                                \r\n                            </CardBody>\r\n                        </Col>\r\n                        <Col  md='6' style={{display: 'flex', justifyContent: 'flex-end', alignItems: 'center'}}>\r\n                            <Button.Ripple className='mr-1 mb-1' size='lg' color='primary' style={{fontSize: '1.7em'}} onClick={handleRecoverModal}><Unlock className='mr-1' size={25}/>Vault</Button.Ripple>\r\n                        </Col>\r\n                    </Row>\r\n                </CardBody>\r\n            </Card>\r\n            <RecoverAccModal openrecovermodal={recovermodal} handleRecoverModal={handleRecoverModal}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecoverAcc","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Tool = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z\"\n  }));\n});\nTool.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nTool.displayName = 'Tool';\nexport default Tool;","import {BsSafe2} from 'react-icons/bs'\r\nimport {Modal, ModalBody, ModalHeader, InputGroup, InputGroupAddon, Row, Col, Input, Label, FormGroup, Button} from 'reactstrap'\r\n\r\nconst ModifyVault = ({ openmodifyvaultmodal, handleModifyVaultModal}) => {\r\n\r\n    // const CloseBtn = <X className='cursor-pointer' size={25} onClick={handleModal} />\r\n    return (\r\n        <Modal className='modal-dialog-centered modal-lg' isOpen={openmodifyvaultmodal} toggle={handleModifyVaultModal} >\r\n                <ModalHeader tag='h1' toggle={handleModifyVaultModal}>\r\n                    Modify Vault Settings\r\n                </ModalHeader>\r\n                <ModalBody style={{ display: 'flex', flexDirection: 'column', justifyContent:'center', alignItems:'center'}}>\r\n                    <Row style={{ display: 'flex', flexDirection: 'column', justifyContent:'center', alignItems:'center'}}>\r\n                        <Col>\r\n                            <h3>Update your Vault with new security parameters and modify.</h3>\r\n                        </Col>\r\n                        <Col className='my-1'>\r\n                            <Row className='d-flex flex-row'>\r\n                                <Col md='1'><BsSafe2 size={40}/></Col>\r\n                                <Col className='d-flex flex-column justify-content-start'>\r\n                                    <h3>SBI Vault</h3>\r\n                                    <h5>0x271AC3C918C8C49a1723058e82A985ad0599EFe2</h5>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col>\r\n                            <hr />\r\n                        </Col>\r\n                        <Col>\r\n                            <FormGroup>\r\n                                <Label for='backupacc' style={{fontSize: \"1.3em\"}}>Backup Account</Label>\r\n                                <InputGroup>\r\n                                <Input type='text' id='backupacc' value='enter new backup account here..'/>\r\n                                <InputGroupAddon addonType='append'>\r\n                                    <Button color='primary' outline>\r\n                                    Modify\r\n                                    </Button>\r\n                                </InputGroupAddon>\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col>\r\n                            <FormGroup>\r\n                                <Label for='inactivedays' style={{fontSize: \"1.3em\"}}>Inactive After Days</Label>\r\n                                <InputGroup>\r\n                                <Input type='text' id='inactivedays' value='enter no. of days before owner is declared inactive'/>\r\n                                <InputGroupAddon addonType='append'>\r\n                                    <Button color='primary' outline>\r\n                                    Modify\r\n                                    </Button>\r\n                                </InputGroupAddon>\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col>\r\n                            <FormGroup>\r\n                                <Label for='hide' style={{fontSize: \"1.3em\"}}>Hide</Label>\r\n                                <InputGroup>\r\n                                <Input type='text' id='hide' value='Hide from view and stop tracking this Vault'/>\r\n                                <InputGroupAddon addonType='append'>\r\n                                    <Button color='primary' outline>\r\n                                    Hide\r\n                                    </Button>\r\n                                </InputGroupAddon>\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                </ModalBody>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ModifyVault","import {BsSafe2} from 'react-icons/bs'\r\nimport {FaRegCopy} from 'react-icons/fa'\r\nimport {GoLinkExternal} from 'react-icons/go'\r\nimport {Modal, ModalBody, ModalHeader, ModalFooter, Row, Col, Button, Table} from 'reactstrap'\r\n\r\nconst ChildrenSega = ({ openchildsegamodal, handleChildSegatModal}) => {\r\n\r\n    // const CloseBtn = <X className='cursor-pointer' size={25} onClick={handleModal} />\r\n    return (\r\n        <Modal className='modal-dialog-centered modal-lg' isOpen={openchildsegamodal} toggle={handleChildSegatModal} >\r\n                <ModalHeader tag='h1' toggle={handleChildSegatModal}>\r\n                    Children Sega\r\n                </ModalHeader>\r\n                <ModalBody style={{ display: 'flex', flexDirection: 'column', justifyContent:'center', alignItems:'center'}}>\r\n                    <Row style={{ display: 'flex', flexDirection: 'column', justifyContent:'center', alignItems:'center'}}>\r\n                        <Col>\r\n                            <h3>View all the Sega created through your Vault and linked to it</h3>\r\n                        </Col>\r\n                        <Col className='my-1'>\r\n                            <Row className='d-flex flex-row'>\r\n                                <Col md='1'><BsSafe2 size={40}/></Col>\r\n                                <Col className='d-flex flex-column justify-content-start'>\r\n                                    <h3>SBI Vault</h3>\r\n                                    <h5>0x271AC3C918C8C49a1723058e82A985ad0599EFe2</h5>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col>\r\n                            <hr />\r\n                        </Col>\r\n                        <Col>\r\n                            <Table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Sega Address</th>\r\n                                        <th>Created on</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td >\r\n                                            <input type='checkbox'/>{' '} 0x851De59419E68133803eC175159b9F3ecFf8C5A0 {' '} <FaRegCopy /> {' '} <GoLinkExternal />\r\n                                        </td>\r\n                                        <td>12 Sep 2021</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td >\r\n                                            <input type='checkbox'/>{' '} 0x851De59419E68133803eC175159b9F3ecFf8C5A0 {' '} <FaRegCopy /> {' '} <GoLinkExternal />\r\n                                        </td>\r\n                                        <td>12 Sep 2021</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td >\r\n                                            <input type='checkbox'/>{' '} 0x851De59419E68133803eC175159b9F3ecFf8C5A0 {' '} <FaRegCopy /> {' '} <GoLinkExternal />\r\n                                        </td>\r\n                                        <td>12 Sep 2021</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n                <ModalFooter className='justify-content-center'>\r\n                        <Button.Ripple className='mx-1' style={{minWidth: '10vw'}} color='primary'  onClick={handleChildSegatModal}>\r\n                                Add Selected Sega\r\n                        </Button.Ripple>\r\n                        <Button.Ripple className='mx-1' style={{minWidth: '10vw'}} color='primary'  onClick={handleChildSegatModal}>\r\n                                Add All Sega\r\n                        </Button.Ripple>\r\n                </ModalFooter>\r\n        </Modal>\r\n    ) \r\n}\r\n\r\nexport default ChildrenSega","import React, { useState } from 'react'\r\nimport Select from 'react-select'\r\nimport { selectThemeColors } from '@utils'\r\nimport {Modal, ModalBody, ModalHeader, ModalFooter, Row, Col, Input, Label, FormGroup, Button} from 'reactstrap'\r\nimport ModifyVault from './ModifyVault'\r\nimport ChildrenSega from './ChildrenSega'\r\n\r\nconst VaultSecurity = ({ openvaultsec, handleVaultSecModal}) => {\r\n\r\n    // const CloseBtn = <X className='cursor-pointer' size={25} onClick={handleModal} />\r\n\r\n    const colourOptions = [\r\n        { value: 'adrs', label: 'Address 1' },\r\n        { value: 'adrs', label: 'Address 2' },\r\n        { value: 'adrs', label: 'Address 3' },\r\n        { value: 'adrs', label: 'Address 4' },\r\n        { value: 'adrs', label: 'Address 5' }\r\n      ]\r\n\r\n    const [modifyvaultmodal, setModifyVaultModal] = useState(false)\r\n    const handleModifyVaultModal = () => setModifyVaultModal(!modifyvaultmodal)\r\n\r\n    const [childsegamodal, setChildSegaModal] = useState(false)\r\n    const handleChildSegatModal = () => setChildSegaModal(!childsegamodal)\r\n\r\n    return (\r\n        <div>\r\n            <Modal className='modal-dialog-centered' isOpen={openvaultsec} toggle={handleVaultSecModal} >\r\n                    <ModalHeader tag='h2' toggle={handleVaultSecModal}>\r\n                        Select Account to Manage\r\n                    </ModalHeader>\r\n                    <ModalBody style={{ display: 'flex', flexDirection: 'column', justifyContent:'center', alignItems:'center'}}>\r\n                        <Row style={{ display: 'flex', flexDirection: 'column', justifyContent:'center', alignItems:'center'}}>\r\n                            <Col className='mb-1'>\r\n                                <Label style={{fontSize: \"1.3em\"}}>Account</Label>\r\n                                <Select\r\n                                // theme={selectThemeColors}\r\n                                className='react-select'\r\n                                classNamePrefix='select'\r\n                                defaultValue=''\r\n                                name='clear'\r\n                                options={colourOptions}\r\n                                isClearable\r\n                                />\r\n                            </Col>\r\n                            <Col>\r\n                                <hr />\r\n                            </Col>\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <Label for='ownacc' style={{fontSize: \"1.3em\"}}>Owner</Label>\r\n                                    <Input type='text' id='ownacc'  value='John - 0x02fe03c2a1c147C7D3a256386f2D2f0eEE3CEF98'/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <Label for='backupacc' style={{fontSize: \"1.3em\"}}>Backup Account</Label>\r\n                                    <Input type='text' id='backupacc' value='Morgan - x45c2f797e52e5D1c6C4afC6EBc61eFeb9de1E9da'/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <FormGroup>\r\n                                        <Label for='days' style={{fontSize: \"1.2em\"}}>Inactive after Days</Label>\r\n                                        <Input type='text' id='days' value='365 Days'/>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <FormGroup>\r\n                                        <Label for='rcvrydate' style={{fontSize: \"1.2em\"}}>Current Recovery Date</Label>\r\n                                        <Input type='date' id='rcvrydate' value='01-01-2022'/>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ModalBody>\r\n                    <ModalFooter className='justify-content-center'>\r\n                        <Button.Ripple className='mx-1' style={{minWidth: '10vw'}} color='primary'  onClick={handleModifyVaultModal}>\r\n                                Modify Vault\r\n                        </Button.Ripple>\r\n                        <Button.Ripple className='mx-1' style={{minWidth: '10vw'}} color='primary'  onClick={handleChildSegatModal}>\r\n                                View All Child Sega\r\n                        </Button.Ripple>\r\n                    </ModalFooter>\r\n            </Modal>\r\n            <ModifyVault openmodifyvaultmodal={modifyvaultmodal} handleModifyVaultModal={handleModifyVaultModal} />\r\n            <ChildrenSega openchildsegamodal={childsegamodal} handleChildSegatModal={handleChildSegatModal}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VaultSecurity","import {BsSafe2, BsArrowDown} from 'react-icons/bs'\r\nimport Select from 'react-select'\r\nimport {Modal, ModalBody, ModalHeader, ModalFooter, Row, Col, Input, Label, FormGroup, Button, CustomInput} from 'reactstrap'\r\nimport Badge from 'reactstrap/lib/Badge'\r\n\r\nconst ForceRecall = ({ openrecallmodal, handlRecoverModal}) => {\r\n\r\n    const colourOptions = [\r\n        { value: 'adrs', label: 'Address 1' },\r\n        { value: 'adrs', label: 'Address 2' },\r\n        { value: 'adrs', label: 'Address 3' },\r\n        { value: 'adrs', label: 'Address 4' },\r\n        { value: 'adrs', label: 'Address 5' }\r\n      ]\r\n\r\n    // const CloseBtn = <X className='cursor-pointer' size={25} onClick={handleModal} />\r\n    return (\r\n        <Modal className='modal-dialog-centered modal-lg' isOpen={openrecallmodal} toggle={handlRecoverModal} >\r\n                <ModalHeader tag='h1' toggle={handlRecoverModal}>\r\n                    Force Recall\r\n                </ModalHeader>\r\n                <ModalBody style={{ display: 'flex', flexDirection: 'column', justifyContent:'center', alignItems:'center'}}>\r\n                    <Row style={{ display: 'flex', flexDirection: 'column', justifyContent:'center', alignItems:'center'}}>\r\n                        <Col>\r\n                            <h3>For Risk Officers and Vault operators to pull Sega assests back into its Parent Vault bypassing the Sega operator.</h3>\r\n                        </Col>\r\n                        <Col className='my-1'>\r\n                            <Row className='d-flex flex-row'>\r\n                                <Col md='1'><BsSafe2 size={40}/></Col>\r\n                                <Col className='d-flex flex-column justify-content-start'>\r\n                                    <h3>SBI Savings</h3>\r\n                                    <h5>0x2EcE47215383CEc4493617f7E3A88AC6df33Ce6d</h5>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col className='d-flex flex-row mb-1'>\r\n                            <Col md='1'><BsArrowDown size={40}/></Col>\r\n                            <Col>\r\n                                <hr />\r\n                            </Col>\r\n                        </Col>\r\n                        <Col>\r\n                            <FormGroup>\r\n                                <Label for='parentvault' style={{fontSize: \"1.3em\"}}>Parent Vault</Label>\r\n                                <Input type='text' id='parentvault' value='SBI Vault - 0x271AC3C918C8C49a1723058e82A985ad0599EFe2'/>                                \r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col className='mb-1'>\r\n                                <Label style={{fontSize: \"1.3em\"}}>Select Assest</Label>\r\n                                <Select\r\n                                // theme={selectThemeColors}\r\n                                className='react-select'\r\n                                classNamePrefix='select'\r\n                                defaultValue=''\r\n                                name='clear'\r\n                                options={colourOptions}\r\n                                isClearable\r\n                                />\r\n                        </Col>\r\n                        <Col>\r\n                            <FormGroup>\r\n                                <Col className='d-flex flex-row justify-content-between'>\r\n                                    <Label for='amount' style={{fontSize: \"1.3em\"}}>Amount</Label>\r\n                                    <a href='#' style={{color:'red'}}> Send Max</a>\r\n                                    {/* <CustomInput\r\n                                        type='switch'\r\n                                        id='exampleCustomSwitch'\r\n                                        name='customSwitch'\r\n                                        label='Send Max'\r\n                                        inline\r\n                                    /> */}\r\n                                </Col>\r\n                                <Input type='text' id='amount'/>                                \r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>                \r\n                <ModalFooter className='justify-content-center'>\r\n                        <Button.Ripple color='primary'  onClick={handlRecoverModal}>\r\n                                Force Recall\r\n                        </Button.Ripple>\r\n                    </ModalFooter>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ForceRecall","import React, { useState } from 'react'\r\nimport Select from 'react-select'\r\nimport { selectThemeColors } from '@utils'\r\nimport { Modal, ModalBody, ModalHeader, ModalFooter, Row, Col, Input, Label, FormGroup, Button } from 'reactstrap'\r\nimport ForceRecall from './ForceRecall'\r\n\r\nconst SegaSecurity = ({ opensegasec, handleSegaSecModal }) => {\r\n\r\n    // const CloseBtn = <X className='cursor-pointer' size={25} onClick={handleModal} />\r\n\r\n    const colourOptions = [\r\n        { value: 'adrs', label: 'Address 1' },\r\n        { value: 'adrs', label: 'Address 2' },\r\n        { value: 'adrs', label: 'Address 3' },\r\n        { value: 'adrs', label: 'Address 4' },\r\n        { value: 'adrs', label: 'Address 5' }\r\n    ]\r\n\r\n    const [recallmodal, setRecallModal] = useState(false)\r\n    const handlRecoverModal = () => setRecallModal(!recallmodal)\r\n\r\n    return (\r\n        <div>\r\n            <Modal className='modal-dialog-centered modal-lg' isOpen={opensegasec} toggle={handleSegaSecModal} >\r\n                <ModalHeader tag='h2' toggle={handleSegaSecModal}>\r\n                    Select Account to Manage\r\n                </ModalHeader>\r\n                <ModalBody style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Row style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <Col>\r\n                            <h3>Select the account to view or modify security settings.</h3>\r\n                        </Col>\r\n                        <Col className='mb-1'>\r\n                            <Label style={{ fontSize: \"1.3em\" }}>Account</Label>\r\n                            <Select\r\n                                // theme={selectThemeColors}\r\n                                className='react-select'\r\n                                classNamePrefix='select'\r\n                                defaultValue='SBI-Savings - 0x2EcE47215383CEc4493617f7E3A88AC6df33Ce6d'\r\n                                name='clear'\r\n                                options={colourOptions}\r\n                                isClearable\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <hr />\r\n                        </Col>\r\n                        <Col>\r\n                            <FormGroup>\r\n                                <Label for='ownacc' style={{ fontSize: \"1.3em\" }}>Parent Vault</Label>\r\n                                <Input type='text' id='ownacc' value='SBI Vault - 0x271AC3C918C8C49a1723058e82A985ad0599EFe2' />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col>\r\n                            <FormGroup>\r\n                                <Label for='backupacc' style={{ fontSize: \"1.3em\" }}>Designated Sega Operator</Label>\r\n                                <Input type='text' id='backupacc' value='John - 0x02fe03c2a1c147C7D3a256386f2D2f0eEE3CEF98' />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col>\r\n                            <Row>\r\n                                <Col>\r\n                                    <FormGroup>\r\n                                        <Label for='days' style={{ fontSize: \"1.2em\" }}>Operator Status</Label>\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <p><strong>Active</strong></p>\r\n                                            <Button.Ripple className='mx-1' color='primary' onClick={handleSegaSecModal}>Lock</Button.Ripple>\r\n                                        </div>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col>\r\n                                    <FormGroup>\r\n                                        <Label for='rcvrydate' style={{ fontSize: \"1.2em\" }}>Assest Recall</Label>\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <p><strong>Force Recall to Vault</strong></p>\r\n                                            <Button.Ripple className='mx-1' color='primary' onClick={handlRecoverModal}>Recall</Button.Ripple>\r\n                                        </div>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n            </Modal>\r\n            <ForceRecall openrecallmodal={recallmodal} handlRecoverModal={handlRecoverModal} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SegaSecurity","import React, {useState} from 'react'\r\nimport {\r\n    Card, \r\n    CardHeader,\r\n    CardTitle,\r\n    CardBody,\r\n    Button,\r\n    Row,\r\n    Col\r\n  } from 'reactstrap'\r\n  import { Tool } from \"react-feather\"\r\nimport CardText from 'reactstrap/lib/CardText'\r\nimport VaultSecurity from './VaultSecurity/VaultSecurity'\r\nimport SegaSecurity from './SegaSecurity/SegaSecurity'\r\n\r\nconst ManageSecurity = () => {\r\n    const [vaultsecmodal, setVaultSecModal] = useState(false)\r\n    const handleVaultSecModal = () => setVaultSecModal(!vaultsecmodal)\r\n\r\n    const [segasecmodal, setSegaSecModal] = useState(false)\r\n    const handleSegaSecModal = () => setSegaSecModal(!segasecmodal)\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n                    <Row style={{display:'flex', flexDirection: 'row'}}>\r\n                        <Col md='6'>\r\n                            <CardHeader>\r\n                                <CardTitle>Manage Security Settings</CardTitle>\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <CardText>Modify security and recovery parameters of your accounts.</CardText>                                \r\n                            </CardBody>\r\n                        </Col>\r\n                        <Col  md='6' style={{display: 'flex', justifyContent: 'flex-end', alignItems: 'center'}}>\r\n                            <Button.Ripple className='mr-1 mb-1' size='lg' color='primary' style={{fontSize: '1.7em'}} onClick={handleVaultSecModal}><Tool className='mr-1' size={25}/>Vault</Button.Ripple>\r\n                            <Button.Ripple className='mr-1 mb-1' size='lg' color='primary' style={{fontSize: '1.7em'}} onClick={handleSegaSecModal}><Tool className='mr-1' size={25}/>Sega</Button.Ripple>\r\n                        </Col>\r\n                    </Row>\r\n                </CardBody>\r\n            </Card>\r\n            <VaultSecurity openvaultsec={vaultsecmodal} handleVaultSecModal={handleVaultSecModal} />\r\n            <SegaSecurity opensegasec={segasecmodal}  handleSegaSecModal={handleSegaSecModal}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManageSecurity","import {\r\n    Card,\r\n    CardHeader,\r\n    CardTitle,\r\n    CardBody,\r\n    Button,\r\n    Row,\r\n    Col,\r\n    UncontrolledButtonDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem\r\n} from 'reactstrap'\r\nimport { ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, Unlock } from 'react-feather'\r\nimport CardText from 'reactstrap/lib/CardText'\r\nimport { CgExport, CgImport } from 'react-icons/cg'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\n\r\nconst ImportExport = () => {\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n                    <Row style={{ display: 'flex', flexDirection: 'row' }}>\r\n                        <Col md='6'>\r\n                            <CardHeader>\r\n                                <CardTitle>Import & Export</CardTitle>\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <CardText>Import/Export your account data.</CardText>\r\n                            </CardBody>\r\n                        </Col>\r\n                        <Col md='6' style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }}>\r\n                            {/* <Button.Ripple className='mr-1 mb-1' size='lg' color='primary' style={{ fontSize: '1.7em' }}><Unlock className='mr-1' size={20} />Vault</Button.Ripple> */}\r\n                            <UncontrolledButtonDropdown direction='up'>\r\n                                <DropdownToggle className='mr-1 mb-1' color='primary' style={{ fontSize: '1.7em' }} color='primary' caret >\r\n                                    <CgExport size={20} />\r\n                                    <span className='align-middle ml-50'>Export</span>\r\n                                </DropdownToggle>\r\n                                <DropdownMenu right>\r\n                                    <DropdownItem className='w-100'>\r\n                                        <Printer size={15} />\r\n                                        <span className='align-middle ml-50'>Print</span>\r\n                                    </DropdownItem>\r\n                                    <DropdownItem className='w-100' onClick={() => downloadCSV(data)}>\r\n                                        <FileText size={15} />\r\n                                        <span className='align-middle ml-50'>CSV</span>\r\n                                    </DropdownItem>\r\n                                    <DropdownItem className='w-100'>\r\n                                        <Grid size={15} />\r\n                                        <span className='align-middle ml-50'>Excel</span>\r\n                                    </DropdownItem>\r\n                                    <DropdownItem className='w-100'>\r\n                                        <File size={15} />\r\n                                        <span className='align-middle ml-50'>PDF</span>\r\n                                    </DropdownItem>\r\n                                    <DropdownItem className='w-100'>\r\n                                        <Copy size={15} />\r\n                                        <span className='align-middle ml-50'>Copy</span>\r\n                                    </DropdownItem>\r\n                                </DropdownMenu>\r\n                            </UncontrolledButtonDropdown>\r\n                            <Button className='mr-1 mb-1' color='primary' style={{ fontSize: '1.7em' }} color='primary' caret >\r\n                                <CgImport size={20} />\r\n                                <span className='align-middle ml-50'>Import</span>\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImportExport","import AddRemove from \"./addRemove/AddRemove\"\r\nimport CreateVs from \"./Create/CreatVs\"\r\nimport RecoverAcc from \"./recover/RecoverAcc\"\r\nimport ManageSecurity from \"./security/ManageSecurity\"\r\nimport { Card, CardHeader, CardTitle } from 'reactstrap'\r\nimport ImportExport from \"./importExport/ImportExport\"\r\n\r\nconst Manager = () => {\r\n    return (\r\n        <div>\r\n            <CreateVs />\r\n            <AddRemove />\r\n            <ManageSecurity />\r\n            <RecoverAcc />\r\n            <ImportExport />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Manager","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n    return /*#__PURE__*/React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar ModalFooter = function ModalFooter(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'modal-footer'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nModalFooter.propTypes = propTypes;\nModalFooter.defaultProps = defaultProps;\nexport default ModalFooter;"],"sourceRoot":""}