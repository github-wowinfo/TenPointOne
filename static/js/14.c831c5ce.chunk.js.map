{"version":3,"sources":["utility/context/Internationalization.js","views/DeFi/BuyCrypto.js","views/DeFi/SellBtc.js","views/DeFi/Buy.js","views/DeFi/Swap.js","views/DeFi/Yield.js","views/DeFi/DeFi.js"],"names":["messagesEn","userMessagesEn","messagesDe","userMessagesDe","messagesFr","userMessagesFr","messagesPt","userMessagesPt","BuyCrypto","useState","selected","setSelected","selectCrypto","setSelectCrypto","handleLangUpdate","e","lang","preventDefault","handleCryptoUpdate","cur","style","marginTop","borderWidth","borderStyle","padding","borderRadius","display","justifyContent","alignItems","UncontrolledButtonDropdown","DropdownToggle","outline","color","caret","className","countryCode","svg","en","fr","in","DropdownMenu","DropdownItem","href","tag","onClick","name","size","eth","uni","dai","textAlign","marginBottom","Button","Ripple","SellBTC","Buy","active","setActive","toggle","tab","flex","Card","fontSize","fontWeight","Col","md","Fragment","Nav","tabs","NavItem","NavLink","TabContent","activeTab","TabPane","tabId","Swap","selectCrypto1","setSelectCrypto1","handleCryptoUpdate1","marginLeft","FormGroup","Label","for","Input","type","id","placeholder","Yield","columns","selector","sortable","minWidth","cell","row","icon","balance","balance1","apy","apy1","noHeader","pagination","data","customStyles","headCells","cells","rows","minHeight","sortIcon","paginationPerPage","paginationRowsPerPageOptions","DeFi","sm"],"mappings":"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","file":"static/js/14.c831c5ce.chunk.js","sourcesContent":["// ** React Imports\r\nimport { useState, createContext } from 'react'\r\n\r\n// ** Intl Provider Import\r\nimport { IntlProvider } from 'react-intl'\r\n\r\n// ** Core Language Data\r\nimport messagesEn from '@assets/data/locales/en.json'\r\nimport messagesDe from '@assets/data/locales/de.json'\r\nimport messagesFr from '@assets/data/locales/fr.json'\r\nimport messagesPt from '@assets/data/locales/pt.json'\r\n\r\n// ** User Language Data\r\nimport userMessagesEn from '@src/assets/data/locales/en.json'\r\nimport userMessagesDe from '@src/assets/data/locales/de.json'\r\nimport userMessagesFr from '@src/assets/data/locales/fr.json'\r\nimport userMessagesPt from '@src/assets/data/locales/pt.json'\r\n\r\n// ** Menu msg obj\r\nconst menuMessages = {\r\n  en: { ...messagesEn, ...userMessagesEn },\r\n  de: { ...messagesDe, ...userMessagesDe },\r\n  fr: { ...messagesFr, ...userMessagesFr },\r\n  pt: { ...messagesPt, ...userMessagesPt }\r\n}\r\n\r\n// ** Create Context\r\nconst Context = createContext()\r\n\r\nconst IntlProviderWrapper = ({ children }) => {\r\n  // ** States\r\n  const [locale, setLocale] = useState('en')\r\n  const [messages, setMessages] = useState(menuMessages['en'])\r\n\r\n  // ** Switches Language\r\n  const switchLanguage = lang => {\r\n    setLocale(lang)\r\n    setMessages(menuMessages[lang])\r\n  }\r\n\r\n  return (\r\n    <Context.Provider value={{ locale, switchLanguage }}>\r\n      <IntlProvider key={locale} locale={locale} messages={messages} defaultLocale='en'>\r\n        {children}\r\n      </IntlProvider>\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport { IntlProviderWrapper, Context as IntlContext }\r\n","import React, { useState, useContext } from 'react'\r\nimport ReactCountryFlag from 'react-country-flag'\r\nimport { UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle, Col, Input, UncontrolledButtonDropdown, Button } from 'reactstrap'\r\nimport { IntlContext } from '@src/utility/context/Internationalization'\r\nimport Icon from 'react-crypto-icons'\r\n\r\nconst BuyCrypto = () => {\r\n\r\n    const [selected, setSelected] = useState('en')\r\n    const [selectCrypto, setSelectCrypto] = useState('eth')\r\n    const langObj = {\r\n        en: 'USD',\r\n        fr: 'EURO',\r\n        in: 'INR',\r\n    }\r\n\r\n    const cryptoObj = {\r\n        eth: 'ETH',\r\n        uni: 'UNI',\r\n        dai: 'DAI',\r\n    }\r\n\r\n    const handleLangUpdate = (e, lang) => {\r\n        e.preventDefault()\r\n        setSelected(lang)\r\n    }\r\n\r\n    const handleCryptoUpdate = (e, cur) => {\r\n        e.preventDefault()\r\n        setSelectCrypto(cur)\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <h6 style={{ marginTop: 10 }}>YOU SPEND</h6>\r\n            <div style={{\r\n\r\n                borderWidth: 1,\r\n                borderStyle: 'solid',\r\n                padding: 5,\r\n                borderRadius: 5,\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center'\r\n\r\n            }}>\r\n                <h4>600</h4>\r\n\r\n\r\n                <UncontrolledButtonDropdown>\r\n                    <DropdownToggle outline color='primary' caret>\r\n                        <ReactCountryFlag\r\n                            className='country-flag flag-icon'\r\n                            countryCode={selected === 'en' ? 'us' : selected}\r\n                            svg\r\n                        />\r\n                        <span className='selected-language ml-1'>{langObj[selected]}</span>\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                        <DropdownItem href='/' tag='a' onClick={e => handleLangUpdate(e, 'en')}>\r\n                            <ReactCountryFlag className='country-flag' countryCode='us' svg />\r\n                            <span className='ml-1'>USD</span>\r\n                        </DropdownItem>\r\n                        <DropdownItem href='/' tag='a' onClick={e => handleLangUpdate(e, 'fr')}>\r\n                            <ReactCountryFlag className='country-flag' countryCode='fr' svg />\r\n                            <span className='ml-1'>EURO</span>\r\n                        </DropdownItem>\r\n                        <DropdownItem href='/' tag='a' onClick={e => handleLangUpdate(e, 'in')}>\r\n                            <ReactCountryFlag className='country-flag' countryCode='in' svg />\r\n                            <span className='ml-1'>INR</span>\r\n                        </DropdownItem>\r\n\r\n                    </DropdownMenu>\r\n                </UncontrolledButtonDropdown>\r\n\r\n            </div>\r\n\r\n            <h6 style={{ marginTop: 20 }}>YOU GET (ROUGH ESTIMATE)</h6>\r\n            <div style={{\r\n\r\n                borderWidth: 1,\r\n                borderStyle: 'solid',\r\n                padding: 5,\r\n                borderRadius: 5,\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center'\r\n\r\n            }}>\r\n                <h4>~ 0.13537784</h4>\r\n\r\n\r\n                <UncontrolledButtonDropdown>\r\n                    <DropdownToggle outline color='primary' caret>\r\n\r\n\r\n                        <Icon name={selectCrypto === 'eth' ? 'eth' : selectCrypto} size={15} />\r\n                        <span className='selected-language ml-1'>{cryptoObj[selectCrypto]}</span>\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                        <DropdownItem href='/' tag='a' onClick={e => handleCryptoUpdate(e, 'eth')}>\r\n                            <Icon name='eth' size={15} />\r\n                            <span className='ml-1'>ETH</span>\r\n                        </DropdownItem>\r\n                        <DropdownItem href='/' tag='a' onClick={e => handleCryptoUpdate(e, 'uni')}>\r\n                            <Icon name='uni' size={15} />\r\n                            <span className='ml-1'>UNI</span>\r\n                        </DropdownItem>\r\n                        <DropdownItem href='/' tag='a' onClick={e => handleCryptoUpdate(e, 'dai')}>\r\n                            <Icon name='dai' size={15} />\r\n                            <span className='ml-1'>DAI</span>\r\n                        </DropdownItem>\r\n\r\n                    </DropdownMenu>\r\n                </UncontrolledButtonDropdown>\r\n\r\n            </div>\r\n\r\n            <h6 style={{ marginTop: 10, textAlign: 'end' }}>1 ETH = 4432.04 USD</h6>\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'center', marginTop: 10, marginBottom: 10 }}>\r\n                <Button.Ripple color='primary'>Buy</Button.Ripple>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BuyCrypto","import React, { useState, useContext } from 'react'\r\nimport ReactCountryFlag from 'react-country-flag'\r\nimport { UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle, Col, Input, UncontrolledButtonDropdown, Button } from 'reactstrap'\r\nimport { IntlContext } from '@src/utility/context/Internationalization'\r\nimport Icon from 'react-crypto-icons'\r\n\r\nconst SellBTC = () => {\r\n\r\n    const [selected, setSelected] = useState('en')\r\n    const [selectCrypto, setSelectCrypto] = useState('eth')\r\n    const langObj = {\r\n        en: 'USD',\r\n        fr: 'EURO',\r\n        in: 'INR',\r\n    }\r\n\r\n    const cryptoObj = {\r\n        eth: 'ETH',\r\n        uni: 'UNI',\r\n        dai: 'DAI',\r\n    }\r\n\r\n    const handleLangUpdate = (e, lang) => {\r\n        e.preventDefault()\r\n        setSelected(lang)\r\n    }\r\n\r\n    const handleCryptoUpdate = (e, cur) => {\r\n        e.preventDefault()\r\n        setSelectCrypto(cur)\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <h6 style={{ marginTop: 10 }}>YOU SPEND</h6>\r\n            <div style={{\r\n\r\n                borderWidth: 1,\r\n                borderStyle: 'solid',\r\n                padding: 5,\r\n                borderRadius: 5,\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center'\r\n\r\n            }}>\r\n                <h4>600</h4>\r\n\r\n\r\n                <UncontrolledButtonDropdown>\r\n                    <DropdownToggle outline color='primary' caret>\r\n                        <ReactCountryFlag\r\n                            className='country-flag flag-icon'\r\n                            countryCode={selected === 'en' ? 'us' : selected}\r\n                            svg\r\n                        />\r\n                        <span className='selected-language ml-1'>{langObj[selected]}</span>\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                        <DropdownItem href='/' tag='a' onClick={e => handleLangUpdate(e, 'en')}>\r\n                            <ReactCountryFlag className='country-flag' countryCode='us' svg />\r\n                            <span className='ml-1'>USD</span>\r\n                        </DropdownItem>\r\n                        <DropdownItem href='/' tag='a' onClick={e => handleLangUpdate(e, 'fr')}>\r\n                            <ReactCountryFlag className='country-flag' countryCode='fr' svg />\r\n                            <span className='ml-1'>EURO</span>\r\n                        </DropdownItem>\r\n                        <DropdownItem href='/' tag='a' onClick={e => handleLangUpdate(e, 'in')}>\r\n                            <ReactCountryFlag className='country-flag' countryCode='in' svg />\r\n                            <span className='ml-1'>INR</span>\r\n                        </DropdownItem>\r\n\r\n                    </DropdownMenu>\r\n                </UncontrolledButtonDropdown>\r\n\r\n            </div>\r\n\r\n            <h6 style={{ marginTop: 20 }}>YOU GET (ROUGH ESTIMATE)</h6>\r\n            <div style={{\r\n\r\n                borderWidth: 1,\r\n                borderStyle: 'solid',\r\n                padding: 5,\r\n                borderRadius: 5,\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center'\r\n\r\n            }}>\r\n                <h4>~ 0.13537784</h4>\r\n\r\n\r\n                <UncontrolledButtonDropdown>\r\n                    <DropdownToggle outline color='primary' caret>\r\n\r\n\r\n                        <Icon name={selectCrypto === 'eth' ? 'eth' : selectCrypto} size={15} />\r\n                        <span className='selected-language ml-1'>{cryptoObj[selectCrypto]}</span>\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                        <DropdownItem href='/' tag='a' onClick={e => handleCryptoUpdate(e, 'eth')}>\r\n                            <Icon name='eth' size={15} />\r\n                            <span className='ml-1'>ETH</span>\r\n                        </DropdownItem>\r\n                        <DropdownItem href='/' tag='a' onClick={e => handleCryptoUpdate(e, 'uni')}>\r\n                            <Icon name='uni' size={15} />\r\n                            <span className='ml-1'>UNI</span>\r\n                        </DropdownItem>\r\n                        <DropdownItem href='/' tag='a' onClick={e => handleCryptoUpdate(e, 'dai')}>\r\n                            <Icon name='dai' size={15} />\r\n                            <span className='ml-1'>DAI</span>\r\n                        </DropdownItem>\r\n\r\n                    </DropdownMenu>\r\n                </UncontrolledButtonDropdown>\r\n\r\n            </div>\r\n\r\n            <h6 style={{ marginTop: 10, textAlign: 'end' }}>1 ETH = 4432.04 USD</h6>\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'center', marginTop: 10, marginBottom: 10 }}>\r\n                <Button.Ripple color='primary'>Sell</Button.Ripple>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SellBTC","import { height } from 'dom7'\r\nimport React, { useState } from 'react'\r\nimport { Button, Card, CardBody, Col, Label, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap'\r\nimport BuyCrypto from './BuyCrypto'\r\nimport SellBTC from './SellBtc.js'\r\n\r\nconst Buy = () => {\r\n    const [active, setActive] = useState('1')\r\n\r\n    const toggle = tab => {\r\n        if (active !== tab) {\r\n            setActive(tab)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='row' style={{ flex: 1, justifyContent: 'center' }}>\r\n                <Card>\r\n                    <div style={{ textAlign: 'center', padding: 5, borderRadius: 5 }}>\r\n                        <label style={{ fontSize: 8, fontWeight: 'bold' }}>POWERED BY</label>\r\n                        <br />\r\n                        <label style={{ fontSize: 15, fontWeight: 'bold', color: '#000' }}>coinify</label>\r\n\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n\r\n            <div className='row' style={{ marginTop: 20, flex: 1, justifyContent: 'center' }}>\r\n\r\n                <Col md='4' >\r\n                    <Card className='p-3'>\r\n                        <React.Fragment>\r\n                            <div style={{ display: 'flex', flex: 1, justifyContent: 'center' }}>\r\n                                <Nav tabs>\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            active={active === '1'}\r\n                                            onClick={() => {\r\n                                                toggle('1')\r\n                                            }}\r\n                                        >\r\n                                            Buy Crypto\r\n                                        </NavLink>\r\n\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            active={active === '2'}\r\n                                            onClick={() => {\r\n                                                toggle('2')\r\n                                            }}\r\n                                        >\r\n                                            Sell BTC\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n\r\n                                </Nav>\r\n                            </div>\r\n                            <TabContent className='py-50' activeTab={active}>\r\n                                <TabPane tabId='1'>\r\n                                    <BuyCrypto />\r\n                                </TabPane>\r\n                                <TabPane tabId='2'>\r\n                                    <SellBTC />\r\n                                </TabPane>\r\n\r\n                            </TabContent>\r\n                        </React.Fragment>\r\n                    </Card>\r\n                </Col>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Buy","import React, { useState } from 'react'\r\nimport Icon from 'react-crypto-icons'\r\nimport { Button, Card, Col, DropdownItem, DropdownMenu, DropdownToggle, FormGroup, Input, Label, UncontrolledButtonDropdown } from 'reactstrap'\r\nimport { RiSwapFill } from 'react-icons/ri'\r\n\r\nconst Swap = () => {\r\n    const [selectCrypto1, setSelectCrypto1] = useState('eth')\r\n    const [selectCrypto, setSelectCrypto] = useState('dai')\r\n\r\n    const cryptoObj1 = {\r\n        eth: 'ETH',\r\n        uni: 'UNI',\r\n        dai: 'DAI',\r\n    }\r\n\r\n    const cryptoObj = {\r\n        eth: 'ETH',\r\n        uni: 'UNI',\r\n        dai: 'DAI',\r\n    }\r\n\r\n    const handleCryptoUpdate1 = (e, lang) => {\r\n        e.preventDefault()\r\n        setSelectCrypto1(lang)\r\n    }\r\n\r\n    const handleCryptoUpdate = (e, cur) => {\r\n        e.preventDefault()\r\n        setSelectCrypto(cur)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='row' style={{ marginTop: 20, flex: 1, justifyContent: 'center' }}>\r\n\r\n                <Col md='4'>\r\n                    <Card className='p-3'>\r\n                        <div style={{\r\n                            display: 'flex',\r\n                            flex: 1,\r\n                            justifyContent: 'space-between'\r\n                        }}>\r\n                            <h6 style={{ marginTop: 10 }}>Pay With</h6>\r\n                            <label style={{\r\n                                marginTop: 10,\r\n                                fontWeight: 'bold',\r\n                                fontSize: 10,\r\n                                color: 'red'\r\n                            }}>Balance: 0.503768158 ETH</label>\r\n                        </div>\r\n\r\n                        <div style={{\r\n\r\n                            borderWidth: 1,\r\n                            borderStyle: 'solid',\r\n                            padding: 5,\r\n                            borderRadius: 5,\r\n                            display: 'flex',\r\n                            justifyContent: 'space-between',\r\n                            alignItems: 'center'\r\n\r\n                        }}>\r\n\r\n                            <div>\r\n                                <UncontrolledButtonDropdown>\r\n                                    <DropdownToggle outline color='primary' caret>\r\n\r\n\r\n                                        <Icon name={selectCrypto1 === 'eth' ? 'eth' : selectCrypto1} size={15} />\r\n                                        <span className='selected-language ml-1'>{cryptoObj1[selectCrypto1]}</span>\r\n                                    </DropdownToggle>\r\n                                    <DropdownMenu>\r\n                                        <DropdownItem href='/' tag='a' onClick={e => handleCryptoUpdate1(e, 'eth')}>\r\n                                            <Icon name='eth' size={15} />\r\n                                            <span className='ml-1'>ETH</span>\r\n                                        </DropdownItem>\r\n                                        <DropdownItem href='/' tag='a' onClick={e => handleCryptoUpdate1(e, 'uni')}>\r\n                                            <Icon name='uni' size={15} />\r\n                                            <span className='ml-1'>UNI</span>\r\n                                        </DropdownItem>\r\n                                        <DropdownItem href='/' tag='a' onClick={e => handleCryptoUpdate1(e, 'dai')}>\r\n                                            <Icon name='dai' size={15} />\r\n                                            <span className='ml-1'>DAI</span>\r\n                                        </DropdownItem>\r\n\r\n                                    </DropdownMenu>\r\n                                </UncontrolledButtonDropdown>\r\n\r\n                                <label style={{\r\n                                    marginLeft: 5,\r\n                                    fontWeight: 'bold'\r\n                                }}>~$4,247.15</label>\r\n\r\n                            </div>\r\n\r\n                            <h4>1</h4>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div style={{\r\n                            marginTop: 15,\r\n                            marginBottom: 15,\r\n                            display: 'flex',\r\n                            flex: 1,\r\n                            justifyContent: 'center'\r\n                        }}>\r\n                            <RiSwapFill size={25} color={'blue'} />\r\n                        </div>\r\n\r\n                        <div style={{\r\n                            display: 'flex',\r\n                            flex: 1,\r\n                            justifyContent: 'space-between'\r\n                        }}>\r\n                            <h6 style={{ marginTop: 10 }}>Receive</h6>\r\n                            <label style={{\r\n                                marginTop: 10,\r\n                                fontWeight: 'bold',\r\n                                fontSize: 10\r\n                            }}>Balance: 0 DAI</label>\r\n                        </div>\r\n\r\n                        <div style={{\r\n\r\n                            borderWidth: 1,\r\n                            borderStyle: 'solid',\r\n                            padding: 5,\r\n                            borderRadius: 5,\r\n                            display: 'flex',\r\n                            justifyContent: 'space-between',\r\n                            alignItems: 'center'\r\n\r\n                        }}>\r\n\r\n\r\n                            <div>\r\n\r\n                                <UncontrolledButtonDropdown>\r\n                                    <DropdownToggle outline color='primary' caret>\r\n\r\n\r\n                                        <Icon name={selectCrypto === 'eth' ? 'eth' : selectCrypto} size={15} />\r\n                                        <span className='selected-language ml-1'>{cryptoObj[selectCrypto]}</span>\r\n                                    </DropdownToggle>\r\n                                    <DropdownMenu>\r\n                                        <DropdownItem href='/' tag='a' onClick={e => handleCryptoUpdate(e, 'eth')}>\r\n                                            <Icon name='eth' size={15} />\r\n                                            <span className='ml-1'>ETH</span>\r\n                                        </DropdownItem>\r\n                                        <DropdownItem href='/' tag='a' onClick={e => handleCryptoUpdate(e, 'uni')}>\r\n                                            <Icon name='uni' size={15} />\r\n                                            <span className='ml-1'>UNI</span>\r\n                                        </DropdownItem>\r\n                                        <DropdownItem href='/' tag='a' onClick={e => handleCryptoUpdate(e, 'dai')}>\r\n                                            <Icon name='dai' size={15} />\r\n                                            <span className='ml-1'>DAI</span>\r\n                                        </DropdownItem>\r\n\r\n                                    </DropdownMenu>\r\n                                </UncontrolledButtonDropdown>\r\n\r\n                                <label style={{\r\n                                    marginLeft: 5,\r\n                                    fontWeight: 'bold'\r\n                                }}>~$4,229.02</label>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <FormGroup className='mt-2'>\r\n                            <Label for='basicInput'>Description (optional)</Label>\r\n                            <Input type='text' id='basicInput' placeholder='Enter Description' />\r\n                        </FormGroup>\r\n\r\n                        <div style={{ display: 'flex', justifyContent: 'center', marginTop: 10, marginBottom: 10 }}>\r\n                            <Button.Ripple color='primary'>Swap</Button.Ripple>\r\n                        </div>\r\n\r\n                    </Card>\r\n                </Col>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Swap","import React, { Fragment } from 'react'\r\nimport Icon from 'react-crypto-icons'\r\nimport DataTable from 'react-data-table-component'\r\nimport { ChevronDown } from 'react-feather'\r\nimport { Card, CardHeader, CardTitle, Col, Row } from 'reactstrap'\r\n// ** Styles\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\n\r\nconst Yield = () => {\r\n    const tablestyle = {\r\n        headCells: {\r\n            style: {\r\n                fontSize: '1em'\r\n            }\r\n        },\r\n        cells: {\r\n            style: {\r\n                fontSize: '1em'\r\n            }\r\n        },\r\n        rows: {\r\n            style: {\r\n                minHeight: '4em',\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Asset',\r\n            selector: 'name',\r\n            sortable: true,\r\n            minWidth: '150px',\r\n            cell: row => (\r\n                <div>\r\n                    <Icon name={row.icon} size={20} />\r\n                    <label className='font-weight-bold ml-1'>{row.name}</label>\r\n                </div>\r\n            )\r\n        },\r\n        {\r\n            name: 'Your wallet balance',\r\n            selector: 'balance',\r\n            cell: row => (\r\n                <div>\r\n                    <h6>{row.balance}</h6>\r\n                    {row.balance1 !== 0 && <label>$ {row.balance1}</label>}\r\n                </div>\r\n            )\r\n        },\r\n        {\r\n            name: 'APY',\r\n            selector: 'apy',\r\n            cell: row => (\r\n                <div >\r\n                    <h6>{row.apy}</h6>\r\n                    {row.apy1 && <label style={{\r\n                        padding: 2,\r\n                        borderStyle: 'solid',\r\n                        borderWidth: 1\r\n                    }}>$ {row.apy1}</label>}\r\n                </div>\r\n            )\r\n        }\r\n    ]\r\n\r\n    const data = [\r\n        {\r\n            id: 1,\r\n            icon: 'matic',\r\n            name: 'Matic',\r\n            balance: 0.97718,\r\n            balance1: 1.83,\r\n            apy: '0.31 %',\r\n            apy1: '3.59 % API'\r\n\r\n        },\r\n        {\r\n            id: 2,\r\n            icon: 'dai',\r\n            name: 'DAI',\r\n            balance: '-',\r\n            balance1: 0,\r\n            apy: '3.54 %',\r\n            apy1: '2.41 % API'\r\n\r\n        },\r\n        {\r\n            id: 3,\r\n            icon: 'usd',\r\n            name: 'USD Coin',\r\n            balance: '-',\r\n            balance1: 0,\r\n            apy: '3.26 %',\r\n            apy1: '2.06 % API'\r\n\r\n        },\r\n        {\r\n            id: 4,\r\n            icon: 'usdt',\r\n            name: 'USDT Coin',\r\n            balance: '-',\r\n            balance1: 0,\r\n            apy: '12.41 %',\r\n            apy1: '5.04 % API'\r\n\r\n        },\r\n        {\r\n            id: 5,\r\n            icon: 'weth',\r\n            name: 'Wrapped ETH',\r\n            balance: '-',\r\n            balance1: 0,\r\n            apy: '0.93 %',\r\n            apy1: '1.85 % API'\r\n\r\n        },\r\n        {\r\n            id: 6,\r\n            icon: 'wbtc',\r\n            name: 'WBTC Coin',\r\n            balance: '-',\r\n            balance1: 0,\r\n            apy: '0.05 %',\r\n            apy1: '0.50 % API'\r\n\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <DataTable\r\n                noHeader\r\n                pagination\r\n                data={data}\r\n                columns={columns}\r\n                customStyles={tablestyle}\r\n                className='react-dataTable'\r\n                sortIcon={<ChevronDown size={10} />}\r\n                paginationPerPage={10}\r\n                paginationRowsPerPageOptions={[5, 10, 15, 20]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Yield","import React, { useState } from 'react'\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Button, Col, Card } from 'reactstrap'\r\nimport Buy from './Buy'\r\nimport Swap from './Swap'\r\nimport Yield from './Yield'\r\n\r\nconst DeFi = () => {\r\n    const [active, setActive] = useState('1')\r\n\r\n    const toggle = tab => {\r\n        if (active !== tab) {\r\n            setActive(tab)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Card className='pt-2'>\r\n                <Nav tabs>\r\n                    <div style={{ display: 'flex', flex: 1, justifyContent: 'space-evenly' }}>\r\n                        <NavItem>\r\n                            <Col md={6} sm={12}>\r\n                                <div className='d-inline-block mr-1 mb-1'>\r\n                                    <Button.Ripple outline color='primary' size='lg' active={active === '1'} onClick={() => {\r\n                                        toggle('1')\r\n                                    }}>\r\n                                        Buy\r\n                                    </Button.Ripple>\r\n                                </div>\r\n                            </Col>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <Col md={6} sm={12}>\r\n                                <div className='d-inline-block mr-1 mb-1'>\r\n                                    <Button.Ripple outline color='primary' size='lg' active={active === '2'} onClick={() => {\r\n                                        toggle('2')\r\n                                    }}>\r\n                                        Swap\r\n                                    </Button.Ripple>\r\n                                </div>\r\n                            </Col>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <Col md={6} sm={12}>\r\n                                <div className='d-inline-block mr-1 mb-1'>\r\n                                    <Button.Ripple outline color='primary' size='lg' active={active === '3'} onClick={() => {\r\n                                        toggle('3')\r\n                                    }}>\r\n                                        Yield\r\n                                    </Button.Ripple>\r\n                                </div>\r\n                            </Col>\r\n                        </NavItem>\r\n                    </div>\r\n                </Nav>\r\n            </Card>\r\n            <TabContent className='py-50' activeTab={active}>\r\n                <TabPane tabId='1'>\r\n                    <Buy />\r\n                </TabPane>\r\n                <TabPane tabId='2'>\r\n                    <Swap />\r\n                </TabPane>\r\n                <TabPane tabId='3'>\r\n                    <Yield />\r\n                </TabPane>\r\n            </TabContent>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DeFi"],"sourceRoot":""}