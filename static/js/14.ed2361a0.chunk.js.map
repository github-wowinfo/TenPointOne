{"version":3,"sources":["utility/hooks/useSkin.js","utility/context/Can.js","redux/actions/layout/index.js","@core/layouts/components/layout-wrapper/index.js","router/routes/index.js","@core/layouts/BlankLayout.js","@core/components/customizer/index.js","@core/layouts/components/footer/index.js","@core/auth/jwt/jwtDefaultConfig.js","@core/auth/jwt/jwtService.js","auth/jwt/useJwt.js","redux/actions/auth/index.js","@core/auth/jwt/useJwt.js","@core/layouts/components/navbar/UserDropdown.js","assets/images/portrait/small/avatar-s-11.jpg","@core/layouts/components/navbar/NavbarUser.js","@core/layouts/components/navbar/Network.js","@core/layouts/components/navbar/index.js","navigation/vertical/index.js","@core/layouts/components/menu/vertical-menu/VerticalMenuHeader.js","@core/layouts/utils.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuLink.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuGroup.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuSectionHeader.js","navigation/vertical/OwnerDisplay.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuItems.js","@core/layouts/components/menu/vertical-menu/index.js","utility/hooks/useRTL.js","utility/hooks/useNavbarType.js","utility/hooks/useFooterType.js","utility/hooks/useNavbarColor.js","@core/layouts/VerticalLayout.js","layouts/VerticalLayout.js","navigation/horizontal/index.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuLink.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuGroup.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuItems.js","@core/layouts/components/menu/horizontal-menu/index.js","@core/layouts/HorizontalLayout.js","layouts/HorizontalLayout.js","router/Router.js","utility/hooks/useLayout.js","utility/hooks/useRouterTransition.js","App.js","utility/Utils.js","@core/components/avatar/index.js"],"names":["useSkin","useState","item","window","localStorage","getItem","JSON","parse","themeConfig","layout","skin","error","console","log","setSkin","useEffect","element","document","body","classList","remove","add","dark","bordered","value","valueToStore","Function","setItem","stringify","AbilityContext","createContext","createContextualCan","Consumer","handleContentWidth","dispatch","type","handleMenuCollapsed","handleMenuHidden","LayoutWrapper","props","children","appLayout","wrapperClass","transition","routeMeta","useDispatch","store","useSelector","state","navbarStore","navbar","contentWidth","Tag","Fragment","menuCollapsed","menuHidden","className","classnames","query","length","Routes","path","component","lazy","meta","authRoute","BlankLayout","isMounted","setIsMounted","Customizer","isRtl","setIsRtl","setLayout","navbarType","setNavbarType","footerType","setFooterType","navbarColor","setNavbarColor","isHidden","setIsHidden","setContentWidth","setMenuCollapsed","setTransition","openCustomizer","setOpenCustomizer","handleToggle","e","preventDefault","transitionOptions","label","transitionValue","find","i","open","href","onClick","size","FormGroup","skinsArr","name","checked","map","radio","index","marginCondition","CustomInput","id","onChange","renderSkinsRadio","theme","selectThemeColors","classNamePrefix","defaultValue","options","isClearable","color","selected","border","navbarTypeArr","renderNavbarTypeRadio","footerTypeArr","renderFooterTypeRadio","Footer","loginEndpoint","registerEndpoint","refreshEndpoint","logoutEndpoint","tokenType","storageTokenKeyName","storageRefreshTokenKeyName","JwtService","jwtOverrideConfig","jwtConfig","jwtDefaultConfig","isAlreadyFetchingAccessToken","subscribers","this","axios","interceptors","request","use","config","accessToken","getToken","headers","Authorization","Promise","reject","response","originalRequest","status","refreshToken","then","r","setToken","data","setRefreshToken","onAccessTokenFetched","resolve","addSubscriber","filter","callback","push","args","post","getRefreshToken","jwt","UserDropdown","userData","setUserData","isUserLoggedIn","avatar","UncontrolledDropdown","tag","DropdownToggle","role","icon","DropdownMenu","right","DropdownItem","Link","to","removeItem","NavbarUser","setMenuVisibility","ThemeToggler","NavItem","NavLink","connect","network","setNetwork","networkItems","toggleNetwork","UncontrolledButtonDropdown","style","marginLeft","marginRight","width","caret","relative","ThemeNavbar","title","navLink","header","randomHexColor","VerticalMenuHeader","setGroupOpen","menuHover","Toggler","src","app","appLogoImage","alt","fontSize","appName","isNavLinkActive","link","currentURL","routerProps","isNavGroupActive","some","child","search","navigation","result","getAllParents","obj","match","res","recurse","current","key","undefined","VerticalNavMenuLink","setGroupActive","groupActive","activeItem","setActiveItem","groupOpen","toggleActiveGroup","parentItem","currentActiveItem","LinkTag","externalLink","location","useLocation","pathname","matchPath","exact","strict","arr","parents","searchParents","disabled","active","target","newTab","isActive","url","resetActiveGroup","badge","badgeText","Badge","pill","VerticalNavMenuGroup","allParents","activeArr","includes","splice","indexOf","openArr","val","onCollapseClick","pop","toggleOpenGroup","Collapse","isOpen","VerticalNavMenuItems","items","VerticalNavMenuSectionHeader","OwnerDisplay","textAlign","display","Row","flexShrink","flexGrow","Col","Button","Ripple","outline","minWidth","left","divider","justifyContent","VerticalMenuNavItems","Components","RenderNavItems","TagName","resolveNavItemComponent","Sidebar","menu","setMenuHover","shadowRef","useRef","expanded","onMouseEnter","onMouseLeave","ref","wheelPropagation","onScrollY","container","scrollTop","contains","scrollMenu","useRTL","isRTL","getElementsByTagName","setAttribute","handleRTL","useNavbarType","useFooterType","footer","useNavbarColor","backgroundColor","VerticalLayout","menuVisibility","innerWidth","windowWidth","setWindowWidth","layoutStore","handleWindowWidth","addEventListener","footerClasses","static","sticky","hidden","bgColorCondition","floating","Navbar","expand","light","show","customizer","showUnder","bottom","HorizontalNavMenuLink","setOpenDropdown","isChild","HorizontalNavMenuGroup","submenu","openDropdown","menuModifiers","setMaxHeight","enabled","fn","stylesObj","pageHeight","innerHeight","ddTop","instance","reference","getBoundingClientRect","top","popper","height","maxHeight","overflowY","ddRef","closest","styles","Dropdown","toggle","modifiers","HorizontalNavMenuItems","HorizontalMenu","HorizontalLayout","navbarScrolled","setNavbarScrolled","pageYOffset","navbarClasses","Router","lastLayout","setLastLayout","handleLayout","useLayout","routerTransition","useRouterTransition","DefaultLayout","useContext","Layouts","NotAuthorized","Error","basename","process","render","Object","keys","LayoutTag","LayoutRoutes","LayoutPaths","route","LayoutRoutesAndPaths","assign","fallback","App","colors","primary25","primary","neutral10","neutral20","neutral30","Avatar","forwardRef","imgClassName","initials","badgeUp","content","badgeColor","img","imgHeight","imgWidth","contentStyles","rest","str","results","split","forEach","join","getInitials","defaultProps"],"mappings":"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","file":"static/js/14.ed2361a0.chunk.js","sourcesContent":["//** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useSkin = () => {\r\n  // ** State\r\n  const [skin, setSkin] = useState(() => {\r\n    try {\r\n      // ** Get from local storage by key\r\n      const item = window.localStorage.getItem('skin')\r\n      // ** Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : themeConfig.layout.skin\r\n    } catch (error) {\r\n      // ** If error also return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.skin\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(skin) : value\r\n      // ** Set state\r\n      setSkin(valueToStore)\r\n      // ** Save to local storage\r\n      window.localStorage.setItem('skin', JSON.stringify(valueToStore))\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get Body Tag\r\n    const element = window.document.body\r\n\r\n    // ** Define classnames for skins\r\n    const classNames = {\r\n      dark: 'dark-layout',\r\n      bordered: 'bordered-layout',\r\n      'semi-dark': 'semi-dark-layout'\r\n    }\r\n\r\n    // ** Remove all classes from Body on mount\r\n    element.classList.remove(...element.classList)\r\n\r\n    // ** If skin is not light add skin class\r\n    if (skin !== 'light') {\r\n      element.classList.add(classNames[skin])\r\n    }\r\n  }, [skin])\r\n\r\n  return [skin, setValue]\r\n}\r\n","// ** Imports createContext function\r\nimport { createContext } from 'react'\r\n\r\n// ** Imports createContextualCan function\r\nimport { createContextualCan } from '@casl/react'\r\n\r\n// ** Create Context\r\nexport const AbilityContext = createContext()\r\n\r\n// ** Init Can Context\r\nexport const Can = createContextualCan(AbilityContext.Consumer)\r\n","// ** Handles Layout Content Width (full / boxed)\r\nexport const handleContentWidth = value => dispatch => dispatch({ type: 'HANDLE_CONTENT_WIDTH', value })\r\n\r\n// ** Handles Menu Collapsed State (Bool)\r\nexport const handleMenuCollapsed = value => dispatch => dispatch({ type: 'HANDLE_MENU_COLLAPSED', value })\r\n\r\n// ** Handles Menu Hidden State (Bool)\r\nexport const handleMenuHidden = value => dispatch => dispatch({ type: 'HANDLE_MENU_HIDDEN', value })\r\n\r\n// ** Handles RTL (Bool)\r\nexport const handleRTL = value => dispatch => dispatch({ type: 'HANDLE_RTL', value })\r\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleContentWidth, handleMenuCollapsed, handleMenuHidden } from '@store/actions/layout'\n\n// ** Styles\nimport 'animate.css/animate.css'\n\nconst LayoutWrapper = props => {\n  // ** Props\n  const { layout, children, appLayout, wrapperClass, transition, routeMeta } = props\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state)\n  const navbarStore = store.navbar\n  const contentWidth = store.layout.contentWidth\n\n  //** Vars\n  const Tag = layout === 'HorizontalLayout' && !appLayout ? 'div' : Fragment\n\n  // ** Clean Up Function\n  const cleanUp = () => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth) {\n        dispatch(handleContentWidth('full'))\n      }\n      if (routeMeta.menuCollapsed) {\n        dispatch(handleMenuCollapsed(!routeMeta.menuCollapsed))\n      }\n      if (routeMeta.menuHidden) {\n        dispatch(handleMenuHidden(!routeMeta.menuHidden))\n      }\n    }\n  }\n\n  // ** ComponentDidMount\n  useEffect(() => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth) {\n        dispatch(handleContentWidth(routeMeta.contentWidth))\n      }\n      if (routeMeta.menuCollapsed) {\n        dispatch(handleMenuCollapsed(routeMeta.menuCollapsed))\n      }\n      if (routeMeta.menuHidden) {\n        dispatch(handleMenuHidden(routeMeta.menuHidden))\n      }\n    }\n    return () => cleanUp()\n  }, [])\n\n  return (\n    <div\n      className={classnames('app-content content overflow-hidden', {\n        [wrapperClass]: wrapperClass,\n        'show-overlay': navbarStore.query.length\n      })}\n    >\n      <div className='content-overlay'></div>\n      <div className='header-navbar-shadow' />\n      <div\n        className={classnames({\n          'content-wrapper': !appLayout,\n          'content-area-wrapper': appLayout,\n          'container p-0': contentWidth === 'boxed',\n          [`animate__animated animate__${transition}`]: transition !== 'none' && transition.length\n        })}\n      >\n        <Tag\n          /*eslint-disable */\n          {...(layout === 'HorizontalLayout' && !appLayout\n            ? { className: classnames({ 'content-body': !appLayout }) }\n            : {})}\n          /*eslint-enable */\n        >\n          {children}\n        </Tag>\n      </div>\n    </div>\n  )\n}\n\nexport default LayoutWrapper\n","import { lazy } from 'react'\r\n\r\n// ** Document title\r\n// const TemplateTitle = '%s - Vuexy React Admin Template'\r\n\r\n// ** Default Route\r\nconst DefaultRoute = '/home'\r\n\r\n// ** Merge Routes\r\nconst Routes = [\r\n  {\r\n    path: '/home',\r\n    component: lazy(() => import('../../views/Home'))\r\n  },\r\n  {\r\n    path: '/login',\r\n    component: lazy(() => import('../../views/Login')),\r\n    layout: 'BlankLayout',\r\n    meta: {\r\n      authRoute: true\r\n    }\r\n  },\r\n  {\r\n    path: '/error',\r\n    component: lazy(() => import('../../views/Error')),\r\n    layout: 'BlankLayout'\r\n  },\r\n  {\r\n    path: '/asset',\r\n    component: lazy(() => import('../../views/Asset/AssetScreen'))\r\n  },\r\n  {\r\n    path: '/activity',\r\n    component: lazy(() => import('../../views/Activity/ActivityScreen'))\r\n  },\r\n  {\r\n    path: '/send',\r\n    component: lazy(() => import('../../views/Send/Send'))\r\n  },\r\n  {\r\n    path: '/receive',\r\n    component: lazy(() => import('../../views/Receive/Receive'))\r\n  },\r\n  {\r\n    path: '/addressbook',\r\n    component: lazy(() => import('../../views/AddressBook/AddressBook'))\r\n  },\r\n  {\r\n    path: '/defi',\r\n    component: lazy(() => import('../../views/DeFi/DeFi'))\r\n  },\r\n  {\r\n    path: '/manager',\r\n    component: lazy(() => import('../../views/Manager/Manager'))\r\n  }\r\n]\r\n\r\nexport { DefaultRoute, Routes }\r\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Custom Hooks\nimport { useSkin } from '@hooks/useSkin'\n\nconst BlankLayout = ({ children, ...rest }) => {\n  // ** Hooks\n  const [skin, setSkin] = useSkin()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div className='blank-page'>\n      <div className='app-content content'>\n        <div className='content-wrapper'>\n          <div className='content-body'>{children}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BlankLayout\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport classnames from 'classnames'\nimport { Settings, X } from 'react-feather'\nimport { CustomInput, FormGroup } from 'reactstrap'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { selectThemeColors } from '@utils'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\n\nconst Customizer = props => {\n  // ** Props\n  const {\n    skin,\n    setSkin,\n    isRtl,\n    setIsRtl,\n    layout,\n    setLayout,\n    navbarType,\n    setNavbarType,\n    footerType,\n    setFooterType,\n    navbarColor,\n    setNavbarColor,\n    isHidden,\n    setIsHidden,\n    contentWidth,\n    setContentWidth,\n    menuCollapsed,\n    setMenuCollapsed,\n    transition,\n    setTransition\n  } = props\n\n  // ** State\n  const [openCustomizer, setOpenCustomizer] = useState(false)\n\n  // ** Toggles Customizer\n  const handleToggle = e => {\n    e.preventDefault()\n    setOpenCustomizer(!openCustomizer)\n  }\n\n  // ** Render Layout Skin Options\n  const renderSkinsRadio = () => {\n    const skinsArr = [\n      {\n        name: 'light',\n        label: 'Light',\n        checked: skin === 'light'\n      },\n      {\n        name: 'bordered',\n        label: 'Bordered',\n        checked: skin === 'bordered'\n      },\n      {\n        name: 'dark',\n        label: 'Dark',\n        checked: skin === 'dark'\n      },\n      {\n        name: 'semi-dark',\n        label: 'Semi Dark',\n        checked: skin === 'semi-dark'\n      }\n    ]\n\n    return skinsArr.map((radio, index) => {\n      const marginCondition = index !== skinsArr.length - 1\n\n      if (layout === 'HorizontalLayout' && radio.name === 'semi-dark') {\n        return null\n      }\n\n      return (\n        <CustomInput\n          key={index}\n          type='radio'\n          id={radio.name}\n          label={radio.label}\n          checked={radio.checked}\n          onChange={() => setSkin(radio.name)}\n          className={classnames({ 'mr-1': marginCondition })}\n        />\n      )\n    })\n  }\n\n  // ** Render Navbar Colors Options\n  const renderNavbarColors = () => {\n    const colorsArr = ['white', 'primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark']\n\n    return colorsArr.map(color => (\n      <li\n        key={color}\n        className={classnames(`color-box bg-${color}`, {\n          selected: navbarColor === color,\n          border: color === 'white'\n        })}\n        onClick={() => setNavbarColor(color)}\n      ></li>\n    ))\n  }\n\n  // ** Render Navbar Type Options\n  const renderNavbarTypeRadio = () => {\n    const navbarTypeArr = [\n      {\n        name: 'floating',\n        label: 'Floating',\n        checked: navbarType === 'floating'\n      },\n      {\n        name: 'sticky',\n        label: 'Sticky',\n        checked: navbarType === 'sticky'\n      },\n      {\n        name: 'static',\n        label: 'Static',\n        checked: navbarType === 'static'\n      },\n      {\n        name: 'hidden',\n        label: 'Hidden',\n        checked: navbarType === 'hidden'\n      }\n    ]\n\n    return navbarTypeArr.map((radio, index) => {\n      const marginCondition = index !== navbarTypeArr.length - 1\n\n      if (layout === 'HorizontalLayout' && radio.name === 'hidden') {\n        return null\n      }\n\n      return (\n        <CustomInput\n          key={index}\n          type='radio'\n          id={radio.name}\n          label={radio.label}\n          checked={radio.checked}\n          onChange={() => setNavbarType(radio.name)}\n          className={classnames({ 'mr-1': marginCondition })}\n        />\n      )\n    })\n  }\n\n  // ** Render Footer Type Options\n  const renderFooterTypeRadio = () => {\n    const footerTypeArr = [\n      {\n        name: 'sticky',\n        label: 'Sticky',\n        checked: footerType === 'sticky'\n      },\n      {\n        name: 'static',\n        label: 'Static',\n        checked: footerType === 'static'\n      },\n      {\n        name: 'hidden',\n        label: 'Hidden',\n        checked: footerType === 'hidden'\n      }\n    ]\n\n    return footerTypeArr.map((radio, index) => {\n      const marginCondition = index !== footerTypeArr.length - 1\n\n      return (\n        <CustomInput\n          key={index}\n          type='radio'\n          id={`footer-${radio.name}`}\n          label={radio.label}\n          checked={radio.checked}\n          onChange={() => setFooterType(radio.name)}\n          className={classnames({ 'mr-1': marginCondition })}\n        />\n      )\n    })\n  }\n\n  // **  Router Transition Options\n  const transitionOptions = [\n    { value: 'fadeIn', label: 'Fade' },\n    { value: 'fadeInLeft', label: 'Fade In Left' },\n    { value: 'zoomIn', label: 'Zoom In' },\n    { value: 'none', label: 'None' }\n  ]\n\n  // ** Get Current Transition\n  const transitionValue = transitionOptions.find(i => i.value === transition)\n\n  return (\n    <div\n      className={classnames('customizer d-none d-md-block', {\n        open: openCustomizer\n      })}\n    >\n      <a href='/' className='customizer-toggle d-flex align-items-center justify-content-center' onClick={handleToggle}>\n        <Settings size={14} className='spinner' />\n      </a>\n      <PerfectScrollbar className='customizer-content'>\n        <div className='customizer-header px-2 pt-1 pb-0 position-relative'>\n          <h4 className='mb-0'>Theme Customizer</h4>\n          <p className='m-0'>Customize & Preview in Real Time</p>\n          <a href='/' className='customizer-close' onClick={handleToggle}>\n            <X />\n          </a>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>Skin</p>\n            <div className='d-flex'>{renderSkinsRadio()}</div>\n          </FormGroup>\n\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>Content Width</p>\n            <div className='d-flex'>\n              <CustomInput\n                type='radio'\n                id='full-width'\n                className='mr-1'\n                label='Full Width'\n                checked={contentWidth === 'full'}\n                onChange={() => setContentWidth('full')}\n              />\n              <CustomInput\n                type='radio'\n                id='boxes'\n                label='Boxed'\n                checked={contentWidth === 'boxed'}\n                onChange={() => setContentWidth('boxed')}\n              />\n            </div>\n          </FormGroup>\n\n          <FormGroup className='mb-2'>\n            <div className='d-flex'>\n              <p className='font-weight-bold mr-auto mb-0'>RTL</p>\n              <CustomInput type='switch' id='rtl' name='RTL' checked={isRtl} onChange={() => setIsRtl(!isRtl)} />\n            </div>\n          </FormGroup>\n\n          <FormGroup className='mb-2'>\n            <div className='d-flex justify-content-between align-items-center'>\n              <p className='font-weight-bold mb-0'>Router Transition</p>\n              <Select\n                theme={selectThemeColors}\n                className='react-select'\n                classNamePrefix='select'\n                defaultValue={transitionOptions[0]}\n                value={transitionValue}\n                options={transitionOptions}\n                isClearable={false}\n                onChange={({ value }) => setTransition(value)}\n              />\n            </div>\n          </FormGroup>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <p className='font-weight-bold'>Menu Layout</p>\n          <FormGroup className='mb-2'>\n            <div className='d-flex align-items-center'>\n              <CustomInput\n                type='radio'\n                id='vertical-layout'\n                label='Vertical'\n                checked={layout === 'VerticalLayout'}\n                onChange={() => setLayout('vertical')}\n                className='mr-1'\n              />\n              <CustomInput\n                type='radio'\n                id='horizontal-layout'\n                label='Horizontal'\n                checked={layout === 'HorizontalLayout'}\n                onChange={() => setLayout('horizontal')}\n              />\n            </div>\n          </FormGroup>\n          {layout !== 'HorizontalLayout' ? (\n            <FormGroup className='mb-2'>\n              <div className='d-flex align-items-center'>\n                <p className='font-weight-bold mr-auto mb-0'>Menu Collapsed</p>\n                <CustomInput\n                  type='switch'\n                  id='menu-collapsed'\n                  name='menu-collapsed'\n                  checked={menuCollapsed}\n                  onChange={() => setMenuCollapsed(!menuCollapsed)}\n                />\n              </div>\n            </FormGroup>\n          ) : null}\n\n          <FormGroup className='mb-2'>\n            <div className='d-flex align-items-center'>\n              <p className='font-weight-bold mr-auto mb-0'>Menu Hidden</p>\n              <CustomInput\n                type='switch'\n                id='menu-hidden'\n                name='menu-hidden'\n                checked={isHidden}\n                onChange={() => setIsHidden(!isHidden)}\n              />\n            </div>\n          </FormGroup>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          {layout !== 'HorizontalLayout' ? (\n            <FormGroup className='mb-2'>\n              <p className='font-weight-bold'>Navbar Color</p>\n              <ul className='list-inline unstyled-list'>{renderNavbarColors()}</ul>\n            </FormGroup>\n          ) : null}\n\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>{layout === 'HorizontalLayout' ? 'Menu' : 'Navbar'} Type</p>\n            <div className='d-flex'>{renderNavbarTypeRadio()}</div>\n          </FormGroup>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>Footer Type</p>\n            <div className='d-flex'>{renderFooterTypeRadio()}</div>\n          </FormGroup>\n        </div>\n      </PerfectScrollbar>\n    </div>\n  )\n}\n\nexport default Customizer\n","// ** Icons Import\r\nimport { Heart } from 'react-feather'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <p className='clearfix mb-0'>\r\n      {/* <span className='float-md-left d-block d-md-inline-block mt-25'>\r\n        COPYRIGHT © {new Date().getFullYear()}{' '}\r\n        <a href='https://1.envato.market/pixinvent_portfolio' target='_blank' rel='noopener noreferrer'>\r\n          Pixinvent\r\n        </a>\r\n        <span className='d-none d-sm-inline-block'>, All rights Reserved</span>\r\n      </span> */}\r\n      <span className='float-md-right d-none d-md-block'>\r\n        Hand-crafted & Made with\r\n        <Heart size={14} />{'  '}\r\n        @ Wow!nfobiz.\r\n      </span>\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","// ** Auth Endpoints\r\nexport default {\r\n  loginEndpoint: '/jwt/login',\r\n  registerEndpoint: '/jwt/register',\r\n  refreshEndpoint: '/jwt/refresh-token',\r\n  logoutEndpoint: '/jwt/logout',\r\n\r\n  // ** This will be prefixed in authorization header with token\r\n  // ? e.g. Authorization: Bearer <token>\r\n  tokenType: 'Bearer',\r\n\r\n  // ** Value of this property will be used as key to store JWT token in storage\r\n  storageTokenKeyName: 'accessToken',\r\n  storageRefreshTokenKeyName: 'refreshToken'\r\n}\r\n","import axios from 'axios'\r\nimport jwtDefaultConfig from './jwtDefaultConfig'\r\n\r\nexport default class JwtService {\r\n  // ** jwtConfig <= Will be used by this service\r\n  jwtConfig = { ...jwtDefaultConfig }\r\n\r\n  // ** For Refreshing Token\r\n  isAlreadyFetchingAccessToken = false\r\n\r\n  // ** For Refreshing Token\r\n  subscribers = []\r\n\r\n  constructor(jwtOverrideConfig) {\r\n    this.jwtConfig = { ...this.jwtConfig, ...jwtOverrideConfig }\r\n\r\n    // ** Request Interceptor\r\n    axios.interceptors.request.use(\r\n      config => {\r\n        // ** Get token from localStorage\r\n        const accessToken = this.getToken()\r\n\r\n        // ** If token is present add it to request's Authorization Header\r\n        if (accessToken) {\r\n          // ** eslint-disable-next-line no-param-reassign\r\n          config.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\r\n        }\r\n        return config\r\n      },\r\n      error => Promise.reject(error)\r\n    )\r\n\r\n    // ** Add request/response interceptor\r\n    axios.interceptors.response.use(\r\n      response => response,\r\n      error => {\r\n        // ** const { config, response: { status } } = error\r\n        const { config, response } = error\r\n        const originalRequest = config\r\n\r\n        // ** if (status === 401) {\r\n        if (response && response.status === 401) {\r\n          if (!this.isAlreadyFetchingAccessToken) {\r\n            this.isAlreadyFetchingAccessToken = true\r\n            this.refreshToken().then(r => {\r\n              this.isAlreadyFetchingAccessToken = false\r\n\r\n              // ** Update accessToken in localStorage\r\n              this.setToken(r.data.accessToken)\r\n              this.setRefreshToken(r.data.refreshToken)\r\n\r\n              this.onAccessTokenFetched(r.data.accessToken)\r\n            })\r\n          }\r\n          const retryOriginalRequest = new Promise(resolve => {\r\n            this.addSubscriber(accessToken => {\r\n              // ** Make sure to assign accessToken according to your response.\r\n              // ** Check: https://pixinvent.ticksy.com/ticket/2413870\r\n              // ** Change Authorization header\r\n              originalRequest.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\r\n              resolve(this.axios(originalRequest))\r\n            })\r\n          })\r\n          return retryOriginalRequest\r\n        }\r\n        return Promise.reject(error)\r\n      }\r\n    )\r\n  }\r\n\r\n  onAccessTokenFetched(accessToken) {\r\n    this.subscribers = this.subscribers.filter(callback => callback(accessToken))\r\n  }\r\n\r\n  addSubscriber(callback) {\r\n    this.subscribers.push(callback)\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem(this.jwtConfig.storageTokenKeyName)\r\n  }\r\n\r\n  getRefreshToken() {\r\n    return localStorage.getItem(this.jwtConfig.storageRefreshTokenKeyName)\r\n  }\r\n\r\n  setToken(value) {\r\n    localStorage.setItem(this.jwtConfig.storageTokenKeyName, value)\r\n  }\r\n\r\n  setRefreshToken(value) {\r\n    localStorage.setItem(this.jwtConfig.storageRefreshTokenKeyName, value)\r\n  }\r\n\r\n  login(...args) {\r\n    return axios.post(this.jwtConfig.loginEndpoint, ...args)\r\n  }\r\n\r\n  register(...args) {\r\n    return axios.post(this.jwtConfig.registerEndpoint, ...args)\r\n  }\r\n\r\n  refreshToken() {\r\n    return axios.post(this.jwtConfig.refreshEndpoint, {\r\n      refreshToken: this.getRefreshToken()\r\n    })\r\n  }\r\n}\r\n","// ** Core JWT Import\r\nimport useJwt from '@src/@core/auth/jwt/useJwt'\r\n\r\nconst { jwt } = useJwt({})\r\n\r\nexport default jwt\r\n","// ** UseJWT import to get config\nimport useJwt from '@src/auth/jwt/useJwt'\n\nconst config = useJwt.jwtConfig\n\n// ** Handle User Login\nexport const handleLogin = data => {\n  return dispatch => {\n    dispatch({\n      type: 'LOGIN',\n      data,\n      config,\n      [config.storageTokenKeyName]: data[config.storageTokenKeyName],\n      [config.storageRefreshTokenKeyName]: data[config.storageRefreshTokenKeyName]\n    })\n\n    // ** Add to user, accessToken & refreshToken to localStorage\n    localStorage.setItem('userData', JSON.stringify(data))\n    localStorage.setItem(config.storageTokenKeyName, JSON.stringify(data.accessToken))\n    localStorage.setItem(config.storageRefreshTokenKeyName, JSON.stringify(data.refreshToken))\n  }\n}\n\n// ** Handle User Logout\nexport const handleLogout = () => {\n  return dispatch => {\n    dispatch({ type: 'LOGOUT', [config.storageTokenKeyName]: null, [config.storageRefreshTokenKeyName]: null })\n\n    // ** Remove user, accessToken & refreshToken from localStorage\n    localStorage.removeItem('userData')\n    localStorage.removeItem(config.storageTokenKeyName)\n    localStorage.removeItem(config.storageRefreshTokenKeyName)\n  }\n}\n","// ** JWT Service Import\r\nimport JwtService from './jwtService'\r\n\r\n// ** Export Service as useJwt\r\nexport default function useJwt(jwtOverrideConfig) {\r\n  const jwt = new JwtService(jwtOverrideConfig)\r\n\r\n  return {\r\n    jwt\r\n  }\r\n}\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Utils\r\nimport { isUserLoggedIn } from '@utils'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch } from 'react-redux'\r\nimport { handleLogout } from '@store/actions/auth'\r\n\r\n// ** Third Party Components\r\nimport { UncontrolledDropdown, DropdownMenu, DropdownToggle, DropdownItem, Button, Row, Col } from 'reactstrap'\r\nimport { User, Mail, CheckSquare, MessageSquare, Settings, CreditCard, HelpCircle, Power } from 'react-feather'\r\nimport { GiFoxHead } from 'react-icons/gi'\r\n\r\n// ** Default Avatar Image\r\nimport defaultAvatar from '@src/assets/images/portrait/small/avatar-s-11.jpg'\r\n\r\nconst UserDropdown = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n\r\n  // ** State\r\n  const [userData, setUserData] = useState(null)\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    if (isUserLoggedIn() !== null) {\r\n      setUserData(JSON.parse(localStorage.getItem('userData')))\r\n    }\r\n  }, [])\r\n\r\n  //** Vars\r\n  const userAvatar = (userData && userData.avatar) || defaultAvatar\r\n\r\n  return (\r\n    <UncontrolledDropdown tag='li' className='dropdown-user nav-item'>\r\n      <DropdownToggle href='/' tag='a' className='nav-link dropdown-user-link' onClick={e => e.preventDefault()}>\r\n        <div className='user-nav d-sm-flex d-none'>\r\n          <span className='user-name font-weight-bold'>{(userData && userData['username']) || 'Metamask @ Polygon'}</span>\r\n          <span className='user-status'>{(userData && userData.role) || '0x12D8....7474'}</span>\r\n        </div>\r\n        {/* <Avatar img={userAvatar} imgHeight='40' imgWidth='40' status='online' /> */}\r\n        <Avatar color='light-warning' icon={<GiFoxHead size={40} />} status='online' />\r\n      </DropdownToggle>\r\n      <DropdownMenu right>\r\n        <DropdownItem tag={Link} to='#' onClick={e => e.preventDefault()}>\r\n          <User size={14} className='mr-75' />\r\n          <span className='align-middle'>Profile</span>\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to='#' onClick={e => e.preventDefault()}>\r\n          <Mail size={14} className='mr-75' />\r\n          <span className='align-middle'>Inbox</span>\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to='#' onClick={e => e.preventDefault()}>\r\n          <CheckSquare size={14} className='mr-75' />\r\n          <span className='align-middle'>Tasks</span>\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to='#' onClick={e => e.preventDefault()}>\r\n          <MessageSquare size={14} className='mr-75' />\r\n          <span className='align-middle'>Chats</span>\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to='/login' onClick={() => dispatch(handleLogout())}>\r\n          <span className='align-middle'><Power size={14} className='mr-75' />Disconnect</span>\r\n        </DropdownItem>\r\n      </DropdownMenu>\r\n    </UncontrolledDropdown>\r\n  )\r\n}\r\n\r\nexport default UserDropdown\r\n","export default __webpack_public_path__ + \"static/media/avatar-s-11.1d46cc62.jpg\";","// ** Dropdowns Imports\nimport { Fragment } from 'react'\n\nimport UserDropdown from './UserDropdown'\n\n// ** Third Party Components\nimport { Sun, Moon, Menu } from 'react-feather'\nimport { NavItem, NavLink } from 'reactstrap'\n\nconst NavbarUser = props => {\n  // ** Props\n  const { skin, setSkin, setMenuVisibility } = props\n\n  // ** Function to toggle Theme (Light/Dark)\n  const ThemeToggler = () => {\n    if (skin === 'dark') {\n      return <Sun className='ficon' onClick={() => setSkin('light')} />\n    } else {\n      return <Moon className='ficon' onClick={() => setSkin('dark')} />\n    }\n  }\n\n  return (\n    <Fragment>\n      <ul className='navbar-nav d-xl-none d-flex align-items-center'>\n        <NavItem className='mobile-menu mr-auto'>\n          <NavLink className='nav-menu-main menu-toggle hidden-xs is-active' onClick={() => setMenuVisibility(true)}>\n            <Menu className='ficon' />\n          </NavLink>\n        </NavItem>\n      </ul>\n      <div className='bookmark-wrapper d-flex align-items-center'>\n        <NavItem className='d-none d-lg-block'>\n          <NavLink className='nav-link-style'>\n            <ThemeToggler />\n          </NavLink>\n        </NavItem>\n      </div>\n      <ul className='nav navbar-nav align-items-center ml-auto'>\n        <UserDropdown />\n      </ul>\n    </Fragment>\n  )\n}\nexport default NavbarUser\n","import { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\r\n\r\nconst Network = () => {\r\n  const data = [\r\n    {\r\n      id: '0',\r\n      name: 'Etherum'\r\n    },\r\n    {\r\n      id: '1',\r\n      name: 'BSC Mainet'\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'Polygon Network'\r\n    },\r\n    {\r\n      id: '3',\r\n      name: 'Optimism'\r\n    },\r\n    {\r\n      id: '4',\r\n      name: 'Arbitrum'\r\n    }\r\n\r\n  ]\r\n\r\n  const [network, setNetwork] = useState('Polygon Network')\r\n\r\n  const toggleNetwork = (e, i) => {\r\n    e.preventDefault()\r\n    setNetwork(i)\r\n  }\r\n\r\n  const networkItems = data.map(i => {\r\n    return (\r\n      <DropdownItem href='/' tag='a' onClick={(e) => { toggleNetwork(e, i.name) }} >{i.name}</DropdownItem>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <UncontrolledButtonDropdown style={{ marginLeft: 20, marginRight: 20 }}>\r\n      <DropdownToggle style={{ width: '15em' }} color='primary' caret>\r\n        {network}\r\n      </DropdownToggle>\r\n      <DropdownMenu style={{ relative: 'relative' }}>\r\n        {networkItems}\r\n      </DropdownMenu>\r\n    </UncontrolledButtonDropdown>\r\n  )\r\n}\r\nconst mapDispatchToProps = dispatch => ({ dispatch })\r\nexport default connect(null, mapDispatchToProps)(Network)","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport NavbarUser from './NavbarUser'\nimport Network from './Network'\n\nconst ThemeNavbar = props => {\n  // ** Props\n  const { skin, setSkin, setMenuVisibility } = props\n\n  return (\n    <Fragment>\n      <NavbarUser skin={skin} setSkin={setSkin} setMenuVisibility={setMenuVisibility} />\n      <div>\n        <Network />\n      </div>\n    </Fragment>\n  )\n}\n\nexport default ThemeNavbar\n","import { BarChart2, Power, ArrowUpRight, ArrowDownLeft, Activity } from \"react-feather\"\r\nimport { BsWallet2, BsSafe2 } from \"react-icons/bs\"\r\nimport { SiWebmoney, SiGithubactions } from \"react-icons/si\"\r\nimport { IoGitMergeOutline, IoQrCodeOutline } from \"react-icons/io5\"\r\nimport { VscTools } from \"react-icons/vsc\"\r\nimport { ImAddressBook } from \"react-icons/im\"\r\nimport { randomHexColor } from 'random-hex-color-generator'\r\n\r\nexport default [\r\n  {\r\n    id: \"home\",\r\n    title: \"Dashboard\",\r\n    icon: <BarChart2 size={20} />,\r\n    navLink: \"/home\"\r\n  },\r\n  {\r\n    id: \"assests\",\r\n    title: \"Assests\",\r\n    icon: <BsWallet2 size={20} />,\r\n    navLink: \"/asset\"\r\n  },\r\n  {\r\n    id: \"activity\",\r\n    title: \"Activity\",\r\n    icon: <Activity size={20} />,\r\n    navLink: \"/activity\"\r\n  },\r\n  {\r\n    id: 'send',\r\n    title: \"Send\",\r\n    icon: <ArrowUpRight size={20} />,\r\n    navLink: \"/send\"\r\n  },\r\n  {\r\n    id: 'receive',\r\n    title: \"Receive\",\r\n    icon: <ArrowDownLeft size={20} />,\r\n    navLink: \"/receive\"\r\n  },\r\n  {\r\n    id: \"defi\",\r\n    title: \"DeFi\",\r\n    icon: <IoGitMergeOutline size={20} />,\r\n    navLink: \"/defi\"\r\n  },\r\n  {\r\n    id: \"addressbook\",\r\n    title: \"Address Book\",\r\n    icon: <ImAddressBook size={20} />,\r\n    navLink: \"/addressbook\"\r\n  },\r\n  {\r\n    id: \"manager\",\r\n    title: \"Manager\",\r\n    icon: <VscTools size={20} />,\r\n    navLink: \"/manager\"\r\n  },\r\n  {\r\n    header: 'Favourites'\r\n  },\r\n  {\r\n    id: 'sbivault',\r\n    title: 'SBI Vault',\r\n    icon: <BsSafe2 size={25} style={{ color: randomHexColor() }} />,\r\n    navLink: '#'\r\n  },\r\n  {\r\n    id: 'sbicheck',\r\n    title: 'SBI Checking',\r\n    icon: <SiWebmoney size={25} style={{ color: randomHexColor() }} />,\r\n    navLink: '#'\r\n  },\r\n  {\r\n    id: 'hdfcfix',\r\n    title: 'HDFC Fixed',\r\n    icon: <SiWebmoney size={25} style={{ color: randomHexColor() }} />,\r\n    navLink: '#'\r\n  },\r\n  {\r\n    header: ' '\r\n  },\r\n  {\r\n    id: \"disconnet\",\r\n    title: \"Disconnect\",\r\n    icon: <Power size={20} />,\r\n    navLink: \"/login\"\r\n  }\r\n]\r\n","// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport { Disc, X, Circle } from 'react-feather'\r\n\r\n// ** Config\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nconst VerticalMenuHeader = props => {\r\n  // ** Props\r\n  const { menuCollapsed, setMenuCollapsed, setMenuVisibility, setGroupOpen, menuHover } = props\r\n\r\n  // ** Reset open group\r\n  useEffect(() => {\r\n    if (!menuHover && menuCollapsed) setGroupOpen([])\r\n  }, [menuHover, menuCollapsed])\r\n\r\n  // ** Menu toggler component\r\n  const Toggler = () => {\r\n    if (!menuCollapsed) {\r\n      return (\r\n        <Disc\r\n          size={20}\r\n          data-tour='toggle-icon'\r\n          className='text-primary toggle-icon d-none d-xl-block'\r\n          onClick={() => setMenuCollapsed(true)}\r\n        />\r\n      )\r\n    } else {\r\n      return (\r\n        <Circle\r\n          size={20}\r\n          data-tour='toggle-icon'\r\n          className='text-primary toggle-icon d-none d-xl-block'\r\n          onClick={() => setMenuCollapsed(false)}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='navbar-header'>\r\n      <ul className='nav navbar-nav flex-row'>\r\n        <li className='nav-item mr-auto'>\r\n          <NavLink to='/' className='navbar-brand'>\r\n            <span className='brand-logo'>\r\n              <img src={themeConfig.app.appLogoImage} alt='logo' />\r\n            </span>\r\n            <label style={{ fontSize: '1.3em' }} className='brand-text mb-0'>{themeConfig.app.appName}</label>\r\n          </NavLink>\r\n        </li>\r\n        <li className='nav-item nav-toggle'>\r\n          <div className='nav-link modern-nav-toggle cursor-pointer'>\r\n            <Toggler />\r\n            <X onClick={() => setMenuVisibility(false)} className='toggle-icon icon-x d-block d-xl-none' size={20} />\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VerticalMenuHeader\r\n","// ** React Imports\nimport { useContext } from 'react'\nimport { AbilityContext } from '@src/utility/context/Can'\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveVerticalNavMenuItemComponent = item => {\n  if (item.header) return 'VerticalNavMenuSectionHeader'\n  if (item.children) return 'VerticalNavMenuGroup'\n  return 'VerticalNavMenuLink'\n}\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveHorizontalNavMenuItemComponent = item => {\n  if (item.children) return 'HorizontalNavMenuGroup'\n  return 'HorizontalNavMenuLink'\n}\n\n/**\n * Check if nav-link is active\n * @param {Object} link nav-link object\n */\n// export const isNavLinkActive = (link, currentURL, match) => {\n//   // return currentURL === link || (URLParams && Object.keys(URLParams).length && currentURLFilter === item.navLink)\n//   const getFirstObjProp = obj => obj[Object.keys(obj)[0]]\n//   return (\n//     currentURL === link ||\n//     (match !== null && match !== undefined && match.url === `${link}/${getFirstObjProp(match.params)}`)\n//   )\n// }\n\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\n  return (\n    currentURL === link ||\n    (routerProps && routerProps.meta && routerProps.meta.navLink && routerProps.meta.navLink === link)\n  )\n  // return currentURL === link\n}\n\n/**\n * Check if nav group is\n * @param {Array} children Group children\n */\n// export const isNavGroupActive = (children, currentURL, match) => {\n//   return children.some(child => {\n//     // If child have children => It's group => Go deeper(recursive)\n//     if (child.children) {\n//       return isNavGroupActive(child.children, currentURL, match)\n//     }\n//     // else it's link => Check for matched Route\n//     return isNavLinkActive(child.navLink, currentURL, match)\n//   })\n// }\nexport const isNavGroupActive = (children, currentURL, routerProps) => {\n  return children.some(child => {\n    // If child have children => It's group => Go deeper(recursive)\n    if (child.children) {\n      return isNavGroupActive(child.children, currentURL, routerProps)\n    }\n    // else it's link => Check for matched Route\n    return isNavLinkActive(child.navLink, currentURL, routerProps)\n  })\n}\n\n/**\n * Search for parent object\n * @param {Array} navigation Group children\n * @param {string} currentURL current URL\n */\n// export const search = (navigation, currentURL, match) => {\n//   let result\n//   navigation.some(child => {\n//     let children\n//     // If child have children => It's group => Go deeper(recursive)\n//     if (child.children && (children = search(child.children, currentURL, match))) {\n//       return (result = {\n//         id: child.id,\n//         children\n//       })\n//     }\n\n//     // else it's link => Check for matched Route\n//     if (isNavLinkActive(child.navLink, currentURL, match)) {\n//       return (result = {\n//         id: child.id\n//       })\n//     }\n//   })\n//   return result\n// }\n\nexport const search = (navigation, currentURL, routerProps) => {\n  let result\n  navigation.some(child => {\n    let children\n    // If child have children => It's group => Go deeper(recursive)\n    if (child.children && (children = search(child.children, currentURL, routerProps))) {\n      return (result = {\n        id: child.id,\n        children\n      })\n    }\n\n    // else it's link => Check for matched Route\n    if (isNavLinkActive(child.navLink, currentURL, routerProps)) {\n      return (result = {\n        id: child.id\n      })\n    }\n  })\n  return result\n}\n\n/**\n * Loop through nested object\n * @param {object} obj nested object\n */\nexport const getAllParents = (obj, match) => {\n  const res = []\n  const recurse = (obj, current) => {\n    for (const key in obj) {\n      const value = obj[key]\n      if (value !== undefined) {\n        if (value && typeof value === 'object') {\n          recurse(value, key)\n        } else {\n          if (key === match) {\n            res.push(value)\n          }\n        }\n      }\n    }\n  }\n  recurse(obj)\n  return res\n}\n\nexport const canViewMenuGroup = item => {\n  const ability = useContext(AbilityContext)\n  // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\n  const hasAnyVisibleChild = item.children && item.children.some(i => ability.can(i.action, i.resource))\n\n  // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\n  // ** Else check for ability using provided resource and action along with checking if has any visible child\n  if (!(item.action && item.resource)) {\n    return hasAnyVisibleChild\n  }\n  return ability.can(item.action, item.resource) && hasAnyVisibleChild\n}\n\nexport const canViewMenuItem = item => {\n  const ability = useContext(AbilityContext)\n  return ability.can(item.action, item.resource)\n}\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink, useLocation, matchPath, useParams } from 'react-router-dom'\n\n// ** Third Party Components\nimport { Badge } from 'reactstrap'\nimport classnames from 'classnames'\n\n// ** Vertical Menu Array Of Items\nimport navigation from '@src/navigation/vertical'\n\n// ** Utils\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils'\n\nconst VerticalNavMenuLink = ({\n  item,\n  groupActive,\n  setGroupActive,\n  activeItem,\n  setActiveItem,\n  groupOpen,\n  setGroupOpen,\n  toggleActiveGroup,\n  parentItem,\n  routerProps,\n  currentActiveItem\n}) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? 'a' : NavLink\n\n  // ** URL Vars\n  const location = useLocation()\n  const currentURL = location.pathname\n\n  // ** To match path\n  const match = matchPath(currentURL, {\n    path: `${item.navLink}/:param`,\n    exact: true,\n    strict: false\n  })\n\n  // ** Search for current item parents\n  const searchParents = (navigation, currentURL) => {\n    const parents = search(navigation, currentURL, routerProps) // Search for parent object\n    const allParents = getAllParents(parents, 'id') // Parents Object to Parents Array\n    return allParents\n  }\n\n  // ** URL Vars\n  const resetActiveGroup = navLink => {\n    const parents = search(navigation, navLink, match)\n    toggleActiveGroup(item.id, parents)\n  }\n\n  // ** Reset Active & Open Group Arrays\n  const resetActiveAndOpenGroups = () => {\n    setGroupActive([])\n    setGroupOpen([])\n  }\n\n  // ** Checks url & updates active item\n  useEffect(() => {\n    if (currentActiveItem !== null) {\n      setActiveItem(currentActiveItem)\n      const arr = searchParents(navigation, currentURL)\n      setGroupActive([...arr])\n    }\n  }, [location])\n\n  return (\n    <li\n      className={classnames({\n        'nav-item': !item.children,\n        disabled: item.disabled,\n        active: item.navLink === activeItem\n      })}\n    >\n      <LinkTag\n        className='d-flex align-items-center'\n        target={item.newTab ? '_blank' : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || '/'\n            }\n          : {\n              to: item.navLink || '/',\n              isActive: (match, location) => {\n                if (!match) {\n                  return false\n                }\n\n                if (match.url && match.url !== '' && match.url === item.navLink) {\n                  currentActiveItem = item.navLink\n                }\n              }\n            })}\n        /*eslint-enable */\n        onClick={e => {\n          if (!item.navLink.length) {\n            e.preventDefault()\n          }\n          parentItem ? resetActiveGroup(item.navLink) : resetActiveAndOpenGroups()\n        }}\n      >\n        {item.icon}\n        <span className='menu-item text-truncate'>{item.title}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuLink\n","// ** React Imports\nimport { Link, useLocation } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { Collapse, Badge } from 'reactstrap'\n\n// ** Vertical Menu Items Component\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\n\n// ** Utils\nimport { isNavGroupActive, getAllParents } from '@layouts/utils'\n\nconst VerticalNavMenuGroup = ({\n  item,\n  groupActive,\n  setGroupActive,\n  activeItem,\n  setActiveItem,\n  groupOpen,\n  setGroupOpen,\n  parentItem,\n  menuCollapsed,\n  menuHover,\n  routerProps,\n  currentActiveItem\n}) => {\n  // ** Current Val\n  const currentURL = useLocation().pathname\n\n  // ** Toggles Open Group\n  const toggleOpenGroup = (item, parentItem) => {\n    let openArr = groupOpen\n    let allParents\n\n    if (parentItem) {\n      allParents = getAllParents(parentItem, 'id')\n      allParents.pop()\n    }\n\n    // ** If user clicked on menu group inside already opened group i.g. when user click on blog group inside pages group\n    if (groupOpen && allParents && groupOpen[0] === allParents[0]) {\n      groupOpen.includes(item) ? openArr.splice(openArr.indexOf(item), 1) : openArr.push(item)\n    } else {\n      openArr = []\n      if (!groupOpen.includes(item)) {\n        openArr.push(item)\n      }\n    }\n\n    // ** Set Open Group\n    setGroupOpen([...openArr])\n  }\n\n  // ** Toggle Active Group\n  const toggleActiveGroup = (item, parentItem) => {\n    let activeArr = groupActive\n    let allParents\n\n    if (parentItem) {\n      allParents = getAllParents(parentItem, 'id')\n      activeArr = allParents\n    } else {\n      activeArr.includes(item) ? activeArr.splice(activeArr.indexOf(item), 1) : activeArr.push(item)\n    }\n\n    // ** Set open group removing any activegroup item present in opengroup state\n    const openArr = groupOpen.filter(val => !activeArr.includes(val))\n    setGroupOpen([...openArr])\n\n    // **  Set Active Group\n    setGroupActive([...activeArr])\n  }\n\n  // ** On Group Item Click\n  const onCollapseClick = (e, item) => {\n    if ((groupActive && groupActive.includes(item.id)) || isNavGroupActive(item.children, currentURL, routerProps)) {\n      toggleActiveGroup(item.id)\n    } else {\n      toggleOpenGroup(item.id, parentItem)\n    }\n\n    e.preventDefault()\n  }\n\n  // ** Returns condition to add open class\n  const openClassCondition = id => {\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\n      if (groupActive.includes(id) || groupOpen.includes(item.id)) {\n        return true\n      }\n    } else if (groupActive.includes(id) && menuCollapsed && menuHover === false) {\n      return false\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <li\n      className={classnames('nav-item has-sub', {\n        open: openClassCondition(item.id),\n        'menu-collapsed-open': groupActive.includes(item.id),\n        'sidebar-group-active': groupActive.includes(item.id) || groupOpen.includes(item.id)\n      })}\n    >\n      <Link className='d-flex align-items-center' to='/' onClick={e => onCollapseClick(e, item)}>\n        {item.icon}\n        <span className='menu-title text-truncate'>{item.title}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </Link>\n\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\n      <ul className='menu-content'>\n        <Collapse isOpen={(groupActive && groupActive.includes(item.id)) || (groupOpen && groupOpen.includes(item.id))}>\n          <VerticalNavMenuItems\n            items={item.children}\n            groupActive={groupActive}\n            setGroupActive={setGroupActive}\n            groupOpen={groupOpen}\n            setGroupOpen={setGroupOpen}\n            toggleActiveGroup={toggleActiveGroup}\n            parentItem={item}\n            menuCollapsed={menuCollapsed}\n            menuHover={menuHover}\n            routerProps={routerProps}\n            currentActiveItem={currentActiveItem}\n            activeItem={activeItem}\n            setActiveItem={setActiveItem}\n          />\n        </Collapse>\n      </ul>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuGroup\n","// ** Third Party Components\nimport { MoreHorizontal } from 'react-feather'\n\nconst VerticalNavMenuSectionHeader = ({ item, index }) => {\n  return (\n    <li className='navigation-header'>\n      <span>{item.header}</span>\n      <MoreHorizontal className='feather-more-horizontal' />\n    </li>\n  )\n}\n\nexport default VerticalNavMenuSectionHeader\n","import { DropdownToggle, DropdownItem, DropdownMenu, ButtonDropdown, UncontrolledButtonDropdown, Button, Row, Col } from \"reactstrap\"\r\nimport { IoQrCodeOutline } from 'react-icons/io5'\r\nimport { SiWebmoney, SiGithubactions } from \"react-icons/si\"\r\nimport { FaRegCopy } from 'react-icons/fa'\r\nimport { GoLinkExternal } from 'react-icons/go'\r\nimport { BsSafe2 } from 'react-icons/bs'\r\nimport { PlusCircle } from \"react-feather\"\r\nimport { randomHexColor } from 'random-hex-color-generator'\r\nimport Avatar from '@components/avatar'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst OwnerDisplay = () => {\r\n  const stylecontainer = {\r\n    textAlign: 'center',\r\n    display: 'flex'\r\n  }\r\n  return (\r\n    <div style={stylecontainer}>\r\n      <Row style={{ flexShrink: 1, flexGrow: 1 }} className='d-flex flex-column'>\r\n        <Col className='my-1'>\r\n          <Button.Ripple size='lg' outline color='success' disabled>\r\n            <span className='align-middle '>Polygon Network</span>\r\n          </Button.Ripple>\r\n        </Col>\r\n        <Col>\r\n          <Link to='/home'>\r\n            <Avatar size='xl' color='light-danger' title='SBI Vault' icon={<BsSafe2 size={25} />} href='/home' />\r\n          </Link>\r\n        </Col>\r\n        <Col>\r\n          <UncontrolledButtonDropdown style={{ minWidth: \"90%\" }}>\r\n            <DropdownToggle size=\"lg\" className='dropdown-toggle-split my-1' color='primary' outline caret>\r\n              SBI Vault\r\n            </DropdownToggle>\r\n            <DropdownMenu left  >\r\n              <DropdownItem href='/manager' tag='a'><PlusCircle className='mr-1' size={25} />Add Vault or Sega</DropdownItem>\r\n              <DropdownItem href='#' tag='a'> <BsSafe2 style={{ color: randomHexColor() }} size={20} className='mr-1' />HDFC Vault - 0 MATIC\r\n                <DropdownItem><SiWebmoney style={{ color: randomHexColor() }} size={20} className='mr-1' />HDFC Fixed - 0 MATIC</DropdownItem>\r\n                <DropdownItem><SiWebmoney style={{ color: randomHexColor() }} size={20} className='mr-1' />HDFC Savings - 0 MATIC</DropdownItem>\r\n              </DropdownItem>\r\n              <DropdownItem href='#' tag='a'><BsSafe2 style={{ color: randomHexColor() }} size={20} className='mr-1' />SBI Vault - 0 MATIC\r\n                <DropdownItem><SiWebmoney style={{ color: randomHexColor() }} size={20} className='mr-1' />SBI Checking - 0 MATIC</DropdownItem>\r\n              </DropdownItem>\r\n              <DropdownItem href='#' tag='a'><BsSafe2 style={{ color: randomHexColor() }} size={20} className='mr-1' />ICICI Vault - 0 MATIC\r\n                <DropdownItem><SiWebmoney style={{ color: randomHexColor() }} size={20} className='mr-1' />ICICI Savings - 0 MATIC</DropdownItem>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n          <UncontrolledButtonDropdown style={{ minWidth: \"90%\" }}>\r\n            <DropdownToggle size=\"lg\" className='dropdown-toggle-split mb-1' color='primary' outline caret>\r\n              Quick Actions\r\n            </DropdownToggle>\r\n            <DropdownMenu style={{ width: '15em' }} left >\r\n              <DropdownItem href='#' tag='a'>\r\n                <h3>SBI Vault</h3>\r\n                <h6 style={{ color: '#D0CAB2' }}>n1n6.....Wu5</h6>\r\n              </DropdownItem>\r\n              <DropdownItem divider></DropdownItem>\r\n              <DropdownItem style={{ display: 'flex', justifyContent: 'space-between' }} href='#' tag='a'>\r\n                <IoQrCodeOutline size={25} />\r\n                <FaRegCopy size={25} />\r\n                <GoLinkExternal size={25} />\r\n              </DropdownItem>\r\n              <DropdownItem divider></DropdownItem>\r\n              <DropdownItem className='text-center' href='/send' tag='a'>\r\n                <Button.Ripple color='primary' style={{ width: '120px' }}>SEND</Button.Ripple>\r\n              </DropdownItem>\r\n              <DropdownItem divider></DropdownItem>\r\n              <DropdownItem className='text-center' href='/receive' tag='a'>\r\n                <Button.Ripple color='primary' style={{ width: '120px' }}>RECEIVE</Button.Ripple>\r\n              </DropdownItem>\r\n              <DropdownItem divider></DropdownItem>\r\n              <DropdownItem className='text-center' href='/manager' tag='a'>\r\n                <Button.Ripple color='primary' style={{ width: '120px' }}>MANAGE</Button.Ripple>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OwnerDisplay","// ** Vertical Menu Components\r\nimport VerticalNavMenuLink from './VerticalNavMenuLink'\r\nimport VerticalNavMenuGroup from './VerticalNavMenuGroup'\r\nimport VerticalNavMenuSectionHeader from './VerticalNavMenuSectionHeader'\r\n\r\n// ** Utils\r\nimport { resolveVerticalNavMenuItemComponent as resolveNavItemComponent } from '@layouts/utils'\r\nimport OwnerDisplay from '../../../../../navigation/vertical/OwnerDisplay'\r\n\r\nconst VerticalMenuNavItems = props => {\r\n  // ** Components Object\r\n  const Components = {\r\n    VerticalNavMenuSectionHeader,\r\n    VerticalNavMenuGroup,\r\n    VerticalNavMenuLink\r\n  }\r\n\r\n  // ** Render Nav Menu Items\r\n  const RenderNavItems = props.items.map((item, index) => {\r\n    const TagName = Components[resolveNavItemComponent(item)]\r\n\r\n    return <TagName key={item.id || item.header} item={item} {...props} />\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <OwnerDisplay />\r\n      {RenderNavItems}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default VerticalMenuNavItems\r\n","// ** React Imports\nimport { Fragment, useState, useRef } from 'react'\n\n// ** Vertical Menu Items Array\nimport navigation from '@src/navigation/vertical'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\n// ** Vertical Menu Components\nimport VerticalMenuHeader from './VerticalMenuHeader'\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\n\nconst Sidebar = props => {\n  // ** Props\n  const { menuCollapsed, routerProps, menu, currentActiveItem, skin } = props\n\n  // ** States\n  const [groupOpen, setGroupOpen] = useState([])\n  const [groupActive, setGroupActive] = useState([])\n  const [activeItem, setActiveItem] = useState(null)\n\n  // ** Menu Hover State\n  const [menuHover, setMenuHover] = useState(false)\n\n  // ** Ref\n  const shadowRef = useRef(null)\n\n  // ** Function to handle Mouse Enter\n  const onMouseEnter = () => {\n    if (menuCollapsed) {\n      setMenuHover(true)\n    }\n  }\n\n  // ** Scroll Menu\n  const scrollMenu = container => {\n    if (shadowRef && container.scrollTop > 0) {\n      if (!shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.add('d-block')\n      }\n    } else {\n      if (shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.remove('d-block')\n      }\n    }\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={classnames('main-menu menu-fixed menu-accordion menu-shadow', {\n          expanded: menuHover || menuCollapsed === false,\n          'menu-light': skin !== 'semi-dark' && skin !== 'dark',\n          'menu-dark': skin === 'semi-dark' || skin === 'dark'\n        })}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={() => setMenuHover(false)}\n      >\n        {menu ? (\n          menu(props)\n        ) : (\n          <Fragment>\n            {/* Vertical Menu Header */}\n            <VerticalMenuHeader setGroupOpen={setGroupOpen} menuHover={menuHover} {...props} />\n            {/* Vertical Menu Header Shadow */}\n            <div className='shadow-bottom' ref={shadowRef}></div>\n            {/* Perfect Scrollbar */}\n            <PerfectScrollbar\n              className='main-menu-content'\n              options={{ wheelPropagation: false }}\n              onScrollY={container => scrollMenu(container)}\n            >\n              <ul className='navigation navigation-main'>\n                <VerticalNavMenuItems\n                  items={navigation}\n                  groupActive={groupActive}\n                  setGroupActive={setGroupActive}\n                  activeItem={activeItem}\n                  setActiveItem={setActiveItem}\n                  groupOpen={groupOpen}\n                  setGroupOpen={setGroupOpen}\n                  routerProps={routerProps}\n                  menuCollapsed={menuCollapsed}\n                  menuHover={menuHover}\n                  currentActiveItem={currentActiveItem}\n                />\n              </ul>\n            </PerfectScrollbar>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Sidebar\n","//** React Imports\r\nimport { useEffect } from 'react'\r\n\r\n// ** Store & Actions\r\nimport { handleRTL } from '@store/actions/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useRTL = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const isRtl = useSelector(state => state.layout.isRTL)\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(isRtl) : value\r\n      dispatch(handleRTL(valueToStore))\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get HTML Tag\r\n    const element = document.getElementsByTagName('html')[0]\r\n\r\n    // ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\r\n    if (isRtl) {\r\n      element.setAttribute('dir', 'rtl')\r\n    } else {\r\n      element.setAttribute('dir', 'ltr')\r\n    }\r\n  }, [isRtl])\r\n\r\n  return [isRtl, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useNavbarType = () => {\r\n  // ** State\r\n  const [navbarType, setNavbarType] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.navbar.type\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.navbar.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(navbarType) : value\r\n\r\n      // ** Set state\r\n      setNavbarType(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [navbarType, setValue]\r\n}\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useFooterType = () => {\r\n  // ** State\r\n  const [footerType, setFooterType] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.footer.type\r\n    } catch (error) {\r\n      // ** If error also initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.footer.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(footerType) : value\r\n\r\n      // ** Set state\r\n      setFooterType(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [footerType, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useNavbarColor = () => {\r\n  // ** State\r\n  const [navbarColor, setNavbarColor] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.navbar.backgroundColor\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.navbar.backgroundColor\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(navbarColor) : value\r\n\r\n      // ** Set state\r\n      setNavbarColor(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [navbarColor, setValue]\r\n}\r\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleMenuCollapsed, handleContentWidth, handleMenuHidden } from '@store/actions/layout'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ArrowUp } from 'react-feather'\nimport ScrollToTop from 'react-scroll-up'\nimport { Navbar, Button } from 'reactstrap'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\n// ** Custom Components\nimport Customizer from '@components/customizer'\nimport FooterComponent from './components/footer'\nimport NavbarComponent from './components/navbar'\nimport SidebarComponent from './components/menu/vertical-menu'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\nimport { useSkin } from '@hooks/useSkin'\nimport { useNavbarType } from '@hooks/useNavbarType'\nimport { useFooterType } from '@hooks/useFooterType'\nimport { useNavbarColor } from '@hooks/useNavbarColor'\n\n// ** Styles\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss'\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss'\n\nconst VerticalLayout = props => {\n  // ** Props\n  const { children, navbar, footer, menu, routerProps, currentActiveItem } = props\n\n  // ** Hooks\n  const [skin, setSkin] = useSkin()\n  const [isRtl, setIsRtl] = useRTL()\n  const [navbarType, setNavbarType] = useNavbarType()\n  const [footerType, setFooterType] = useFooterType()\n  const [navbarColor, setNavbarColor] = useNavbarColor()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [menuVisibility, setMenuVisibility] = useState(false)\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector(state => state.layout)\n\n  // ** Update Window Width\n  const handleWindowWidth = () => {\n    setWindowWidth(window.innerWidth)\n  }\n\n  // ** Vars\n  const location = useLocation()\n  const contentWidth = layoutStore.contentWidth\n  const menuCollapsed = layoutStore.menuCollapsed\n  const isHidden = layoutStore.menuHidden\n\n  // ** Toggles Menu Collapsed\n  const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val))\n\n  // ** Handles Content Width\n  const setContentWidth = val => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\n\n  //** This function will detect the Route Change and will hide the menu on menu item click\n  useEffect(() => {\n    if (menuVisibility && windowWidth < 1200) {\n      setMenuVisibility(false)\n    }\n  }, [location])\n\n  //** Sets Window Size & Layout Props\n  useEffect(() => {\n    if (window !== undefined) {\n      window.addEventListener('resize', handleWindowWidth)\n    }\n  }, [windowWidth])\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  }\n\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static',\n    hidden: 'navbar-hidden'\n  }\n\n  const navbarClasses = {\n    floating: 'floating-nav',\n    sticky: 'fixed-top',\n    static: 'navbar-static-top',\n    hidden: 'd-none'\n  }\n\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\n\n  if (!isMounted) {\n    return null\n  }\n  return (\n    <div\n      className={classnames(\n        `wrapper vertical-layout ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\n          footerClasses[footerType] || 'footer-static'\n        }`,\n        {\n          // Modern Menu\n          'vertical-menu-modern': windowWidth >= 1200,\n          'menu-collapsed': menuCollapsed && windowWidth >= 1200,\n          'menu-expanded': !menuCollapsed && windowWidth > 1200,\n\n          // Overlay Menu\n          'vertical-overlay-menu': windowWidth < 1200,\n          'menu-hide': !menuVisibility && windowWidth < 1200,\n          'menu-open': menuVisibility && windowWidth < 1200\n        }\n      )}\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\n    >\n      {!isHidden ? (\n        <SidebarComponent\n          skin={skin}\n          menu={menu}\n          menuCollapsed={menuCollapsed}\n          menuVisibility={menuVisibility}\n          setMenuCollapsed={setMenuCollapsed}\n          setMenuVisibility={setMenuVisibility}\n          routerProps={routerProps}\n          currentActiveItem={currentActiveItem}\n        />\n      ) : null}\n\n      <Navbar\n        expand='lg'\n        light={skin !== 'dark'}\n        dark={skin === 'dark' || bgColorCondition}\n        color={bgColorCondition ? navbarColor : undefined}\n        className={classnames(\n          `header-navbar navbar align-items-center ${navbarClasses[navbarType] || 'floating-nav'} navbar-shadow`\n        )}\n      >\n        <div className='navbar-container d-flex content'>\n          {navbar ? (\n            navbar({ setMenuVisibility, skin, setSkin })\n          ) : (\n            <NavbarComponent setMenuVisibility={setMenuVisibility} skin={skin} setSkin={setSkin} />\n          )}\n        </div>\n      </Navbar>\n      {children}\n\n      {/* Vertical Nav Menu Overlay */}\n      <div\n        className={classnames('sidenav-overlay', {\n          show: menuVisibility\n        })}\n        onClick={() => setMenuVisibility(false)}\n      ></div>\n      {/* Vertical Nav Menu Overlay */}\n\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          setSkin={setSkin}\n          footerType={footerType}\n          setFooterType={setFooterType}\n          navbarType={navbarType}\n          setNavbarType={setNavbarType}\n          navbarColor={navbarColor}\n          setNavbarColor={setNavbarColor}\n          isRtl={isRtl}\n          setIsRtl={setIsRtl}\n          layout={props.layout}\n          setLayout={props.setLayout}\n          isHidden={isHidden}\n          setIsHidden={setIsHidden}\n          contentWidth={contentWidth}\n          setContentWidth={setContentWidth}\n          menuCollapsed={menuCollapsed}\n          setMenuCollapsed={setMenuCollapsed}\n          transition={props.transition}\n          setTransition={props.setTransition}\n          themeConfig={themeConfig}\n        />\n      ) : null}\n      <footer\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n          'd-none': footerType === 'hidden'\n        })}\n      >\n        {footer ? (\n          footer({ footerType, footerClasses })\n        ) : (\n          <FooterComponent footerType={footerType} footerClasses={footerClasses} />\n        )}\n      </footer>\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className='scroll-to-top'>\n          <ScrollToTop showUnder={300} style={{ bottom: '5%' }}>\n            <Button className='btn-icon' color='primary'>\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default VerticalLayout\n","// !Do not remove the Layout import\nimport Layout from '@layouts/VerticalLayout'\n\n// ** Components\n// import CustomMenu from './components/Menu'\n// import CustomNavbar from './components/Navbar'\n// import CustomFooter from './components/Footer'\n\nconst VerticalLayout = props => (\n  <Layout\n    // menu={props => <CustomMenu {...props} />}\n    // navbar={props => <CustomNavbar {...props} />}\n    // footer={props => <CustomFooter {...props} />}\n    {...props}\n  >\n    {props.children}\n  </Layout>\n)\n\nexport default VerticalLayout\n","import { Mail, Home } from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'home',\r\n    title: 'Home',\r\n    icon: <Home size={20} />,\r\n    navLink: '/home'\r\n  },\r\n  {\r\n    id: 'secondPage',\r\n    title: 'Second Page',\r\n    icon: <Mail size={20} />,\r\n    navLink: '/second-page'\r\n  }\r\n]\r\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\n\n// ** Horizontal menu items array\nimport navigation from '@src/navigation/horizontal'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Utils\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils'\n\nconst HorizontalNavMenuLink = ({\n  item,\n  setOpenDropdown,\n  setGroupActive,\n  activeItem,\n  setActiveItem,\n  routerProps,\n  currentActiveItem,\n  isChild\n}) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? 'a' : NavLink\n\n  // ** URL Vars\n  const location = useLocation()\n  const currentURL = location.pathname\n\n  const navLinkActive = isNavLinkActive(item.navLink, currentURL, routerProps)\n\n  // ** Get parents of current items\n  const searchParents = (navigation, currentURL) => {\n    const parents = search(navigation, currentURL, routerProps) // Search for parent object\n    const allParents = getAllParents(parents, 'id') // Parents Object to Parents Array\n    allParents.pop()\n    return allParents\n  }\n\n  // ** Remove all items from OpenDropdown array\n  const resetOpenDropdowns = () => setOpenDropdown([])\n\n  // ** On mount update active group array\n  useEffect(() => {\n    if (currentActiveItem !== null) {\n      setActiveItem(currentActiveItem)\n      const arr = searchParents(navigation, currentURL)\n      setGroupActive([...arr])\n    }\n  }, [location])\n\n  return (\n    <li\n      className={classnames('nav-item', {\n        active: item.navLink === activeItem,\n        disabled: item.disabled\n      })}\n      onClick={resetOpenDropdowns}\n    >\n      <LinkTag\n        className={classnames('d-flex align-items-center', {\n          'dropdown-item': isChild,\n          'nav-link': !isChild\n        })}\n        tag={LinkTag}\n        target={item.newTab ? '_blank' : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || '/'\n            }\n          : {\n              to: item.navLink || '/',\n              isActive: (match, location) => {\n                if (!match) {\n                  return false\n                }\n\n                if (match.url && match.url !== '' && match.url === item.navLink) {\n                  currentActiveItem = item.navLink\n                }\n              }\n            })}\n        /*eslint-enable */\n      >\n        {item.icon}\n        <span>{item.title}</span>\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default HorizontalNavMenuLink\n","// ** React Imports\nimport { Link, useLocation } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { Dropdown, DropdownMenu, DropdownToggle } from 'reactstrap'\n\n// ** Utils\nimport { isNavGroupActive } from '@layouts/utils'\n\n// ** Horizontal Menu Items Component\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\n\nconst HorizontalNavMenuGroup = props => {\n  // ** Props\n  const {\n    item,\n    submenu,\n    groupActive,\n    onMouseEnter,\n    onMouseLeave,\n    openDropdown,\n    setGroupActive,\n    activeItem,\n    setActiveItem,\n    routerProps,\n    setOpenDropdown,\n    currentActiveItem\n  } = props\n\n  // ** URL Var\n  const currentURL = useLocation().pathname\n\n  // ** Dropdown menu modifiers\n  const menuModifiers = {\n    setMaxHeight: {\n      enabled: true,\n      fn: data => {\n        const pageHeight = window.innerHeight,\n          ddTop = data.instance.reference.getBoundingClientRect().top,\n          ddHeight = data.popper.height\n        let maxHeight, stylesObj\n\n        // ** Calculate and set height\n        if (pageHeight - ddTop - ddHeight - 28 < 1) {\n          maxHeight = pageHeight - ddTop - 25\n          stylesObj = {\n            maxHeight,\n            overflowY: 'auto'\n          }\n        }\n\n        const ddRef = data.instance.popper.getBoundingClientRect()\n\n        // ** If there is not space left to open sub menu open it to the right\n        if (ddRef.left + ddRef.width - (window.innerWidth - 16) >= 0) {\n          data.instance.popper.closest('.dropdown').classList.add('openLeft')\n        }\n\n        return {\n          ...data,\n          styles: {\n            ...stylesObj\n          }\n        }\n      }\n    }\n  }\n  return (\n    <Dropdown\n      tag='li'\n      className={classnames({\n        'nav-item': submenu === false,\n        'dropdown-submenu': submenu === true,\n        'sidebar-group-active active':\n          isNavGroupActive(item.children, currentURL, routerProps) || groupActive.includes(item.id)\n      })}\n      isOpen={openDropdown.includes(item.id)}\n      toggle={() => onMouseEnter(item.id)}\n      onMouseEnter={() => onMouseEnter(item.id)}\n      onMouseLeave={() => onMouseLeave(item.id)}\n    >\n      <DropdownToggle\n        to='/'\n        tag={Link}\n        className={classnames('dropdown-toggle d-flex align-items-center', {\n          'dropdown-item': submenu === true,\n          'nav-link': submenu === false\n        })}\n        onClick={e => e.preventDefault()}\n      >\n        {item.icon}\n        <span>{item.title}</span>\n      </DropdownToggle>\n      <DropdownMenu tag='ul' modifiers={menuModifiers}>\n        <HorizontalNavMenuItems\n          submenu={true}\n          parentItem={item}\n          items={item.children}\n          activeItem={activeItem}\n          groupActive={groupActive}\n          routerProps={routerProps}\n          openDropdown={openDropdown}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          setActiveItem={setActiveItem}\n          setGroupActive={setGroupActive}\n          isChild={true}\n          setOpenDropdown={setOpenDropdown}\n          currentActiveItem={currentActiveItem}\n        />\n      </DropdownMenu>\n    </Dropdown>\n  )\n}\n\nexport default HorizontalNavMenuGroup\n","// ** Menu Components Imports\nimport HorizontalNavMenuLink from './HorizontalNavMenuLink'\nimport HorizontalNavMenuGroup from './HorizontalNavMenuGroup'\nimport { resolveHorizontalNavMenuItemComponent as resolveNavItemComponent } from '@layouts/utils'\n\nconst HorizontalNavMenuItems = props => {\n  // ** Components Object\n  const Components = {\n    HorizontalNavMenuGroup,\n    HorizontalNavMenuLink\n  }\n\n  // ** Render Nav Items\n  const RenderNavItems = props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n\n    return <TagName item={item} index={index} key={item.id} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default HorizontalNavMenuItems\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Horizontal Menu Array\nimport navigation from '@src/navigation/horizontal'\n\n// ** Horizontal Menu Components\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\n\nconst HorizontalMenu = ({ currentActiveItem, routerProps }) => {\n  // ** States\n  const [activeItem, setActiveItem] = useState(null)\n  const [groupActive, setGroupActive] = useState([])\n  const [openDropdown, setOpenDropdown] = useState([])\n\n  // ** On mouse enter push the ID to openDropdown array\n  const onMouseEnter = id => {\n    const arr = openDropdown\n    arr.push(id)\n    setOpenDropdown([...arr])\n  }\n\n  // ** On mouse leave remove the ID to openDropdown array\n  const onMouseLeave = id => {\n    const arr = openDropdown\n    arr.splice(arr.indexOf(id), 1)\n    setOpenDropdown([...arr])\n  }\n\n  return (\n    <div className='navbar-container main-menu-content'>\n      <ul className='nav navbar-nav' id='main-menu-navigation'>\n        <HorizontalNavMenuItems\n          submenu={false}\n          items={navigation}\n          activeItem={activeItem}\n          groupActive={groupActive}\n          routerProps={routerProps}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          openDropdown={openDropdown}\n          setActiveItem={setActiveItem}\n          setGroupActive={setGroupActive}\n          setOpenDropdown={setOpenDropdown}\n          currentActiveItem={currentActiveItem}\n        />\n      </ul>\n    </div>\n  )\n}\n\nexport default HorizontalMenu\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleMenuHidden, handleContentWidth } from '@store/actions/layout'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ArrowUp } from 'react-feather'\nimport ScrollToTop from 'react-scroll-up'\nimport { Navbar, NavItem, Button } from 'reactstrap'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\n// ** Custom Components\nimport Customizer from '@components/customizer'\nimport NavbarComponent from './components/navbar'\nimport FooterComponent from './components/footer'\nimport MenuComponent from './components/menu/horizontal-menu'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\nimport { useSkin } from '@hooks/useSkin'\nimport { useNavbarType } from '@hooks/useNavbarType'\nimport { useFooterType } from '@hooks/useFooterType'\nimport { useNavbarColor } from '@hooks/useNavbarColor'\n\n// ** Styles\nimport '@styles/base/core/menu/menu-types/horizontal-menu.scss'\n\nconst HorizontalLayout = props => {\n  // ** Props\n  const { children, navbar, footer, menu, currentActiveItem, routerProps } = props\n\n  // ** Hooks\n  const [skin, setSkin] = useSkin()\n  const [isRtl, setIsRtl] = useRTL()\n  const [navbarType, setNavbarType] = useNavbarType()\n  const [footerType, setFooterType] = useFooterType()\n  const [navbarColor, setNavbarColor] = useNavbarColor()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [navbarScrolled, setNavbarScrolled] = useState(false)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector(state => state.layout)\n\n  // ** Vars\n  const contentWidth = layoutStore.contentWidth\n  const isHidden = layoutStore.menuHidden\n\n  // ** Handles Content Width\n  const setContentWidth = val => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\n\n  // ** UseEffect Cleanup\n  const cleanup = () => {\n    setIsMounted(false)\n    setNavbarScrolled(false)\n  }\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    window.addEventListener('scroll', function () {\n      if (window.pageYOffset > 65 && navbarScrolled === false) {\n        setNavbarScrolled(true)\n      }\n      if (window.pageYOffset < 65) {\n        setNavbarScrolled(false)\n      }\n    })\n    return () => cleanup()\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  }\n\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static'\n  }\n\n  const navbarClasses = {\n    floating: 'floating-nav',\n    sticky: 'fixed-top'\n  }\n\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div\n      className={classnames(\n        `wrapper horizontal-layout horizontal-menu ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\n          footerClasses[footerType] || 'footer-static'\n        } menu-expanded`\n      )}\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\n    >\n      <Navbar\n        expand='lg'\n        className={classnames('header-navbar navbar-fixed align-items-center navbar-shadow navbar-brand-center', {\n          'navbar-scrolled': navbarScrolled\n        })}\n      >\n        {!navbar && (\n          <div className='navbar-header d-xl-block d-none'>\n            <ul className='nav navbar-nav'>\n              <NavItem>\n                <Link to='/' className='navbar-brand'>\n                  <span className='brand-logo'>\n                    <img src={themeConfig.app.appLogoImage} alt='logo' />\n                  </span>\n                  <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\n                </Link>\n              </NavItem>\n            </ul>\n          </div>\n        )}\n\n        <div className='navbar-container d-flex content'>\n          {navbar ? navbar({ skin, setSkin }) : <NavbarComponent skin={skin} setSkin={setSkin} />}\n        </div>\n      </Navbar>\n      {!isHidden ? (\n        <div className='horizontal-menu-wrapper'>\n          <Navbar\n            tag='div'\n            expand='sm'\n            light={skin !== 'dark'}\n            dark={skin === 'dark' || bgColorCondition}\n            className={classnames(`header-navbar navbar-horizontal navbar-shadow menu-border`, {\n              [navbarClasses[navbarType]]: navbarType !== 'static',\n              'floating-nav': (!navbarClasses[navbarType] && navbarType !== 'static') || navbarType === 'floating'\n            })}\n          >\n            {menu ? (\n              menu({ routerProps, currentActiveItem })\n            ) : (\n              <MenuComponent routerProps={routerProps} currentActiveItem={currentActiveItem} />\n            )}\n          </Navbar>\n        </div>\n      ) : null}\n\n      {children}\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          setSkin={setSkin}\n          footerType={footerType}\n          setFooterType={setFooterType}\n          navbarType={navbarType}\n          setNavbarType={setNavbarType}\n          navbarColor={navbarColor}\n          setNavbarColor={setNavbarColor}\n          isRtl={isRtl}\n          setIsRtl={setIsRtl}\n          layout={props.layout}\n          setLayout={props.setLayout}\n          isHidden={isHidden}\n          setIsHidden={setIsHidden}\n          contentWidth={contentWidth}\n          setContentWidth={setContentWidth}\n          transition={props.transition}\n          setTransition={props.setTransition}\n          themeConfig={themeConfig}\n        />\n      ) : null}\n      <footer\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n          'd-none': footerType === 'hidden'\n        })}\n      >\n        {footer ? (\n          footer({ footerType, footerClasses })\n        ) : (\n          <FooterComponent footerType={footerType} footerClasses={footerClasses} />\n        )}\n      </footer>\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className='scroll-to-top'>\n          <ScrollToTop showUnder={300} style={{ bottom: '5%' }}>\n            <Button className='btn-icon' color='primary'>\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\nexport default HorizontalLayout\n","// !Do not remove the Layout import\nimport Layout from '@layouts/HorizontalLayout'\n\n// ** Components\n// import CustomMenu from './components/Menu'\n// import CustomNavbar from './components/Navbar'\n// import CustomFooter from './components/Footer'\n\nconst HorizontalLayout = props => (\n  <Layout\n    // menu={props => <CustomMenu {...props} />}\n    // navbar={props => <CustomNavbar {...props} />}\n    // footer={props => <CustomFooter {...props} />}\n    {...props}\n  >\n    {props.children}\n  </Layout>\n)\n\nexport default HorizontalLayout\n","// ** React Imports\r\nimport { Suspense, useContext, lazy } from 'react'\r\n\r\n// ** Utils\r\nimport { isUserLoggedIn } from '@utils'\r\nimport { useLayout } from '@hooks/useLayout'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\nimport { useRouterTransition } from '@hooks/useRouterTransition'\r\n\r\n// ** Custom Components\r\n// import Spinner from '@components/spinner/Loading-spinner' // Uncomment if your require content fallback\r\nimport LayoutWrapper from '@layouts/components/layout-wrapper'\r\n\r\n// ** Router Components\r\nimport { BrowserRouter as AppRouter, Route, Switch, Redirect } from 'react-router-dom'\r\n\r\n// ** Routes & Default Routes\r\nimport { DefaultRoute, Routes } from './routes'\r\n\r\n// ** Layouts\r\nimport BlankLayout from '@layouts/BlankLayout'\r\nimport VerticalLayout from '@src/layouts/VerticalLayout'\r\nimport HorizontalLayout from '@src/layouts/HorizontalLayout'\r\n\r\nconst Router = () => {\r\n  // ** Hooks\r\n  const [layout, setLayout] = useLayout()\r\n  const [transition, setTransition] = useRouterTransition()\r\n\r\n  // ** ACL Ability Context\r\n  const ability = useContext(AbilityContext)\r\n\r\n  // ** Default Layout\r\n  const DefaultLayout = layout === 'horizontal' ? 'HorizontalLayout' : 'VerticalLayout'\r\n\r\n  // ** All of the available layouts\r\n  const Layouts = { BlankLayout, VerticalLayout, HorizontalLayout }\r\n\r\n  // ** Current Active Item\r\n  const currentActiveItem = null\r\n\r\n  // ** Return Filtered Array of Routes & Paths\r\n  const LayoutRoutesAndPaths = layout => {\r\n    const LayoutRoutes = []\r\n    const LayoutPaths = []\r\n\r\n    if (Routes) {\r\n      Routes.filter(route => {\r\n        // ** Checks if Route layout or Default layout matches current layout\r\n        if (route.layout === layout || (route.layout === undefined && DefaultLayout === layout)) {\r\n          LayoutRoutes.push(route)\r\n          LayoutPaths.push(route.path)\r\n        }\r\n      })\r\n    }\r\n\r\n    return { LayoutRoutes, LayoutPaths }\r\n  }\r\n\r\n  const NotAuthorized = lazy(() => import('@src/views/NotAuthorized'))\r\n\r\n  // ** Init Error Component\r\n  const Error = lazy(() => import('@src/views/Error'))\r\n\r\n  /**\r\n   ** Final Route Component Checks for Login & User Role and then redirects to the route\r\n   */\r\n  const FinalRoute = props => {\r\n    const route = props.route\r\n    let action, resource\r\n\r\n    // ** Assign vars based on route meta\r\n    if (route.meta) {\r\n      action = route.meta.action ? route.meta.action : null\r\n      resource = route.meta.resource ? route.meta.resource : null\r\n    }\r\n\r\n    if (\r\n      (!isUserLoggedIn() && route.meta === undefined) ||\r\n      (!isUserLoggedIn() && route.meta && !route.meta.authRoute && !route.meta.publicRoute)\r\n    ) {\r\n      /**\r\n       ** If user is not Logged in & route meta is undefined\r\n       ** OR\r\n       ** If user is not Logged in & route.meta.authRoute, !route.meta.publicRoute are undefined\r\n       ** Then redirect user to login\r\n       */\r\n\r\n      return <Redirect to='/login' />\r\n    } else if (route.meta && route.meta.authRoute && isUserLoggedIn()) {\r\n      // ** If route has meta and authRole and user is Logged in then redirect user to home page (DefaultRoute)\r\n      return <Redirect to='/' />\r\n    } else if (isUserLoggedIn() && !ability.can(action || 'read', resource)) {\r\n      // ** If user is Logged in and doesn't have ability to visit the page redirect the user to Not Authorized\r\n      return <Redirect to='/misc/not-authorized' />\r\n    } else {\r\n      // ** If none of the above render component\r\n      return <route.component {...props} />\r\n    }\r\n  }\r\n\r\n  // ** Return Route to Render\r\n  const ResolveRoutes = () => {\r\n    return Object.keys(Layouts).map((layout, index) => {\r\n      // ** Convert Layout parameter to Layout Component\r\n      // ? Note: make sure to keep layout and component name equal\r\n\r\n      const LayoutTag = Layouts[layout]\r\n\r\n      // ** Get Routes and Paths of the Layout\r\n      const { LayoutRoutes, LayoutPaths } = LayoutRoutesAndPaths(layout)\r\n\r\n      // ** We have freedom to display different layout for different route\r\n      // ** We have made LayoutTag dynamic based on layout, we can also replace it with the only layout component,\r\n      // ** that we want to implement like VerticalLayout or HorizontalLayout\r\n      // ** We segregated all the routes based on the layouts and Resolved all those routes inside layouts\r\n\r\n      // ** RouterProps to pass them to Layouts\r\n      const routerProps = {}\r\n\r\n      return (\r\n        <Route path={LayoutPaths} key={index}>\r\n          <LayoutTag\r\n            routerProps={routerProps}\r\n            layout={layout}\r\n            setLayout={setLayout}\r\n            transition={transition}\r\n            setTransition={setTransition}\r\n            currentActiveItem={currentActiveItem}\r\n          >\r\n            <Switch>\r\n              {LayoutRoutes.map(route => {\r\n                return (\r\n                  <Route\r\n                    key={route.path}\r\n                    path={route.path}\r\n                    exact={route.exact === true}\r\n                    render={props => {\r\n                      // ** Assign props to routerProps\r\n                      Object.assign(routerProps, {\r\n                        ...props,\r\n                        meta: route.meta\r\n                      })\r\n\r\n                      return (\r\n                        <Suspense fallback={null}>\r\n                          {/* Layout Wrapper to add classes based on route's layout, appLayout and className */}\r\n                          <LayoutWrapper\r\n                            layout={DefaultLayout}\r\n                            transition={transition}\r\n                            setTransition={setTransition}\r\n                            /* Conditional props */\r\n                            /*eslint-disable */\r\n                            {...(route.appLayout\r\n                              ? {\r\n                                  appLayout: route.appLayout\r\n                                }\r\n                              : {})}\r\n                            {...(route.meta\r\n                              ? {\r\n                                  routeMeta: route.meta\r\n                                }\r\n                              : {})}\r\n                            {...(route.className\r\n                              ? {\r\n                                  wrapperClass: route.className\r\n                                }\r\n                              : {})}\r\n                            /*eslint-enable */\r\n                          >\r\n                            <route.component {...props} />\r\n                            {/* <FinalRoute route={route} {...props} /> */}\r\n                          </LayoutWrapper>\r\n                        </Suspense>\r\n                      )\r\n                    }}\r\n                  />\r\n                )\r\n              })}\r\n            </Switch>\r\n          </LayoutTag>\r\n        </Route>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <AppRouter basename={process.env.REACT_APP_BASENAME}>\r\n      <Switch>\r\n        {/* If user is logged in Redirect user to DefaultRoute else to login */}\r\n        {/* <Route\r\n          exact\r\n          path='/'\r\n          render={() => {\r\n            return isUserLoggedIn() ? <Redirect to={DefaultRoute} /> : <Redirect to='/login' />\r\n          }}\r\n        /> */}\r\n        <Route\r\n          exact\r\n          path='/'\r\n          render={() => {\r\n            return <Redirect to={DefaultRoute} />\r\n          }}\r\n        />\r\n        {/* Not Auth Route */}\r\n        <Route\r\n          exact\r\n          path='/not-authorized'\r\n          render={props => (\r\n            <Layouts.BlankLayout>\r\n              <NotAuthorized />\r\n            </Layouts.BlankLayout>\r\n          )}\r\n        />\r\n        {ResolveRoutes()}\r\n        {/* NotFound Error page */}\r\n        <Route path='*' component={Error} />/\r\n      </Switch>\r\n    </AppRouter>\r\n  )\r\n}\r\n\r\nexport default Router\r\n","//** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useLayout = () => {\r\n  // ** States\r\n  const [lastLayout, setLastLayout] = useState(null)\r\n  const [layout, setLayout] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.type\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(layout) : value\r\n\r\n      // ** Set state\r\n      setLayout(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const handleLayout = () => {\r\n    // ** If layout is horizontal & screen size is equals to or below 1200\r\n    if (layout === 'horizontal' && window.innerWidth <= 1200) {\r\n      setLayout('vertical')\r\n      setLastLayout('horizontal')\r\n    }\r\n    // ** If lastLayout is horizontal & screen size is equals to or above 1200\r\n    if (lastLayout === 'horizontal' && window.innerWidth >= 1200) {\r\n      setLayout('horizontal')\r\n    }\r\n  }\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    handleLayout()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    // ** Window Resize Event\r\n    window.addEventListener('resize', handleLayout)\r\n  }, [layout, lastLayout])\r\n\r\n  return [layout, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useRouterTransition = () => {\r\n  // ** State\r\n  const [transition, setTransition] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.routerTransition\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.routerTransition\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(transition) : value\r\n\r\n      // ** Set state\r\n      setTransition(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [transition, setValue]\r\n}\r\n","// ** Router Import\r\nimport Router from './router/Router'\r\n\r\nconst App = props => <Router />\r\n\r\nexport default App\r\n","// ** Checks if an object is empty (returns boolean)\r\nexport const isObjEmpty = obj => Object.keys(obj).length === 0\r\n\r\n// ** Returns K format from a number\r\nexport const kFormatter = num => (num > 999 ? `${(num / 1000).toFixed(1)}k` : num)\r\n\r\n// ** Converts HTML to string\r\nexport const htmlToString = html => html.replace(/<\\/?[^>]+(>|$)/g, '')\r\n\r\n// ** Checks if the passed date is today\r\nconst isToday = date => {\r\n  const today = new Date()\r\n  return (\r\n    /* eslint-disable operator-linebreak */\r\n    date.getDate() === today.getDate() &&\r\n    date.getMonth() === today.getMonth() &&\r\n    date.getFullYear() === today.getFullYear()\r\n    /* eslint-enable */\r\n  )\r\n}\r\n\r\n/**\r\n ** Format and return date in Humanize format\r\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\r\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\r\n * @param {String} value date to format\r\n * @param {Object} formatting Intl object to format with\r\n */\r\nexport const formatDate = (value, formatting = { month: 'short', day: 'numeric', year: 'numeric' }) => {\r\n  if (!value) return value\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n// ** Returns short month of passed date\r\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\r\n  const date = new Date(value)\r\n  let formatting = { month: 'short', day: 'numeric' }\r\n\r\n  if (toTimeForCurrentDay && isToday(date)) {\r\n    formatting = { hour: 'numeric', minute: 'numeric' }\r\n  }\r\n\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n/**\r\n ** Return if user is logged in\r\n ** This is completely up to you and how you want to store the token in your frontend application\r\n *  ? e.g. If you are using cookies to store the application please update this function\r\n */\r\nexport const isUserLoggedIn = () => localStorage.getItem('userData')\r\nexport const getUserData = () => JSON.parse(localStorage.getItem('userData'))\r\n\r\n/**\r\n ** This function is used for demo purpose route navigation\r\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\r\n ** Please note role field is just for showing purpose it's not used by anything in frontend\r\n ** We are checking role just for ease\r\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\r\n * @param {String} userRole Role of user\r\n */\r\nexport const getHomeRouteForLoggedInUser = userRole => {\r\n  if (userRole === 'admin') return '/'\r\n  if (userRole === 'client') return '/access-control'\r\n  return '/login'\r\n}\r\n\r\n// ** React Select Theme Colors\r\nexport const selectThemeColors = theme => ({\r\n  ...theme,\r\n  colors: {\r\n    ...theme.colors,\r\n    primary25: '#7367f01a', // for option hover bg-color\r\n    primary: '#7367f0', // for selected option bg-color\r\n    neutral10: '#7367f0', // for tags bg-color\r\n    neutral20: '#ededed', // for input border-color\r\n    neutral30: '#ededed' // for input hover border-color\r\n  }\r\n})\r\n","// ** React Imports\nimport { forwardRef } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Badge } from 'reactstrap'\nimport classnames from 'classnames'\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    color,\n    className,\n    imgClassName,\n    initials,\n    size,\n    badgeUp,\n    content,\n    icon,\n    badgeColor,\n    badgeText,\n    img,\n    imgHeight,\n    imgWidth,\n    status,\n    tag: Tag,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = str => {\n    const results = []\n    const wordArray = str.split(' ')\n    wordArray.forEach(e => {\n      results.push(e[0])\n    })\n    return results.join('')\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar', {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames('avatar-content', {\n            'position-relative': badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\n              {badgeText ? badgeText : '0'}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt='avatarImg'\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  imgClassName: Proptypes.string,\n  className: Proptypes.string,\n  src: Proptypes.string,\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  icon: Proptypes.node,\n  contentStyles: Proptypes.object,\n  badgeText: Proptypes.string,\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  badgeColor: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  color: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.')\n    }\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.')\n    }\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!')\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: 'div'\n}\n"],"sourceRoot":""}